Already logging to gdb.txt.

Thread 48 (Thread 0x7fa4e07e5700 (LWP 22073)):
#0  0x00007fa4e653b50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fa4e6536e5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fa4e6536d28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x1c6a368) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x1c68dd0, pNewSeg=pNewSeg@entry=0x7fa28a17d4f0, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x1c6a368, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0xd181d1bed0bdd0bd, 
            m_iCount = 140334273030530}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140336083924208}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 10000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x1c68dd0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fa21e7eb030
        pNewSeg = {m_pPtr = 0x7fa28a17d4f0}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x20 <Address 0x20 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fa4e07e0ad0, pIndex=0x1c68dd0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fa28a1fa940}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -528609920, 
              m_iMinInfixLen = 32676, m_iMaxSubstringLen = 29789648, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = 511619120, 
              m_bIndexSP = 162, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa28a1fa940, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346117721472}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346117721152}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa2fc01a090, m_iCount = 140334273048624}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 29789696}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fa28b14f7e0 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 9999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 202, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fa4e07e0ad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fa28a19ffa0: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fa28abe8e00 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fa21e7eb030, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x1c68e00: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x1cba220 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d4dfe8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d54b98, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x1c6ae90, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fa28a17d4a0, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fa2329e8110, m_iCount = 10000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16384}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa28abe9140, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa28a17d390, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fa28a17d440, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fa2fc019768, sQuery=..., tOutput=..., uPacketID=@0x7fa2fc01a529: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fa4e07e2160}
        tCrashQuery = {
          m_pQuery = 0x7fa2880008c0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 11475151, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = "\000hits[0]\003\071\061\071abc8", '\000' <repeats 4079 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_uPacketID = @0x7fa2fc01a529, m_tOut = @0x7fa4e07e4c70, m_iCID = 52, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fa28b14f318, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fa2fc01a529: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fa2fc018520) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fa2880008c0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 11475151, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fa1a2000050 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fa1a2af1920 "chance, &amp; she knows you&#39;re interested! She&#39;s considering you as a possible romantic partner.   She definitely isn&#39;t interested: GREAT! You can move on to someone who is as interested i"..., m_bError = false, m_iLen = 11475152}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fa28abe6c70 "x\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 33, m_sClientName = {m_sValue = 0x7fa28abe6c50 "127.0.0.1:50792", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 52, m_iTid = 22073, m_tmConnect = 1580458876967827, m_tmStart = 1580458877206810, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fa4e0715ce0, m_pNext = 0x7fa4e04a8ce0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fa288af21a0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 16777216, m_iUsed = 11475151, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fa2880008c0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fa2fc00ac90
#16 CSphThdPool::Tick (pArg=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x1d4e460
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x1d49c80) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x1d49c80
        pCleanup = <optimized out>
#18 0x00007fa4e6534e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fa4e4d4d88d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 47 (Thread 0x7fa4e0a52700 (LWP 22064)):
#0  0x00007fa4e653b50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fa4e6536e5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fa4e6536d28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x1c6a368) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x1c68dd0, pNewSeg=pNewSeg@entry=0x7fa2e25d6340, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x1c6a368, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x1c68e00, 
            m_iCount = 140330103785040}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140337559200576}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 10000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x1c68dd0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fa125fcc650
        pNewSeg = {m_pPtr = 0x7fa2e25d6340}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x30 <Address 0x30 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fa4e0a4dad0, pIndex=0x1c68dd0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fa2e3dfb1e0}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -526066304, 
              m_iMinInfixLen = 32676, m_iMaxSubstringLen = 29789648, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = 637322832, 
              m_bIndexSP = 161, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa2e3dfb1e0, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346120265088}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346120264768}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa2fc01aeb0, m_iCount = 140330103785040}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 29789696}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fa2e1f1eff0 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 9999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 495, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fa4e0a4dad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fa2e3dd9f70: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fa2e1eec4c0 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fa125fcc650, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x1c68e00: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x1cba220 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d4dfe8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d54b98, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x1c6ae90, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fa2e3db7470, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fa261477570, m_iCount = 10000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16384}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa2e1eec800, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa2e3db7360, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fa2e3db7410, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fa2fc01a588, sQuery=..., tOutput=..., uPacketID=@0x7fa2fc01b349: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fa4e0a4f160}
        tCrashQuery = {
          m_pQuery = 0x7fa0ac000030 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 9866948, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = "\000\066\066\064\060\064\066\065\064\063\070\060\b10612268\001\062\002\064\064\002\071\071\a9765071\001\060\n3874662544\n2417775590\001\060\001\060\006\061\061\071\071\060\071\006\062\060\071\070\060\070\001\060\001\060\n1610849580\n1566634882\n1562449680\n1566634801\001\060\001\060\070\003\062\062\065", '\000' <repeats 3959 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fa2fc01b349, m_tOut = @0x7fa4e0a51c70, m_iCID = 57, 
          m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fa2e1f1eb28, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fa2fc01b349: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fa2fc013c60) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fa0ac000030 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 9866948, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fa1ae000050 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fa1ae968f15 ";끼고&nbsp;냉장고에&nbsp;가져다&nbsp;넣죠.</span> </p> <p style=\\\"line-height: 1.8;\\\"> <span style=\\\"font-family: 굴림,gulim;\\\"> 냉장고의&nbsp;모터가&nbsp;빨리&nbsp;돌아가", <incomplete sequence \352>..., m_bError = false, m_iLen = 9866949}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fa2e1f0caf0 "\030\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 45, m_sClientName = {m_sValue = 0x7fa2e2314ef0 "127.0.0.1:50802", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 57, m_iTid = 22064, m_tmConnect = 1580458877195997, m_tmStart = 1580458877401706, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fa4e08b3ce0, m_pNext = 0x7fa4e086ece0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fa2e00008c0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 16777216, m_iUsed = 9866948, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fa0ac000030 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fa187000fa0
#16 CSphThdPool::Tick (pArg=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x1d4e460
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x1cd8570) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x1cd8570
        pCleanup = <optimized out>
#18 0x00007fa4e6534e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fa4e4d4d88d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 46 (Thread 0x7fa4e0adc700 (LWP 22062)):
#0  0x00007fa4e653b50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fa4e6536e5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fa4e6536d28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x1c6a368) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x1c68dd0, pNewSeg=pNewSeg@entry=0x7fa2419b3180, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x1c6a368, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x1c68e00, 
            m_iCount = 140336484042208}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140334864687872}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 10000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x1c68dd0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fa2a247c5e0
        pNewSeg = {m_pPtr = 0x7fa2419b3180}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x20 <Address 0x20 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fa4e0ad7ad0, pIndex=0x1c68dd0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fa2435b3720}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -525501056, 
              m_iMinInfixLen = 32676, m_iMaxSubstringLen = 29789648, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = -1572354592, 
              m_bIndexSP = 162, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa2435b3720, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346120830336}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346120830016}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa2fc011e70, m_iCount = 140336484042208}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 29789696}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fa24305a2e0 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 9999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 353, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fa4e0ad7ad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fa24355e6b0: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fa242232790 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fa2a247c5e0, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x1c68e00: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x1cba220 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d4dfe8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d54b98, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x1c6ae90, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fa24353bbb0, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fa1419d8a30, m_iCount = 10000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16384}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa24305c7c0, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa24353baa0, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fa24353bb50, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fa2fc011548, sQuery=..., tOutput=..., uPacketID=@0x7fa2fc012309: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fa4e0ad9160}
        tCrashQuery = {
          m_pQuery = 0x7fa0c0000030 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 12441754, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = '\000' <repeats 4095 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fa2fc012309, 
          m_tOut = @0x7fa4e0adbc70, m_iCID = 48, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fa243059e18, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fa2fc012309: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fa2fc018540) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fa0c0000030 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 12441754, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fa2fd01ffe0 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fa2fdbfd87b "2065db 2343ec78a04c6ea9d80806345d31fd78 4d236d9a2d102c5fe6ad1c50da4bec50 660328a7f9004d462085aa67a82065db'),(55942587371,20396267,0,2254523627,235,0,29338747,0,916263717,0,0,0,23693,132572,7,0,1566210"..., m_bError = false, m_iLen = 12441755}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fa242230600 "(\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 50, m_sClientName = {m_sValue = 0x7fa2422305e0 "127.0.0.1:50780", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 48, m_iTid = 22062, m_tmConnect = 1580458878242420, m_tmStart = 1580458878501498, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fa4e67f7ce0, m_pNext = 0x7fa4e09c7ce0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fa2400008c0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 16777216, m_iUsed = 12441754, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fa0c0000030 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fa2fc00acb0
#16 CSphThdPool::Tick (pArg=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x1d4e460
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x1cd8e20) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x1cd8e20
        pCleanup = <optimized out>
#18 0x00007fa4e6534e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fa4e4d4d88d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 45 (Thread 0x7fa4e0647700 (LWP 22079)):
#0  0x00007fa4e653b50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fa4e6536e5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fa4e6536d28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x1c6a368) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x1c68dd0, pNewSeg=pNewSeg@entry=0x7fa1de5620a0, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x1c6a368, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x1c68e00, 
            m_iCount = 140335250402688}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140333196648608}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 10000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x1c68dd0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fa258bfed80
        pNewSeg = {m_pPtr = 0x7fa1de5620a0}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x30 <Address 0x30 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fa4e0642ad0, pIndex=0x1c68dd0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fa1de277100}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -530305664, 
              m_iMinInfixLen = 32676, m_iMaxSubstringLen = 29789648, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = 1488973184, 
              m_bIndexSP = 162, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa1de277100, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346116025728}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346116025408}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa2fc017cd0, m_iCount = 140335250402688}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 29789696}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fa1dec6bb70 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 9999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 573, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fa4e0642ad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fa140a4ad40: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fa1419fabd0 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fa258bfed80, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x1c68e00: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x1cba220 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d4dfe8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d54b98, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x1c6ae90, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fa140a28240, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fa2a8d0e0e0, m_iCount = 10000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16384}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa1deaad6a0, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa140a28130, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fa140a281e0, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fa2fc0173a8, sQuery=..., tOutput=..., uPacketID=@0x7fa2fc018169: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fa4e0644160}
        tCrashQuery = {
          m_pQuery = 0x7fa141271fe0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 7341287, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = "\v47731046001\t402894961\001\063\003\061\061\063\003\061\071\067\t669900339\001\060\n2178159725\t316634129\001\060\001\060\006\061\065\065\062\071\064\006\061\065\065\062\071\064\001\060\001\060\n2411790449\n1566019435\n1566033719\n1566019321\003\062\062\065\065", '\000' <repeats 3959 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fa2fc018169, m_tOut = @0x7fa4e0646c70, m_iCID = 70, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fa1dec6b6a8, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fa2fc018169: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fa2fc00ac70) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fa141271fe0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 7341287, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fa2fe820000 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., m_pCur = 0x7fa2fef204e8 "", m_bError = false, m_iLen = 7341288}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fa1419f8a40 "(\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 46, m_sClientName = {m_sValue = 0x7fa1dec6b680 "127.0.0.1:50834", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 70, m_iTid = 22079, m_tmConnect = 1580458878614564, m_tmStart = 1580458878810538, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fa4e06d0ce0, m_pNext = 0x7fa4e03d9ce0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fa140000030 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 8388608, m_iUsed = 7341287, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fa141271fe0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fa2fc00acd0
#16 CSphThdPool::Tick (pArg=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x1d4e460
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x1c70ba0) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x1c70ba0
        pCleanup = <optimized out>
#18 0x00007fa4e6534e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fa4e4d4d88d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 44 (Thread 0x7fa4e0464700 (LWP 22086)):
#0  0x00007fa4e653b50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fa4e6536e5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fa4e6536d28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x1c6a368) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x1c68dd0, pNewSeg=pNewSeg@entry=0x7fa2aeec8af0, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x1c6a368, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x1c68e00, 
            m_iCount = 140334195788880}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140336699440320}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 10000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x1c68dd0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fa219e3cc50
        pNewSeg = {m_pPtr = 0x7fa2aeec8af0}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x20 <Address 0x20 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fa4e045fad0, pIndex=0x1c68dd0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fa2ac3d1950}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -532284032, 
              m_iMinInfixLen = 32676, m_iMaxSubstringLen = 29789648, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = 434359376, 
              m_bIndexSP = 162, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa2ac3d1950, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346114047360}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346114047040}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa2fc00ecb0, m_iCount = 140334195788880}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 29789696}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fa2ae8c83b0 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 9999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 344, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fa4e045fad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fa2ac3b0110: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fa2ae95c5d0 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fa219e3cc50, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x1c68e00: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x1cba220 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d4dfe8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d54b98, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x1c6ae90, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fa2ac38d610, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fa2422105d0, m_iCount = 10000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16384}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa2ae95c910, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa2ac38d500, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fa2ac38d5b0, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fa2fc00e388, sQuery=..., tOutput=..., uPacketID=@0x7fa2fc00f149: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fa4e0461160}
        tCrashQuery = {
          m_pQuery = 0x7fa2ac72a580 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 12037050, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = "\000hits[0]\003\071\067\066abc6", '\000' <repeats 4079 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_uPacketID = @0x7fa2fc00f149, m_tOut = @0x7fa4e0463c70, m_iCID = 45, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fa2ae8c7ee8, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fa2fc00f149: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fa2fc00e320) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fa2ac72a580 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 12037050, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fa184000030 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fa184b7abeb "268','4c6a21ce24.TS-6549917','북극곰!','5396a90b72b0ccd288e8eae42a258024 af270b0a2fdd9d17104e65ed38c85b17 6f11e86a6e92ce565aa629f732d89dd7 dcf0d7d2cd120bf42580d43f29785dd3 5396a90b72b0ccd288e8eae42"..., m_bError = false, m_iLen = 12037051}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fa2ae8c5ed0 "\370\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 39, m_sClientName = {m_sValue = 0x7fa2ac560850 "127.0.0.1:50772", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 45, m_iTid = 22086, m_tmConnect = 1580458878065150, m_tmStart = 1580458878344637, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fa4e09c7ce0, m_pNext = 0x7fa4e08f8ce0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fa2ad2a5150 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 16777216, m_iUsed = 12037050, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fa2ac72a580 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fa2fc009bc0
#16 CSphThdPool::Tick (pArg=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x1d4e460
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x1d47530) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x1d47530
        pCleanup = <optimized out>
#18 0x00007fa4e6534e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fa4e4d4d88d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 43 (Thread 0x7fa4e0533700 (LWP 22083)):
#0  0x00007fa4e653b50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fa4e6536e5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fa4e6536d28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x1c6a368) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x1c68dd0, pNewSeg=pNewSeg@entry=0x7fa261d3c290, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x1c6a368, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x1c68e00, 
            m_iCount = 140334600295088}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140335397077840}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 10000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x1c68dd0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fa2320012b0
        pNewSeg = {m_pPtr = 0x7fa261d3c290}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x20 <Address 0x20 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fa4e052ead0, pIndex=0x1c68dd0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fa261594e30}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -531436160, 
              m_iMinInfixLen = 32676, m_iMaxSubstringLen = 29789648, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = 838865584, 
              m_bIndexSP = 162, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa261594e30, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346114895232}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346114894912}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa2fc01bea0, m_iCount = 140334600295088}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 29789696}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fa263806460 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 9999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 498, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fa4e052ead0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fa261596d80: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fa2638cdbe0 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fa2320012b0, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x1c68e00: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x1cba220 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d4dfe8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d54b98, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x1c6ae90, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fa261574280, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fa10915f660, m_iCount = 10000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16384}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa263a8dda0, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa261574170, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fa261574220, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fa2fc01b578, sQuery=..., tOutput=..., uPacketID=@0x7fa2fc01c339: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fa4e0530160}
        tCrashQuery = {
          m_pQuery = 0x7fa2609ddde0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 9381129, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = '\000' <repeats 4095 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fa2fc01c339, 
          m_tOut = @0x7fa4e0532c70, m_iCID = 58, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fa263805f98, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fa2fc01c339: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fa2fc009c20) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fa2609ddde0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 9381129, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fa239000040 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fa2398f254a "kuselias-football-picks-2019-draft.html\\\" class=\\\"postlink\\\"> eric kuselias football picks 2019 draft</a> <br /> <a href=\\\"http://100winningfixedmatches.tk/statarea-fixed-matches-safe-100/08920-sports"..., m_bError = false, m_iLen = 9381130}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fa263803f80 "\370\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 56, m_sClientName = {m_sValue = 0x7fa263e1fa20 "127.0.0.1:50804", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 58, m_iTid = 22083, m_tmConnect = 1580458877322441, m_tmStart = 1580458877554912, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fa4e0baace0, m_pNext = 0x7fa4e0d48ce0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fa26258f9d0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 16777216, m_iUsed = 9381129, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fa2609ddde0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fa187000080
#16 CSphThdPool::Tick (pArg=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x1d4e460
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x1d474a0) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x1d474a0
        pCleanup = <optimized out>
#18 0x00007fa4e6534e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fa4e4d4d88d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 42 (Thread 0x7fa4e05bd700 (LWP 22081)):
#0  0x00007fa4e653b50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fa4e6536e5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fa4e6536d28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x1c6a368) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x1c68dd0, pNewSeg=pNewSeg@entry=0x7fa26dee4cc0, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x1c6a368, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x1c68e00, 
            m_iCount = 140336138587056}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140335637004208}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 10000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x1c68dd0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fa28db08bb0
        pNewSeg = {m_pPtr = 0x7fa26dee4cc0}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x20 <Address 0x20 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fa4e05b8ad0, pIndex=0x1c68dd0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fa26df0d440}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -530870912, 
              m_iMinInfixLen = 32676, m_iMaxSubstringLen = 29789648, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = -1917809744, 
              m_bIndexSP = 162, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa26df0d440, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346115460480}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346115460160}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa2fc00fe90, m_iCount = 140336138587056}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 29789696}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fa21a313850 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 9999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 293, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fa4e05b8ad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fa26dec34c0: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fa26fdddb20 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fa28db08bb0, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x1c68e00: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x1cba220 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d4dfe8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d54b98, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x1c6ae90, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fa26dea09c0, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fa2f23087d0, m_iCount = 10000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16384}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa26fddde60, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa26dea08b0, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fa26dea0960, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fa2fc00f568, sQuery=..., tOutput=..., uPacketID=@0x7fa2fc010329: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fa4e05ba160}
        tCrashQuery = {
          m_pQuery = 0x7fa218390060 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 10458588, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = '\000' <repeats 4095 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fa2fc010329, 
          m_tOut = @0x7fa4e05bcc70, m_iCID = 56, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fa21a313388, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fa2fc010329: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fa1af000f80) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fa218390060 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 10458588, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fa238000030 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fa2389f960d "ığından bizi odaya yerleştiremediler. En sonunda başka bir otele transfer etmek zorunda kaldılar. Transfer ücretini de kendi imkanlarımızla karşıladık. Daha sonradan öğrendik ki, bizim g"..., m_bError = false, m_iLen = 10458589}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fa21a33f720 "x\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 36, m_sClientName = {m_sValue = 0x7fa26fddd980 "127.0.0.1:50800", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 56, m_iTid = 22081, m_tmConnect = 1580458877158100, m_tmStart = 1580458877393457, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fa4e086ece0, m_pNext = 0x7fa4e0cbece0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fa26c0008c0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 16777216, m_iUsed = 10458588, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fa218390060 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fa2fc013c20
#16 CSphThdPool::Tick (pArg=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x1d4e460
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x1c70c00) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x1c70c00
        pCleanup = <optimized out>
#18 0x00007fa4e6534e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fa4e4d4d88d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 41 (Thread 0x7fa4e03da700 (LWP 22088)):
#0  0x00007fa4e653b50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fa4e6536e5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fa4e6536d28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x1c6a368) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x1c68dd0, pNewSeg=pNewSeg@entry=0x7fa1c01c5a00, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x1c6a368, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x1c68e00, 
            m_iCount = 140331641069904}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140336748037184}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 10000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x1c68dd0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fa1819de150
        pNewSeg = {m_pPtr = 0x7fa1c01c5a00}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x20 <Address 0x20 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fa4e03d5ad0, pIndex=0x1c68dd0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fa2b2d2e630}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -532849280, 
              m_iMinInfixLen = 32676, m_iMaxSubstringLen = 29789648, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = -2120359600, 
              m_bIndexSP = 161, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa2b2d2e630, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346113482112}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346113481792}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa23b0009d0, m_iCount = 140331641069904}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 29789696}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fa101ef17c0 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 9999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 499, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fa4e03d5ad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fa101e3c290: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fa101e61ee0 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fa1819de150, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x1c68e00: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x1cba220 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d4dfe8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d54b98, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x1c6ae90, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fa101e38580, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fa276113570, m_iCount = 10000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16384}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa103c4ee90, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa101e38470, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fa101e38520, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fa23b0000a8, sQuery=..., tOutput=..., uPacketID=@0x7fa23b000e69: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fa4e03d7160}
        tCrashQuery = {
          m_pQuery = 0x7fa2b06a95a0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 8159589, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = '\000' <repeats 4095 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fa23b000e69, 
          m_tOut = @0x7fa4e03d9c70, m_iCID = 73, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fa101ef12f8, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fa23b000e69: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fa2fc00bf10) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fa2b06a95a0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 8159589, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fa2fe01fff0 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fa2fe7e8156 ' ' <repeats 44 times>, "<p style=\\\"margin-top: 1em; margin-bottom: 1em; padding: 0px; text-size-adjust: none;\\\">", ' ' <repeats 47 times>, "<span style=\\\"font-si"..., m_bError = false, m_iLen = 8159590}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fa101e5fd50 "(\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 49, m_sClientName = {m_sValue = 0x7fa103c4ebf0 "127.0.0.1:50854", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 73, m_iTid = 22088, m_tmConnect = 1580458878435358, m_tmStart = 1580458878647800, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fa4e0646ce0, m_pNext = 0x7fa4e67f7ce0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fa102311eb0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 8388608, m_iUsed = 8159589, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fa2b06a95a0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fa1af000060
#16 CSphThdPool::Tick (pArg=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x1d4e460
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x1d0d720) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x1d0d720
        pCleanup = <optimized out>
#18 0x00007fa4e6534e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fa4e4d4d88d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 40 (Thread 0x7fa4e0602700 (LWP 22080)):
#0  0x00007fa4e653b50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fa4e6536e5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fa4e6536d28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x1c6a368) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x1c68dd0, pNewSeg=pNewSeg@entry=0x7fa2c1f0d140, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x1c6a368, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x1c68e00, 
            m_iCount = 140332346165216}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140337015214400}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 10000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x1c68dd0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fa1aba4c7e0
        pNewSeg = {m_pPtr = 0x7fa2c1f0d140}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x30 <Address 0x30 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fa4e05fdad0, pIndex=0x1c68dd0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fa2c06b2410}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -530588288, 
              m_iMinInfixLen = 32676, m_iMaxSubstringLen = 29789648, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = -1415264288, 
              m_bIndexSP = 161, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa2c06b2410, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346115743104}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346115742784}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa2fc00dad0, m_iCount = 140332346165216}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 29789696}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fa2c0a5de60 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 9999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 1187, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fa4e05fdad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fa2c0690df0: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fa2c0a5d240 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fa1aba4c7e0, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x1c68e00: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x1cba220 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d4dfe8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d54b98, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x1c6ae90, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fa2c066e2f0, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fa25865c860, m_iCount = 10000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16384}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa2c0a5d580, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa2c066e1e0, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fa2c066e290, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fa2fc00d1a8, sQuery=..., tOutput=..., uPacketID=@0x7fa2fc00df69: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fa4e05ff160}
        tCrashQuery = {
          m_pQuery = 0x7fa2c12fcee0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 9357993, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = "\ahits[0]\003\070\062\067abc412268\001\062\002\064\064\002\071\071\a9765071\001\060\n3874662544\n2417775590\001\060\001\060\006\061\061\071\071\060\071\006\062\060\071\070\060\070\001\060\001\060\n1610849580\n1566634882\n1562449680\n1566634801\001\060\001\060\070\003\062\062\065", '\000' <repeats 3959 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fa2fc00df69, m_tOut = @0x7fa4e0601c70, m_iCID = 53, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fa2c0a5d998, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fa2fc00df69: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fa1af000f60) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fa2c12fcee0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 9357993, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fa1d8000030 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fa1d88ecada "ic.com/tb/editor/images/face/i_f20.png?t=20140803\\\" > ','','XST426928225 XFR451625249','4b141757f0.127284053160','Nyralim','0d3570cf4b11a2e799c13596449f92cc 60d2f4fe0275d790764f40abc6734499 4d236d9a2d"..., m_bError = false, m_iLen = 9357994}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fa2c0a5b0b0 "X\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 34, m_sClientName = {m_sValue = 0x7fa2c0a59080 "127.0.0.1:50794", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 53, m_iTid = 22080, m_tmConnect = 1580458876838391, m_tmStart = 1580458877027557, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fa4e0982ce0, m_pNext = 0x7fa4e0a0cce0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fa0f13c1080 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 16777216, m_iUsed = 9357993, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fa2c12fcee0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fa187000f80
#16 CSphThdPool::Tick (pArg=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x1d4e460
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x1c70bd0) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x1c70bd0
        pCleanup = <optimized out>
#18 0x00007fa4e6534e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fa4e4d4d88d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 39 (Thread 0x7fa4e075b700 (LWP 22075)):
#0  0x00007fa4e653b50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fa4e6536e5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fa4e6536d28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x1c6a368) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x1c68dd0, pNewSeg=pNewSeg@entry=0x7fa2824c3940, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x1c6a368, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x1c68e00, 
            m_iCount = 140336348567184}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140335949584752}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 10000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x1c68dd0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fa29a349690
        pNewSeg = {m_pPtr = 0x7fa2824c3940}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x20 <Address 0x20 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fa4e0756ad0, pIndex=0x1c68dd0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fa2803b7210}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -529175168, 
              m_iMinInfixLen = 32676, m_iMaxSubstringLen = 29789648, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = -1707829616, 
              m_bIndexSP = 162, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa2803b7210, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346117156224}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346117155904}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa2fc01d400, m_iCount = 140336348567184}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 29789696}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fa2836bdb20 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 9999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 661, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fa4e0756ad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fa280395b90: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fa2836bfe40 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fa29a349690, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x1c68e00: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x1cba220 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d4dfe8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d54b98, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x1c6ae90, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fa280373090, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fa21cab1d10, m_iCount = 10000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16384}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa2836c0180, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa280372f80, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fa280373030, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fa2fc01cad8, sQuery=..., tOutput=..., uPacketID=@0x7fa2fc01d899: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fa4e0758160}
        tCrashQuery = {
          m_pQuery = 0x7fa282941a20 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 8738695, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = "\000\064\067\067\065\062\062\071\060\071\062\071\t402894961\001\063\003\061\061\063\003\061\071\067\t669900339\001\061\n3472800519\n1472786918\001\060\001\060\006\061\065\065\062\071\064\006\061\065\065\062\071\064\001\060\001\060\n3366445425\n1566296983\n1566311257\n1566296858\003\062\062\065", '\000' <repeats 3959 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fa2fc01d899, m_tOut = @0x7fa4e075ac70, m_iCID = 64, 
          m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fa2836bd658, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fa2fc01d899: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fa1af000460) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fa282941a20 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 8738695, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fa2fc01ffd0 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fa2fc875758 "rita/indonesia-minim-budaya-arsip-musik?utm_campaign=partnership&amp;utm_medium=related_article&amp;utm_source=kaskus\\\" onclick=\\\"_gaq.push([\\'_trackEvent\\', \\'outbond\\', \\'click\\', \\'https://beritaga"..., m_bError = false, m_iLen = 8738696}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fa2836bb5a0 "\250\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 54, m_sClientName = {m_sValue = 0x7fa2836bb580 "127.0.0.1:50818", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 64, m_iTid = 22075, m_tmConnect = 1580458877592411, m_tmStart = 1580458877780251, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fa4e0c79ce0, m_pNext = 0x7fa4e0577ce0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fa2806119b0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 16777216, m_iUsed = 8738695, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fa282941a20 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fa1af000fa0
#16 CSphThdPool::Tick (pArg=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x1d4e460
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x1d49ce0) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x1d49ce0
        pCleanup = <optimized out>
#18 0x00007fa4e6534e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fa4e4d4d88d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 38 (Thread 0x7fa4e08f9700 (LWP 22069)):
#0  0x00007fa4e653b50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fa4e6536e5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fa4e6536d28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x1c6a368) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x1c68dd0, pNewSeg=pNewSeg@entry=0x7fa22baf5520, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x1c6a368, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x1c68e00, 
            m_iCount = 140333193426816}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140332289488480}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 10000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x1c68dd0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fa1de24f780
        pNewSeg = {m_pPtr = 0x7fa22baf5520}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x20 <Address 0x20 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fa4e08f4ad0, pIndex=0x1c68dd0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fa22baf8cd0}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -527479424, 
              m_iMinInfixLen = 32676, m_iMaxSubstringLen = 29789648, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = -568002688, 
              m_bIndexSP = 161, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa22baf8cd0, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346118851968}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346118851648}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa2fc00a5d0, m_iCount = 140333193426816}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 29789696}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fa229126060 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 9999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 194, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fa4e08f4ad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fa22bad75b0: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fa22912cd40 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fa1de24f780, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x1c68e00: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x1cba220 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d4dfe8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d54b98, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x1c6ae90, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fa22bab4ac0, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fa2a63bfc50, m_iCount = 10000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16384}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa22912d080, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa1a8259b50, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fa22912d120, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fa2fc009ca8, sQuery=..., tOutput=..., uPacketID=@0x7fa2fc00aa69: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fa4e08f6160}
        tCrashQuery = {
          m_pQuery = 0x7fa2280008c0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 6528840, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = "\v66404653356\b10612268\001\062\002\064\064\002\071\071\a9765071\001\060\n3874662544\t370604767\001\060\001\060\006\061\061\071\071\060\071\006\062\060\071\070\060\070\001\060\001\060\n3089861164\n1566634882\n1562448060\n1566634800\001\060\061\066\001\060\001\060\062\065", '\000' <repeats 3959 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fa2fc00aa69, m_tOut = @0x7fa4e08f8c70, m_iCID = 40, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fa229125b98, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fa2fc00aa69: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fa1a3000e80) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fa2280008c0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 6528840, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fa186800060 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fa186e39fa9 "\230가 있나요?','입주민전용 아니면 이용해볼려구요..^^','','XST670102672 XFR432927601','5cae3d8d11c.38161721','굿모닝 굿','d612f2658d72db21294fda4459a5d427 200b0e6895e993c29dd09dc74"..., m_bError = false, m_iLen = 6528841}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fa229123b80 "\310\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 31, m_sClientName = {m_sValue = 0x7fa22912cba0 "127.0.0.1:50756", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 40, m_iTid = 22069, m_tmConnect = 1580458877993103, m_tmStart = 1580458878205219, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fa4e0463ce0, m_pNext = 0x7fa4e0befce0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fa22863a820 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 8388608, m_iUsed = 6528840, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fa2280008c0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fa1870000a0
#16 CSphThdPool::Tick (pArg=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x1d4e460
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x1c6a730) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x1c6a730
        pCleanup = <optimized out>
#18 0x00007fa4e6534e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fa4e4d4d88d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 37 (Thread 0x7fa4e0716700 (LWP 22076)):
#0  0x00007fa4e653b50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fa4e6536e5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fa4e6536d28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x1c6a368) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x1c68dd0, pNewSeg=pNewSeg@entry=0x7fa2cb5d27f0, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x1c6a368, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x1c68e00, 
            m_iCount = 140337608017104}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140337163221744}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 10000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x1c68dd0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fa2e54644d0
        pNewSeg = {m_pPtr = 0x7fa2cb5d27f0}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x20 <Address 0x20 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fa4e0711ad0, pIndex=0x1c68dd0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fa2cb5dc1a0}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -529457792, 
              m_iMinInfixLen = 32676, m_iMaxSubstringLen = 29789648, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = -448379696, 
              m_bIndexSP = 162, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa2cb5dc1a0, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346116873600}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346116873280}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa30400c8f0, m_iCount = 140337608017104}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 29789696}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fa2ca991c70 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 9999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 1292, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fa4e0711ad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fa2cb5ba8e0: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fa2ca4e4610 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fa2e54644d0, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x1c68e00: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x1cba220 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d4dfe8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d54b98, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x1c6ae90, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fa2cb597de0, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fa2800fbbc0, m_iCount = 10000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16384}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa2ca8eaa30, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa2cb597cd0, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fa2cb597d80, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fa30400bfc8, sQuery=..., tOutput=..., uPacketID=@0x7fa30400cd89: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fa4e0713160}
        tCrashQuery = {
          m_pQuery = 0x7fa2c80008c0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 8819983, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = "\ahits[0]\003\071\071\066abc312268\001\062\002\064\064\002\071\071\a9765071\001\061\n3484680791\n1963320441\001\060\001\060\006\061\061\071\071\060\071\006\062\060\071\070\060\070\001\060\001\060\n1748993836\n1566100441\n1564525980\n1566100381\001\060\001\060\061\003\062\062\065", '\000' <repeats 3959 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fa30400cd89, m_tOut = @0x7fa4e0715c70, m_iCID = 37, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fa2ca9917a8, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fa30400cd89: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fa30400d560) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fa2c80008c0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 8819983, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fa1c8000030 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fa1c8869540 ".facebook.com/groups/ayoungchanger/\\']);dataLayer.push({\\'event\\': \\'trackEvent\\',\\'eventDetails.category\\': \\'outbond\\', \\'eventDetails.action\\': \\'click\\', \\'eventDetails.label\\': \\'https://www.face"..., m_bError = false, m_iLen = 8819984}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fa2ca4e2480 "8\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 29, m_sClientName = {m_sValue = 0x7fa2ca4e2460 "127.0.0.1:50742", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 37, m_iTid = 22076, m_tmConnect = 1580458876986103, m_tmStart = 1580458877187057, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fa4e0cbece0, m_pNext = 0x7fa4e07e4ce0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fa2c8869de0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 16777216, m_iUsed = 8819983, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fa2c80008c0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fa30400b120
#16 CSphThdPool::Tick (pArg=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x1d4e460
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x1d09bb0) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x1d09bb0
        pCleanup = <optimized out>
#18 0x00007fa4e6534e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fa4e4d4d88d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 36 (Thread 0x7fa4e0395700 (LWP 22089)):
#0  0x00007fa4e65389f5 in pthread_cond_wait@@GLIBC_2.3.2 () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00000000006fa1ab in AutoEvent_T<false>::WaitEvent (this=this@entry=0x1d4e468, iMsec=iMsec@entry=-1) at /root/manticore_gitlab/src/sphinxstd.cpp:1358
        ts = {tv_sec = 140338123569600, tv_nsec = 30729312}
        ns = <optimized out>
        iRes = <optimized out>
        bEventHappened = <optimized out>
#2  0x00000000006fdf9f in TickImpl (this=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2028
        pJob = <optimized out>
#3  CSphThdPool::Tick (pArg=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x1d4e460
#4  0x00000000006f9735 in sphThreadProcWrapper (pArg=0x1d0d750) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x1d0d750
        pCleanup = <optimized out>
#5  0x00007fa4e6534e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#6  0x00007fa4e4d4d88d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 35 (Thread 0x7fa4e030b700 (LWP 22091)):
#0  0x00007fa4e4d4de63 in epoll_wait () from /lib64/libc.so.6
No symbol table info available.
#1  0x000000000060535e in EpollEvents_c::Wait (this=0x7fa3080008c0, timeoutMs=<optimized out>) at /root/manticore_gitlab/src/searchdha.cpp:3998
        timeoutMs = <optimized out>
        this = 0x7fa3080008c0
#2  0x00000000005e18fb in CSphNetLoop::LoopNetPoll (this=this@entry=0x7fa4e030acf0) at /root/manticore_gitlab/src/searchd.cpp:20578
        bGot = <optimized out>
        iGotEvents = <optimized out>
        iConnections = 0
        dCleanup = {<VecTraits_T<ISphNetAction*>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<ISphNetAction*>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        tmNow = <optimized out>
        iSpinWait = <optimized out>
        iMaxIters = <optimized out>
        dWorkNext = {<VecTraits_T<ISphNetAction*>> = {m_pData = 0x7fa308005ba0, m_iCount = 0}, <sph::DefaultStorage_T<ISphNetAction*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 1024}
        tmLastWait = 1580458940185605
#3  0x00000000005e23a9 in CSphNetLoop::ThdLoop () at /root/manticore_gitlab/src/searchd.cpp:20738
        tQueryTLS = {m_pQuery = 0x0, m_iSize = 0, m_uCMD = 0, m_uVer = 0, m_bMySQL = false, m_bHttp = false, m_pIndex = 0x0, m_iIndexLen = 0}
        tLoop = {m_uTick = 520, m_dWorkExternal = {<VecTraits_T<ISphNetAction*>> = {m_pData = 0x7fa308003b90, m_iCount = 0}, <sph::DefaultStorage_T<ISphNetAction*>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 1024}, 
          m_bGotExternal = false, m_pWakeupExternal = 0x7fa308003960, m_tExtLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutex = {__data = {__lock = 0, 
                __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_tPrf = {m_bEnable = false, m_tmTotal = 0, m_iPerfEv = 536, m_iPerfNext = 0, m_iPerfExt = 1, 
            m_iPerfClean = 1}, m_pPoll = 0x7fa3080008c0, m_pShutdownCookie = 0x7fa3080039f0}
#4  0x00000000006f9735 in sphThreadProcWrapper (pArg=0x1d09be0) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x1d09be0
        pCleanup = <optimized out>
#5  0x00007fa4e6534e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#6  0x00007fa4e4d4d88d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 34 (Thread 0x7fa4e0a97700 (LWP 22063)):
#0  0x00007fa4e65389f5 in pthread_cond_wait@@GLIBC_2.3.2 () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00000000006fa1ab in AutoEvent_T<false>::WaitEvent (this=this@entry=0x1d4e468, iMsec=iMsec@entry=-1) at /root/manticore_gitlab/src/sphinxstd.cpp:1358
        ts = {tv_sec = 140338123569664, tv_nsec = 30729312}
        ns = <optimized out>
        iRes = <optimized out>
        bEventHappened = <optimized out>
#2  0x00000000006fdf9f in TickImpl (this=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2028
        pJob = <optimized out>
#3  CSphThdPool::Tick (pArg=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x1d4e460
#4  0x00000000006f9735 in sphThreadProcWrapper (pArg=0x1cd8e50) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x1cd8e50
        pCleanup = <optimized out>
#5  0x00007fa4e6534e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#6  0x00007fa4e4d4d88d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 33 (Thread 0x7fa4e068c700 (LWP 22078)):
#0  0x00007fa4e65389f5 in pthread_cond_wait@@GLIBC_2.3.2 () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00000000006fa1ab in AutoEvent_T<false>::WaitEvent (this=this@entry=0x1d4e468, iMsec=iMsec@entry=-1) at /root/manticore_gitlab/src/sphinxstd.cpp:1358
        ts = {tv_sec = 0, tv_nsec = 30729312}
        ns = <optimized out>
        iRes = <optimized out>
        bEventHappened = <optimized out>
#2  0x00000000006fdf9f in TickImpl (this=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2028
        pJob = <optimized out>
#3  CSphThdPool::Tick (pArg=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x1d4e460
#4  0x00000000006f9735 in sphThreadProcWrapper (pArg=0x1c70b70) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x1c70b70
        pCleanup = <optimized out>
#5  0x00007fa4e6534e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#6  0x00007fa4e4d4d88d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 32 (Thread 0x7fa4e0c35700 (LWP 22057)):
#0  0x00007fa4e65389f5 in pthread_cond_wait@@GLIBC_2.3.2 () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00000000006fa1ab in AutoEvent_T<false>::WaitEvent (this=this@entry=0x1d4e468, iMsec=iMsec@entry=-1) at /root/manticore_gitlab/src/sphinxstd.cpp:1358
        ts = {tv_sec = 0, tv_nsec = 30729312}
        ns = <optimized out>
        iRes = <optimized out>
        bEventHappened = <optimized out>
#2  0x00000000006fdf9f in TickImpl (this=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2028
        pJob = <optimized out>
#3  CSphThdPool::Tick (pArg=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x1d4e460
#4  0x00000000006f9735 in sphThreadProcWrapper (pArg=0x1c6af00) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x1c6af00
        pCleanup = <optimized out>
#5  0x00007fa4e6534e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#6  0x00007fa4e4d4d88d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 31 (Thread 0x7fa4e0350700 (LWP 22090)):
#0  0x00007fa4e4d4de63 in epoll_wait () from /lib64/libc.so.6
No symbol table info available.
#1  0x000000000060535e in EpollEvents_c::Wait (this=0x7fa3040008c0, timeoutMs=<optimized out>) at /root/manticore_gitlab/src/searchdha.cpp:3998
        timeoutMs = <optimized out>
        this = 0x7fa3040008c0
#2  0x00000000005e18fb in CSphNetLoop::LoopNetPoll (this=this@entry=0x7fa4e034fcf0) at /root/manticore_gitlab/src/searchd.cpp:20578
        bGot = <optimized out>
        iGotEvents = <optimized out>
        iConnections = 0
        dCleanup = {<VecTraits_T<ISphNetAction*>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<ISphNetAction*>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        tmNow = <optimized out>
        iSpinWait = <optimized out>
        iMaxIters = <optimized out>
        dWorkNext = {<VecTraits_T<ISphNetAction*>> = {m_pData = 0x7fa304003b90, m_iCount = 0}, <sph::DefaultStorage_T<ISphNetAction*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 1024}
        tmLastWait = 1580458940186042
#3  0x00000000005e23a9 in CSphNetLoop::ThdLoop () at /root/manticore_gitlab/src/searchd.cpp:20738
        tQueryTLS = {m_pQuery = 0x0, m_iSize = 0, m_uCMD = 0, m_uVer = 0, m_bMySQL = false, m_bHttp = false, m_pIndex = 0x0, m_iIndexLen = 0}
        tLoop = {m_uTick = 481, m_dWorkExternal = {<VecTraits_T<ISphNetAction*>> = {m_pData = 0x7fa304005ba0, m_iCount = 0}, <sph::DefaultStorage_T<ISphNetAction*>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 1024}, 
          m_bGotExternal = false, m_pWakeupExternal = 0x7fa304003960, m_tExtLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutex = {__data = {__lock = 0, 
                __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_tPrf = {m_bEnable = false, m_tmTotal = 0, m_iPerfEv = 483, m_iPerfNext = 0, m_iPerfExt = 1, 
            m_iPerfClean = 1}, m_pPoll = 0x7fa3040008c0, m_pShutdownCookie = 0x7fa3040039f0}
#4  0x00000000006f9735 in sphThreadProcWrapper (pArg=0x1d09c40) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x1d09c40
        pCleanup = <optimized out>
#5  0x00007fa4e6534e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#6  0x00007fa4e4d4d88d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 30 (Thread 0x7fa4e093e700 (LWP 22068)):
#0  0x00007fa4e65389f5 in pthread_cond_wait@@GLIBC_2.3.2 () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00000000006fa1ab in AutoEvent_T<false>::WaitEvent (this=this@entry=0x1d4e468, iMsec=iMsec@entry=-1) at /root/manticore_gitlab/src/sphinxstd.cpp:1358
        ts = {tv_sec = 140338123569600, tv_nsec = 30729312}
        ns = <optimized out>
        iRes = <optimized out>
        bEventHappened = <optimized out>
#2  0x00000000006fdf9f in TickImpl (this=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2028
        pJob = <optimized out>
#3  CSphThdPool::Tick (pArg=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x1d4e460
#4  0x00000000006f9735 in sphThreadProcWrapper (pArg=0x1c6a700) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x1c6a700
        pCleanup = <optimized out>
#5  0x00007fa4e6534e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#6  0x00007fa4e4d4d88d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 29 (Thread 0x7fa4e0281700 (LWP 22186)):
#0  0x00007fa4e6538da2 in pthread_cond_timedwait@@GLIBC_2.3.2 () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00000000006fa136 in AutoEvent_T<false>::WaitEvent (this=this@entry=0xda11c8 <LazyTasker()::dEvents+328>, 
    iMsec=<error reading variable: That operation is not available on integers of more than 8 bytes.>) at /root/manticore_gitlab/src/sphinxstd.cpp:1376
        ts = {tv_sec = 1580459542, tv_nsec = 172165061}
        ns = <optimized out>
        iRes = 0
        bEventHappened = <optimized out>
#2  0x0000000000628d84 in JobTick (tWorker=..., this=0xda1080 <LazyTasker()::dEvents>) at /root/manticore_gitlab/src/searchdtask.cpp:602
        bSignaled = <optimized out>
#3  JobLoop (pWorker=0x7fa4dc0009d0, this=0xda1080 <LazyTasker()::dEvents>) at /root/manticore_gitlab/src/searchdtask.cpp:630
No locals.
#4  LazyJobs_c::TheadPoolWorker (pArg=0x7fa4dc0009d0) at /root/manticore_gitlab/src/searchdtask.cpp:676
        thMtThread = {m_tRoleRef = @0xda1044}
#5  0x00000000006f9735 in sphThreadProcWrapper (pArg=0x7fa4dc000b40) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x7fa4dc000b40
        pCleanup = <optimized out>
#6  0x00007fa4e6534e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#7  0x00007fa4e4d4d88d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 28 (Thread 0x7fa4e041f700 (LWP 22087)):
#0  0x00007fa4e653b50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fa4e6536e5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fa4e6536d28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x1c6a368) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x1c68dd0, pNewSeg=pNewSeg@entry=0x7fa1267f9780, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x1c6a368, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x1c68e00, 
            m_iCount = 140331237152016}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140330135906544}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 10000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x1c68dd0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fa1698a9510
        pNewSeg = {m_pPtr = 0x7fa1267f9780}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x30 <Address 0x30 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fa4e041aad0, pIndex=0x1c68dd0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fa1266b0300}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -532566656, 
              m_iMinInfixLen = 32676, m_iMaxSubstringLen = 29789648, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = 1770689808, 
              m_bIndexSP = 161, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa1266b0300, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346113764736}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346113764416}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa2fc01e5c0, m_iCount = 140331237152016}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 29789696}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fa127b23b30 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 9999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 1001, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fa4e041aad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fa1266b2250: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fa25ca9e2d0 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fa1698a9510, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x1c68e00: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x1cba220 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d4dfe8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d54b98, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x1c6ae90, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fa12668f750, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fa16ade6ec0, m_iCount = 10000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16384}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa25ca9e610, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa12668f640, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fa12668f6f0, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fa2fc01dc98, sQuery=..., tOutput=..., uPacketID=@0x7fa2fc01ea59: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fa4e041c160}
        tCrashQuery = {
          m_pQuery = 0x7fa125fdc7d0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 4755591, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = "\v58041476111\t395714575\001\062\002\061\065\002\071\071\t670106034\001\061\n2889915473\t387167280\001\060\001\060\006\062\060\063\071\065\062\006\067\063\071\070\067\061\001\060\001\060\n3905717775\n1566075213\n1566076320\n1566075157\001\060\061\003\062\062\065", '\000' <repeats 3959 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fa2fc01ea59, m_tOut = @0x7fa4e041ec70, m_iCID = 66, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fa127b23668, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fa2fc01ea59: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fa2fc017340) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fa125fdc7d0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 4755591, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fa186000050 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fa1864890d8 ",10608940,2,1649813292,44,99,9765071,0,713010456,1643068418,0,0,119909,209808,0,0,1567132009,1566092820,1567131935,(0),'RE: 현대자동차 대안이 없어 슬픕니다.','<p> 가지고 있는 기술"..., m_bError = false, m_iLen = 4755592}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fa25ca9c140 "h\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 55, m_sClientName = {m_sValue = 0x7fa127b23640 "127.0.0.1:50824", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 66, m_iTid = 22087, m_tmConnect = 1580458877860882, m_tmStart = 1580458878014768, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fa4e0befce0, m_pNext = 0x7fa4e67b2ce0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fa25c0008c0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 8388608, m_iUsed = 4755591, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fa125fdc7d0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fa2fc00bef0
#16 CSphThdPool::Tick (pArg=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x1d4e460
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x1d47560) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x1d47560
        pCleanup = <optimized out>
#18 0x00007fa4e6534e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fa4e4d4d88d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 27 (Thread 0x7fa4e09c8700 (LWP 22066)):
#0  0x00007fa4e653b50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fa4e6536e5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fa4e6536d28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x1c6a368) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x1c68dd0, pNewSeg=pNewSeg@entry=0x7fa2d739e1b0, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x1c6a368, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x1c68e00, 
            m_iCount = 140333489781136}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140337365625440}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 10000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x1c68dd0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fa1efcef990
        pNewSeg = {m_pPtr = 0x7fa2d739e1b0}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x30 <Address 0x30 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fa4e09c3ad0, pIndex=0x1c68dd0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fa2d6969ad0}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -526631552, 
              m_iMinInfixLen = 32676, m_iMaxSubstringLen = 29789648, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = -271648368, 
              m_bIndexSP = 161, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa2d6969ad0, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346119699840}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346119699520}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa2fc011050, m_iCount = 140333489781136}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 29789696}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fa2d6bb4130 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 9999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 400, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fa4e09c3ad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fa2d696ba20: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fa2d6bb6450 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fa1efcef990, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x1c68e00: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x1cba220 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d4dfe8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d54b98, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x1c6ae90, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fa2d6948f20, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fa101e3fd40, m_iCount = 10000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16384}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa2d645cbe0, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa2d6948e10, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fa2d6948ec0, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fa2fc010728, sQuery=..., tOutput=..., uPacketID=@0x7fa2fc0114e9: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fa4e09c5160}
        tCrashQuery = {
          m_pQuery = 0x7fa0f8000030 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 7421025, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = "\000\064\067\067\066\070\064\067\067\070\060\071\t402894961\001\063\003\061\061\063\003\061\071\067\t669900339\001\060\n1736782202\n1004822103\001\060\001\060\006\061\065\065\062\071\064\006\061\065\065\062\071\064\001\060\001\060\n2615638641\n1566464915\n1566479199\n1566464801\003\062\062\065", '\000' <repeats 3959 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fa2fc0114e9, m_tOut = @0x7fa4e09c7c70, m_iCID = 47, 
          m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fa2d6bb3c68, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fa2fc0114e9: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fa187000f40) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fa0f8000030 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 7421025, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fa1d9800050 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fa1d9f13cb2 "on-Cendol Gan\\\" title=\\\"Cendol Gan\\\"/>  oh iya, tritku di sfth naik HT, Om<img src=\\\"https://s.kaskus.id/images/smilies/smilies_fb5ly1j43vv5.gif\\\" data-sceditor-emoticon=\\\":1thumbup\\\"\\\" border=\\\"0\\\" a"..., m_bError = false, m_iLen = 7421026}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fa2d6bb1c50 "\210\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 43, m_sClientName = {m_sValue = 0x7fa2d6bb1c30 "127.0.0.1:50778", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 47, m_iTid = 22066, m_tmConnect = 1580458878086024, m_tmStart = 1580458878298519, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fa4e0adbce0, m_pNext = 0x7fa4e0463ce0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fa0f8713ca0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 8388608, m_iUsed = 7421025, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fa0f8000030 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fa2fc00bf50
#16 CSphThdPool::Tick (pArg=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x1d4e460
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x1cd85d0) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x1cd85d0
        pCleanup = <optimized out>
#18 0x00007fa4e6534e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fa4e4d4d88d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 26 (Thread 0x7fa4e04a9700 (LWP 22085)):
#0  0x00007fa4e653b50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fa4e6536e5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fa4e6536d28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x1c6a368) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x1c68dd0, pNewSeg=pNewSeg@entry=0x7fa258304f60, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x1c6a368, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x1c68e00, 
            m_iCount = 140337831650032}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140335240990560}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 10000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x1c68dd0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fa2f29aa2f0
        pNewSeg = {m_pPtr = 0x7fa258304f60}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x20 <Address 0x20 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fa4e04a4ad0, pIndex=0x1c68dd0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fa2588e6e20}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -532001408, 
              m_iMinInfixLen = 32676, m_iMaxSubstringLen = 29789648, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = -224746768, 
              m_bIndexSP = 162, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa2588e6e20, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346114329984}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346114329664}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa30800dab0, m_iCount = 140337831650032}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 29789696}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fa258b0d820 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 9999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 189, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fa4e04a4ad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fa2588e8d70: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fa258b0fb20 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fa2f29aa2f0, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x1c68e00: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x1cba220 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d4dfe8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d54b98, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x1c6ae90, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fa2588c6270, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fa2c0e32190, m_iCount = 10000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16384}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa258b0fe80, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa2588c6160, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fa2588c6210, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fa30800d188, sQuery=..., tOutput=..., uPacketID=@0x7fa30800df49: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fa4e04a6160}
        tCrashQuery = {
          m_pQuery = 0x7fa258f77bf0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 8474186, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = "\v66404653100\b10612268\001\062\002\064\064\002\071\071\a9765071\001\060\n3874662544\n1889373405\001\060\001\060\006\061\061\071\071\060\071\006\062\060\071\070\060\070\001\060\001\060\t157764140\n1566634882\n1562447820\n1566634800\001\060\060\001\060\070\003\062\062\065", '\000' <repeats 3959 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fa30800df49, m_tOut = @0x7fa4e04a8c70, m_iCID = 71, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fa258b0d358, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fa30800df49: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fa227000ec0) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fa258f77bf0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 8474186, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fa225800050 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fa226014e9b "96a90b72b0ccd288e8eae42a258024 af270b0a2fdd9d17104e65ed38c85b17 6f11e86a6e92ce565aa629f732d89dd7 dcf0d7d2cd120bf42580d43f29785dd3 5396a90b72b0ccd288e8eae42a258024'),(66595841068,10612268,2,2920538668,"..., m_bError = false, m_iLen = 8474187}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fa258b0b340 "\230\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 37, m_sClientName = {m_sValue = 0x7fa25bd13930 "127.0.0.1:50846", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 71, m_iTid = 22085, m_tmConnect = 1580458876951118, m_tmStart = 1580458877147122, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fa4e07e4ce0, m_pNext = 0x7fa4e0982ce0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fa25a33a0a0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 16777216, m_iUsed = 8474186, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fa258f77bf0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fa308009be0
#16 CSphThdPool::Tick (pArg=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x1d4e460
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x1d47500) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x1d47500
        pCleanup = <optimized out>
#18 0x00007fa4e6534e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fa4e4d4d88d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 25 (Thread 0x7fa4e0578700 (LWP 22082)):
#0  0x00007fa4e653b50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fa4e6536e5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fa4e6536d28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x1c6a368) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x1c68dd0, pNewSeg=pNewSeg@entry=0x7fa27891f350, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x1c6a368, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x1c68e00, 
            m_iCount = 140331265910416}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140333756040416}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 10000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x1c68dd0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fa16b416690
        pNewSeg = {m_pPtr = 0x7fa27891f350}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x20 <Address 0x20 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fa4e0573ad0, pIndex=0x1c68dd0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fa1fdbd8c20}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -531153536, 
              m_iMinInfixLen = 32676, m_iMaxSubstringLen = 29789648, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = 1799448208, 
              m_bIndexSP = 161, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa1fdbd8c20, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346115177856}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346115177536}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa2fc00c8f0, m_iCount = 140331265910416}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 29789696}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fa278696610 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 9999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 273, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fa4e0573ad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fa1fdb8a840: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fa278698930 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fa16b416690, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x1c68e00: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x1cba220 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d4dfe8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d54b98, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x1c6ae90, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fa1fdb67d40, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fa2ae4d75e0, m_iCount = 10000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16384}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa278698c70, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa1fdb67c30, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fa1fdb67ce0, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fa2fc00bfc8, sQuery=..., tOutput=..., uPacketID=@0x7fa2fc00cd89: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fa4e0575160}
        tCrashQuery = {
          m_pQuery = 0x7fa1ff161000 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 9743445, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = '\000' <repeats 4095 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fa2fc00cd89, 
          m_tOut = @0x7fa4e0577c70, m_iCID = 44, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fa278696148, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fa2fc00cd89: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fa2fc009c00) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fa1ff161000 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 9743445, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fa1a0000030 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fa1a094ac86 "0b0a2fdd9d17104e65ed38c85b17 6f11e86a6e92ce565aa629f732d89dd7 dcf0d7d2cd120bf42580d43f29785dd3 5396a90b72b0ccd288e8eae42a258024'),(66288702764,10600236,2,2669589804,44,99,9765071,0,2005819342,37894090"..., m_bError = false, m_iLen = 9743446}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fa1fd420050 "\030\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 38, m_sClientName = {m_sValue = 0x7fa2b541f8f0 "127.0.0.1:50770", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 44, m_iTid = 22082, m_tmConnect = 1580458877484928, m_tmStart = 1580458877657183, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fa4e075ace0, m_pNext = 0x7fa4e079fce0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fa2b63bd1a0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 16777216, m_iUsed = 9743445, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fa1ff161000 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fa2fc013ca0
#16 CSphThdPool::Tick (pArg=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x1d4e460
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x1d47470) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x1d47470
        pCleanup = <optimized out>
#18 0x00007fa4e6534e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fa4e4d4d88d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 24 (Thread 0x7fa4e07a0700 (LWP 22074)):
#0  0x00007fa4e653b50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fa4e6536e5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fa4e6536d28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x1c6a368) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x1c68dd0, pNewSeg=pNewSeg@entry=0x7fa2c671ebc0, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x1c6a368, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0xa7d800a7d8a7d8a7, 
            m_iCount = -6352142725435316264}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -6352142725435316264}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 10000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x1c68dd0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fa2418c3ac0
        pNewSeg = {m_pPtr = 0x7fa2c671ebc0}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x30 <Address 0x30 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fa4e079bad0, pIndex=0x1c68dd0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fa2c5a542c0}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -528892544, 
              m_iMinInfixLen = 32676, m_iMaxSubstringLen = 29789648, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = 1099709120, 
              m_bIndexSP = 162, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa2c5a542c0, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346117438848}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346117438528}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa2fc019270, m_iCount = 140334861138624}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 29789696}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fa2c61f8610 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 9999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 339, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fa4e079bad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fa2c5a3c200: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fa2c61fe430 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fa2418c3ac0, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x1c68e00: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x1cba220 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d4dfe8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d54b98, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x1c6ae90, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fa2c5a19730, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fa2fa66fa40, m_iCount = 10000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16384}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa2c61fe770, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa2c5a19600, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fa2c5a196d0, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fa2fc018948, sQuery=..., tOutput=..., uPacketID=@0x7fa2fc019709: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fa4e079d160}
        tCrashQuery = {
          m_pQuery = 0x7fa2c6cd23a0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 5190887, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = "\v66404653356\b10612268\001\062\002\064\064\002\071\071\a9765071\001\060\n3874662544\t370604767\001\060\001\060\006\061\061\071\071\060\071\006\062\060\071\070\060\070\001\060\001\060\n3089861164\n1566634882\n1562448060\n1566634800\001\060\061\066\001\060\001\060\062\065", '\000' <repeats 3959 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fa2fc019709, m_tOut = @0x7fa4e079fc70, m_iCID = 75, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fa2c61f8148, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fa2fc019709: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fa2fc013c40) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fa2c6cd23a0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 5190887, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fa1d9000040 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fa1d94f3528 "0,0,686097,686097,0,0,1486705096,1567223880,1567273260,(0),'RE: Непреодолимые противоречия','Сейчас застройщики к центральному возвращаю"..., m_bError = false, m_iLen = 5190888}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fa2c61fc400 "H\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 40, m_sClientName = {m_sValue = 0x7fa2c61feb10 "127.0.0.1:50874", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 75, m_iTid = 22074, m_tmConnect = 1580458877443030, m_tmStart = 1580458877579225, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fa4e0577ce0, m_pNext = 0x7fa4e683cce0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fa2c71c58a0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 8388608, m_iUsed = 5190887, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fa2c6cd23a0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fa1870000e0
#16 CSphThdPool::Tick (pArg=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x1d4e460
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x1d49cb0) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x1d49cb0
        pCleanup = <optimized out>
#18 0x00007fa4e6534e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fa4e4d4d88d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 23 (Thread 0x7fa4e086f700 (LWP 22071)):
#0  0x00007fa4e653b50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fa4e6536e5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fa4e6536d28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x1c6a368) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x1c68dd0, pNewSeg=pNewSeg@entry=0x7fa1ebb7d520, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x1c6a368, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x1c68e00, 
            m_iCount = 140337400700880}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140333421155616}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 10000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x1c68dd0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fa2d8eadfd0
        pNewSeg = {m_pPtr = 0x7fa1ebb7d520}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x20 <Address 0x20 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fa4e086aad0, pIndex=0x1c68dd0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fa232271380}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -528044672, 
              m_iMinInfixLen = 32676, m_iMaxSubstringLen = 29789648, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = -655695920, 
              m_bIndexSP = 162, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa232271380, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346118286720}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346118286400}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa30800cc70, m_iCount = 140337400700880}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 29789696}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fa232a08ae0 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 9999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 486, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fa4e086aad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fa232231920: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fa232a145a0 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fa2d8eadfd0, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x1c68e00: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x1cba220 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d4dfe8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d54b98, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x1c6ae90, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fa23220ee20, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fa2a01a5840, m_iCount = 10000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16384}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa232a148e0, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa23220ed10, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fa23220edc0, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fa30800c348, sQuery=..., tOutput=..., uPacketID=@0x7fa30800d109: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fa4e086c160}
        tCrashQuery = {
          m_pQuery = 0x7fa111030780 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 8407112, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = "\000\070\060\071\063\060\067\065\060\070\063\061\t108793711\002\063\061\003\061\061\061\002\070\066\t186083783\001\061\n1283754979\t161152942\001\060\001\060\005\067\062\060\071\061\006\067\071\061\070\064\066\001\060\001\060\n3577308783\n1566442642\n1562375220\n1566442573\001\060\003\062\062\065", '\000' <repeats 3959 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fa30800d109, m_tOut = @0x7fa4e086ec70, m_iCID = 59, 
          m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fa232a08618, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fa30800d109: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fa30800d120) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fa111030780 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 8407112, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fa308013f80 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fa3088187c9 "1566225728,(0),'RE: 덕유산 육구종주','저도 잘은 모르고요. 대장님께서 삿갓제 도착해서 국공직원이 혹시나 어디서 올아왔냐고 물으면 꼭! 영각사에서 ", <incomplete sequence \353\235>..., m_bError = false, m_iLen = 8407113}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fa232a12410 "X\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 47, m_sClientName = {m_sValue = 0x7fa2335a66d0 "127.0.0.1:50806", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 59, m_iTid = 22071, m_tmConnect = 1580458877183429, m_tmStart = 1580458877362830, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fa4e0a51ce0, m_pNext = 0x7fa4e05bcce0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fa2300008c0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 16777216, m_iUsed = 8407112, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fa111030780 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fa308009c00
#16 CSphThdPool::Tick (pArg=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x1d4e460
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x1c6a790) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x1c6a790
        pCleanup = <optimized out>
#18 0x00007fa4e6534e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fa4e4d4d88d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 22 (Thread 0x7fa4e082a700 (LWP 22072)):
#0  0x00007fa4e653b50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fa4e6536e5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fa4e6536d28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x1c6a368) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x1c68dd0, pNewSeg=pNewSeg@entry=0x7fa2d1d7c380, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x1c6a368, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x1c68e00, 
            m_iCount = 140333605131056}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140337282007936}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 10000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x1c68dd0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fa1f6af1330
        pNewSeg = {m_pPtr = 0x7fa2d1d7c380}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x20 <Address 0x20 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fa4e0825ad0, pIndex=0x1c68dd0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fa2d18ed780}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -528327296, 
              m_iMinInfixLen = 32676, m_iMaxSubstringLen = 29789648, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = -156298448, 
              m_bIndexSP = 161, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa2d18ed780, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346118004096}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346118003776}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa30800b6f0, m_iCount = 140333605131056}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 29789696}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fa2d07afac0 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 9999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 323, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fa4e0825ad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fa2d18ef6d0: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fa2d07b1de0 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fa1f6af1330, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x1c68e00: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x1cba220 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d4dfe8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d54b98, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x1c6ae90, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fa2d18ccbd0, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fa2ce23e730, m_iCount = 10000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16384}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa2d07b2120, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa2d18ccac0, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fa2d18ccb70, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fa30800adc8, sQuery=..., tOutput=..., uPacketID=@0x7fa30800bb89: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fa4e0827160}
        tCrashQuery = {
          m_pQuery = 0x7fa2d00028f0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 8047693, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = "\ahits[0]\004\061\063\060\060bc1194961\001\063\003\061\061\063\003\061\071\067\t669900339\001\061\n3472800519\n1472786918\001\060\001\060\006\061\065\065\062\071\064\006\061\065\065\062\071\064\001\060\001\060\n3366445425\n1566296983\n1566311257\n1566296858\003\062\062\065", '\000' <repeats 3959 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fa30800bb89, m_tOut = @0x7fa4e0829c70, m_iCID = 69, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fa2d07af5f8, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fa30800bb89: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fa30800bf40) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fa2d00028f0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 8047693, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fa224000030 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fa2247acc7e "b44aba0c8bec685bae6bc545605 3fe9f96b924916d4a79a327a5914cbe7 ce02f2920d4b6764bf72a02b9d78e2e8 b80bb7740288fda1f201890375a60c8f 46d89b44aba0c8bec685bae6bc545605'),(81191010927,108336751,0,1755517295,11"..., m_bError = false, m_iLen = 8047694}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fa2d00008e0 "H\b", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 52, m_sClientName = {m_sValue = 0x7fa2d00008c0 "127.0.0.1:50832", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 69, m_iTid = 22072, m_tmConnect = 1580458876690607, m_tmStart = 1580458876838175, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fa4e0d03ce0, m_pNext = 0x7fa4e04edce0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fa2d09f8050 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 8388608, m_iUsed = 8047693, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fa2d00028f0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fa227000e80
#16 CSphThdPool::Tick (pArg=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x1d4e460
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x1d49c50) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x1d49c50
        pCleanup = <optimized out>
#18 0x00007fa4e6534e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fa4e4d4d88d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 21 (Thread 0x7fa4e0983700 (LWP 22067)):
#0  0x00007fa4e653b50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fa4e6536e5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fa4e6536d28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x1c6a368) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x1c68dd0, pNewSeg=pNewSeg@entry=0x7fa2db8ad5b0, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x1c6a368, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x1c68e00, 
            m_iCount = 140337688787856}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140337445262864}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 10000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x1c68dd0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fa2ea16bb90
        pNewSeg = {m_pPtr = 0x7fa2db8ad5b0}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x30 <Address 0x30 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fa4e097ead0, pIndex=0x1c68dd0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fa2d9926ac0}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -526914176, 
              m_iMinInfixLen = 32676, m_iMaxSubstringLen = 29789648, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = -367608944, 
              m_bIndexSP = 162, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa2d9926ac0, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346119417216}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346119416896}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa30400a8d0, m_iCount = 140337688787856}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 29789696}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fa2d977ccc0 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 9999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 861, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fa4e097ead0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fa2d98dfed0: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fa2d977efc0 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fa2ea16bb90, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x1c68e00: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x1cba220 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d4dfe8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d54b98, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x1c6ae90, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fa2d98bd3d0, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fa28abc6c40, m_iCount = 10000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16384}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa2d977f320, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa2d98bd2c0, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fa2d98bd370, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fa304009fa8, sQuery=..., tOutput=..., uPacketID=@0x7fa30400ad69: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fa4e0980160}
        tCrashQuery = {
          m_pQuery = 0x7fa2d80008c0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 11199067, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = "\v66484855340\b10612268\001\062\002\064\064\002\071\071\a9765071\001\061\n2165053340\n3878690912\001\060\001\060\006\061\061\071\071\060\071\006\062\060\071\070\060\070\001\060\001\060\n2110869036\n1566905923\n1562161800\n1566905891\001\060\066\001\060\001\060\062\065", '\000' <repeats 3959 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fa30400ad69, m_tOut = @0x7fa4e0982c70, m_iCID = 50, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fa2d977c7f8, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fa30400ad69: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fa30400e780) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fa2d80008c0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 11199067, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fa30581aeb0 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fa3062c910c "ly there.</p>  </div> ','','XST668480456 XFR441628705','559d43a212.exd9zde','steve3236','e3c04a783dae53fae0422e3a955bc02a 1fd7de7da0fce4963f775a5fdb894db5 4d236d9a2d102c5fe6ad1c50da4bec50 e3c04a783dae"..., m_bError = false, m_iLen = 11199068}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fa2d977a7e0 "(\b", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 53, m_sClientName = {m_sValue = 0x7fa2d97b0ea0 "127.0.0.1:50788", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 50, m_iTid = 22067, m_tmConnect = 1580458876895929, m_tmStart = 1580458877109749, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fa4e04a8ce0, m_pNext = 0x7fa4e0601ce0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fa2d9cb4430 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 16777216, m_iUsed = 11199067, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fa2d80008c0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fa30400d160
#16 CSphThdPool::Tick (pArg=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x1d4e460
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x1cd8600) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x1cd8600
        pCleanup = <optimized out>
#18 0x00007fa4e6534e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fa4e4d4d88d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 20 (Thread 0x7fa4e02c6700 (LWP 22092)):
#0  0x00007fa4e4d4de63 in epoll_wait () from /lib64/libc.so.6
No symbol table info available.
#1  0x000000000060535e in EpollEvents_c::Wait (this=0x7fa2fc0008c0, timeoutMs=<optimized out>) at /root/manticore_gitlab/src/searchdha.cpp:3998
        timeoutMs = <optimized out>
        this = 0x7fa2fc0008c0
#2  0x00000000005e18fb in CSphNetLoop::LoopNetPoll (this=this@entry=0x7fa4e02c5cf0) at /root/manticore_gitlab/src/searchd.cpp:20578
        bGot = <optimized out>
        iGotEvents = <optimized out>
        iConnections = 0
        dCleanup = {<VecTraits_T<ISphNetAction*>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<ISphNetAction*>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        tmNow = <optimized out>
        iSpinWait = <optimized out>
        iMaxIters = <optimized out>
        dWorkNext = {<VecTraits_T<ISphNetAction*>> = {m_pData = 0x7fa2fc005ba0, m_iCount = 0}, <sph::DefaultStorage_T<ISphNetAction*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 1024}
        tmLastWait = 1580458940185617
#3  0x00000000005e23a9 in CSphNetLoop::ThdLoop () at /root/manticore_gitlab/src/searchd.cpp:20738
        tQueryTLS = {m_pQuery = 0x0, m_iSize = 0, m_uCMD = 0, m_uVer = 0, m_bMySQL = false, m_bHttp = false, m_pIndex = 0x0, m_iIndexLen = 0}
        tLoop = {m_uTick = 1230, m_dWorkExternal = {<VecTraits_T<ISphNetAction*>> = {m_pData = 0x7fa2fc003b90, m_iCount = 0}, <sph::DefaultStorage_T<ISphNetAction*>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 1024}, 
          m_bGotExternal = false, m_pWakeupExternal = 0x7fa2fc003960, m_tExtLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutex = {__data = {__lock = 0, 
                __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_tPrf = {m_bEnable = false, m_tmTotal = 0, m_iPerfEv = 1254, m_iPerfNext = 0, m_iPerfExt = 1, 
            m_iPerfClean = 1}, m_pPoll = 0x7fa2fc0008c0, m_pShutdownCookie = 0x7fa2fc0039f0}
#4  0x00000000006f9735 in sphThreadProcWrapper (pArg=0x1d09c10) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x1d09c10
        pCleanup = <optimized out>
#5  0x00007fa4e6534e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#6  0x00007fa4e4d4d88d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 19 (Thread 0x7fa4e08b4700 (LWP 22070)):
#0  0x00007fa4e653b50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fa4e6536e5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fa4e6536d28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x1c6a368) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x1c68dd0, pNewSeg=pNewSeg@entry=0x7fa2ce117760, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x1c6a368, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x979fe1979fe1979f, 
            m_iCount = -6926088038978707487}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -2191106902432161385}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 10000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x1c68dd0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fa2f77f94a0
        pNewSeg = {m_pPtr = 0x7fa2ce117760}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x30 <Address 0x30 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fa4e08afad0, pIndex=0x1c68dd0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fa2cde803e0}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -527762048, 
              m_iMinInfixLen = 32676, m_iMaxSubstringLen = 29789648, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = -142633824, 
              m_bIndexSP = 162, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa2cde803e0, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346118569344}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346118569024}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa30400df10, m_iCount = 140337913762976}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 29789696}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fa2ce2c4130 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 9999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 841, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fa4e08afad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fa2cde5ec90: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fa2ce23e630 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fa2f77f94a0, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x1c68e00: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x1cba220 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d4dfe8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d54b98, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x1c6ae90, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fa2cde3c190, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fa1be4d3840, m_iCount = 10000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16384}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa2ce260990, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa2cde3c080, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fa2cde3c130, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fa30400d5e8, sQuery=..., tOutput=..., uPacketID=@0x7fa30400e3a9: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fa4e08b1160}
        tCrashQuery = {
          m_pQuery = 0x7fa250000030 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 6315916, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = "\ahits[0]\004\061\064\070\060bc71", '\000' <repeats 4078 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_uPacketID = @0x7fa30400e3a9, m_tOut = @0x7fa4e08b3c70, m_iCID = 78, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fa2ce2c3c68, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fa30400e3a9: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fa30400e760) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fa250000030 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 6315916, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fa30501aea0 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fa305620e2d "685bae6bc545605'),(81316688495,108336239,31,4147837039,111,86,186083783,0,2511770938,3237179928,0,0,72091,791846,0,0,1567269256,1567094460,1567269185,(0),'RE: Emak Hits Zaman Now, Cuci Baju di Pinggir"..., m_bError = false, m_iLen = 6315917}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fa2ce25e740 "X\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 41, m_sClientName = {m_sValue = 0x7fa2ce23dac0 "127.0.0.1:50906", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 78, m_iTid = 22070, m_tmConnect = 1580458877266593, m_tmStart = 1580458877468043, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fa4e0d48ce0, m_pNext = 0x7fa4e0a51ce0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fa250605fd0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 8388608, m_iUsed = 6315916, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fa250000030 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fa30400b140
#16 CSphThdPool::Tick (pArg=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x1d4e460
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x1c6a760) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x1c6a760
        pCleanup = <optimized out>
#18 0x00007fa4e6534e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fa4e4d4d88d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 18 (Thread 0x7fa4e0bab700 (LWP 22059)):
#0  0x00007fa4e653b50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fa4e6536e5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fa4e6536d28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x1c6a368) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x1c68dd0, pNewSeg=pNewSeg@entry=0x7fa1ee4876f0, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x1c6a368, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x1c68e00, 
            m_iCount = 140337091757856}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140333464188656}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 10000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x1c68dd0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fa2c680c720
        pNewSeg = {m_pPtr = 0x7fa1ee4876f0}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x20 <Address 0x20 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fa4e0ba6ad0, pIndex=0x1c68dd0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fa1eeef44d0}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -524653184, 
              m_iMinInfixLen = 32676, m_iMaxSubstringLen = 29789648, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = -964638944, 
              m_bIndexSP = 162, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa1eeef44d0, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346121678208}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346121677888}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa1a30009d0, m_iCount = 140337091757856}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 29789696}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fa1edf65c70 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 9999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 487, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fa4e0ba6ad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fa1eeeb8860: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fa1edf67f90 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fa2c680c720, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x1c68e00: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x1cba220 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d4dfe8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d54b98, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x1c6ae90, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fa1eee95d60, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fa2e9d9f220, m_iCount = 10000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16384}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa1edf682d0, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa1eee95c50, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fa1eee95d00, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fa1a30000a8, sQuery=..., tOutput=..., uPacketID=@0x7fa1a3000e69: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fa4e0ba8160}
        tCrashQuery = {
          m_pQuery = 0x7fa1ec0008c0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 9374561, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = "\000\066\066\062\062\070\062\065\063\064\070\064\b10612268\001\062\002\064\064\002\071\071\a9765071\001\061\n3484680791\n1963320441\001\060\001\060\006\061\061\071\071\060\071\006\062\060\071\070\060\070\001\060\001\060\n1748993836\n1566100441\n1564525980\n1566100381\001\060\001\060\061\003\062\062\065", '\000' <repeats 3959 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fa1a3000e69, m_tOut = @0x7fa4e0baac70, m_iCID = 60, 
          m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fa1edf657a8, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fa1a3000e69: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fa2fc009be0) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fa1ec0008c0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 9374561, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fa1f2000040 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fa1f28f0ba2 "ge sideboard because it looked nicer than a new one. I bought an old Victorian Mews house because being in it felt right, but it\\'s smaller and requires more maintenance than a new one.<br> <br> Incid"..., m_bError = false, m_iLen = 9374562}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fa1edf636f0 "\350\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 32, m_sClientName = {m_sValue = 0x7fa1eea2e440 "127.0.0.1:50810", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 60, m_iTid = 22059, m_tmConnect = 1580458877359095, m_tmStart = 1580458877543137, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fa4e683cce0, m_pNext = 0x7fa4e0532ce0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fa1ec8f1430 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 16777216, m_iUsed = 9374561, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fa1ec0008c0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fa2fc00d140
#16 CSphThdPool::Tick (pArg=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x1d4e460
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x1c6af60) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x1c6af60
        pCleanup = <optimized out>
#18 0x00007fa4e6534e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fa4e4d4d88d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 17 (Thread 0x7fa4e0a0d700 (LWP 22065)):
#0  0x00007fa4e653b50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fa4e6536e5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fa4e6536d28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x1c6a368) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x1c68dd0, pNewSeg=pNewSeg@entry=0x7fa29b57a800, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x1c6a368, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x1c68e00, 
            m_iCount = 140337358050912}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140334055822416}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 10000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x1c68dd0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fa2d6601660
        pNewSeg = {m_pPtr = 0x7fa29b57a800}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x30 <Address 0x30 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fa4e0a08ad0, pIndex=0x1c68dd0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fa2112d0f40}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -526348928, 
              m_iMinInfixLen = 32676, m_iMaxSubstringLen = 29789648, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = -698345888, 
              m_bIndexSP = 162, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa2112d0f40, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346119982464}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346119982144}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa2270009d0, m_iCount = 140337358050912}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 29789696}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fa210d6ddc0 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 9999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 474, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fa4e0a08ad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fa2112af5f0: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fa210d700e0 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fa2d6601660, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x1c68e00: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x1cba220 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d4dfe8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d54b98, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x1c6ae90, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fa21128caf0, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fa2de9c0120, m_iCount = 10000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16384}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa210d70420, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa21128c9e0, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fa21128ca90, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fa2270000a8, sQuery=..., tOutput=..., uPacketID=@0x7fa227000e69: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fa4e0a0a160}
        tCrashQuery = {
          m_pQuery = 0x7fa29aa43360 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 9684279, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = "\000\064\067\067\066\064\067\066\067\070\065\067\t402894961\001\063\003\061\061\063\003\061\071\067\t669900339\001\060\n3587764697\n3703220450\001\060\001\060\006\061\065\065\062\071\064\006\061\065\065\062\071\064\001\060\001\060\n2411627377\n1566437301\n1566451627\n1566437227\003\062\062\065", '\000' <repeats 3959 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fa227000e69, m_tOut = @0x7fa4e0a0cc70, m_iCID = 49, 
          m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fa210d6d8f8, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fa227000e69: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fa227000ea0) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fa29aa43360 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 9684279, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fa224800040 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fa22513c578 "a? Di mana jiwa kemanusiawiannya? Di mana jiwa sosialnya?<br />  <br />  Kalau pun itu sudah menjadi peraturan, kenapa peraturannya harus seperti itu? Masih banyak peraturan yang bisa diterapkan selai"..., m_bError = false, m_iLen = 9684280}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fa210d6b840 "\330\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 28, m_sClientName = {m_sValue = 0x7fa29a902bf0 "127.0.0.1:50782", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 49, m_iTid = 22065, m_tmConnect = 1580458876815696, m_tmStart = 1580458876989943, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fa4e0601ce0, m_pNext = 0x7fa4e0d03ce0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fa2980008c0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 16777216, m_iUsed = 9684279, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fa29aa43360 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fa308009bc0
#16 CSphThdPool::Tick (pArg=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x1d4e460
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x1cd85a0) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x1cd85a0
        pCleanup = <optimized out>
#18 0x00007fa4e6534e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fa4e4d4d88d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 16 (Thread 0x7fa4e06d1700 (LWP 22077)):
#0  Begin (this=0xc0) at /root/manticore_gitlab/src/sphinxstd.h:994
No locals.
#1  RtIndex_c::MultiQuery (this=this@entry=0x1c68dd0, pQuery=pQuery@entry=0x7fa2bc00c9f8, pResult=0x7fa2bf5e6098, iSorters=iSorters@entry=1, 
    ppSorters=ppSorters@entry=0x7fa2bc00e2c0, tArgs=...) at /root/manticore_gitlab/src/sphinxrt.cpp:6675
        pBlobPool = 0x7fa2dee37d90 ""
        iSeg = 29
        bFullscan = <optimized out>
        tFlx = {m_pFilters = 0x7fa2bc00ca80, m_pFilterTree = 0x7fa2bc00ca98, m_pSchema = 0x7fa2bf5ec940, m_pBlobPool = 0x0, m_eCollation = SPH_COLLATION_LIBC_CI, 
          m_bScan = false, m_pFilter = 0x0, m_pWeightFilter = 0x0, 
          m_dUserVals = {<VecTraits_T<SharedPtr_T<sph::Vector_T<long, sph::DefaultCopy_T<long>, sph::DefaultRelimit, sph::DefaultStorage_T<long> >*, Deleter_T<sph::Vector_T<long, sph::DefaultCopy_T<long>, sph::DefaultRelimit, sph::DefaultStorage_T<long> >*, (ETYPE)0>, ISphRefcountedMT> >> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<SharedPtr_T<sph::Vector_T<long, sph::DefaultCopy_T<long>, sph::DefaultRelimit, sph::DefaultStorage_T<long> >*, Deleter_T<sph::Vector_T<long, sph::DefaultCopy_T<long>, sph::DefaultRelimit, sph::DefaultStorage_T<long> >*, (ETYPE)0>, ISphRefcountedMT> >> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_pHistograms = 0x0}
        bRandomize = false
        iCutoff = -1238
        eOldState = SPH_QSTATE_UNKNOWN
        sModifiedQuery = <optimized out>
        pQueryParser = <optimized out>
        tPayloads = {m_dPayloads = {<VecTraits_T<ISphSubstringPayload*>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<ISphSubstringPayload*>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        dSorters = {<VecTraits_T<ISphMatchSorter*>> = {m_pData = 0x7fa2bf563540, m_iCount = 1}, <sph::DefaultStorage_T<ISphMatchSorter*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        bGotLocalDF = <optimized out>
        tStat = {m_dSrcWords = {<VecTraits_T<unsigned long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned long>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        tMaxSorterSchema = @0x7fa2bf5ec940: {_vptr.ISphSchema = 0x9d2850 <vtable for CSphRsetSchema+16>}
        tCtx = {<ISphNoncopyable> = {<No data fields>}, m_tQuery = @0x7fa2bc00c9f8, m_iWeights = 7, m_dWeights = {1, 1, 1, 1, 1, 1, 1, 0 <repeats 249 times>}, 
          m_uPackedFactorFlags = 0, m_pFilter = 0x0, m_pWeightFilter = 0x0, m_bSkipQCache = true, m_dCalcFilter = {<VecTraits_T<CSphQueryContext::CalcItem_t>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphQueryContext::CalcItem_t>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dCalcSort = {<VecTraits_T<CSphQueryContext::CalcItem_t>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphQueryContext::CalcItem_t>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dCalcFinal = {<VecTraits_T<CSphQueryContext::CalcItem_t>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphQueryContext::CalcItem_t>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_pIndexData = 0x0, m_pProfile = 0x0, m_pLocalDocs = 0x0, m_iTotalDocs = 3540000, m_iBadRows = 0, m_pIndexSegment = 0x0, 
          m_dUserVals = {<VecTraits_T<SharedPtr_T<sph::Vector_T<long, sph::DefaultCopy_T<long>, sph::DefaultRelimit, sph::DefaultStorage_T<long> >*, Deleter_T<sph::Vector_T<long, sph::DefaultCopy_T<long>, sph::DefaultRelimit, sph::DefaultStorage_T<long> >*, (ETYPE)0>, ISphRefcountedMT> >> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<SharedPtr_T<sph::Vector_T<long, sph::DefaultCopy_T<long>, sph::DefaultRelimit, sph::DefaultStorage_T<long> >*, Deleter_T<sph::Vector_T<long, sph::DefaultCopy_T<long>, sph::DefaultRelimit, sph::DefaultStorage_T<long> >*, (ETYPE)0>, ISphRefcountedMT> >> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pRanker = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x7fa2bc0095e0}
        pDict = {m_pPtr = 0x7fa2bf5ec8f0}
        iMaxSchemaIndex = <optimized out>
        tTermSetup = {<ISphQwordSetup> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphQwordSetup = 0xa112b0 <vtable for RtQwordSetup_t+16>, m_pIndex = 0x1c68dd0, 
            m_iDynamicRowitems = 0, m_iMaxTimer = 0, m_pWarning = 0x7fa2bf5e69b8, m_pCtx = 0x7fa4e06ca7d0, m_pNodeCache = 0x0, m_pZoneChecker = 0x7fa2bc0095e8, 
            m_pStats = 0x0, m_bSetQposMask = false, m_pDict = {m_pPtr = 0x7fa2bf5ec8f0}}, m_tGuard = @0x7fa4e06ca690, m_iSeg = 29}
        pFieldFilter = {m_pPtr = 0x0}
        tmQueryStart = 1580458940186186
        dDiskBlobPools = {<VecTraits_T<unsigned char const*>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSorterSchemas = {<VecTraits_T<ISphSchema const*>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<ISphSchema const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        pQueryTokenizer = {m_pPtr = 0x7fa2bfd7ed30}
        iTotalDocs = <optimized out>
        tDiskStat = {m_dSrcWords = {<VecTraits_T<unsigned long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned long>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        tParsed = {<ISphNoncopyable> = {<No data fields>}, m_sParseError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sParseWarning = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_dZones = {<VecTraits_T<CSphString>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_pRoot = 0x7fa2bf563770, 
          m_bNeedSZlist = false, m_bSingleWord = true, m_bEmpty = false}
        pProfiler = 0x0
        pLocalDocs = <optimized out>
        iMatchPoolSize = 1000
        iNanoBudget = 0
        dFiltered = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        tGuard = {<ISphNoncopyable> = {<No data fields>}, m_dRamChunks = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {
              m_pData = 0x7fa2bf563598, m_iCount = 58}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <No data fields>}, m_dDiskChunks = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<CSphIndex const*>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphIndex const*>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <No data fields>}, m_pReading = 0x1c6a2c8}
        hLocalDocs = {m_dHash = {0x0 <repeats 256 times>}, m_pFirstByOrder = 0x0, m_pLastByOrder = 0x0, m_iLength = 0, m_pIterator = 0x0}
        tmMaxTimer = <optimized out>
        tQueryStats = {m_pNanoBudget = 0x7fa4e06ca568, m_iFetchedDocs = 0, m_iFetchedHits = 0, m_iSkips = 0}
#2  0x0000000000846527 in RtIndex_c::MultiQueryEx (this=0x1c68dd0, iQueries=<optimized out>, ppQueries=<optimized out>, ppResults=0x7fa2bf5634f0, 
    ppSorters=0x7fa2bc00e2c0, tArgs=...) at /root/manticore_gitlab/src/sphinxrt.cpp:6800
        i = <optimized out>
        bResult = false
#3  0x00000000005bc71c in SearchHandler_c::RunLocalSearches (this=this@entry=0x7fa4e06cf1a0) at /root/manticore_gitlab/src/searchd.cpp:5729
        dResults = <optimized out>
        pServed = 0x1d0d940
        tQueueRes = {<ISphNoncopyable> = {<No data fields>}, m_uPackedFactorFlags = 0, m_bZonespanlist = false, m_bAlowMulti = false}
        iValidSorters = 1
        tStats = {<CSphQueryResult> = {<CSphQueryResultMeta> = {_vptr.CSphQueryResultMeta = 0x9b0f10 <vtable for AggrResult_t+16>, m_iQueryTime = 0, 
              m_iRealQueryTime = 0, m_iCpuTime = 0, m_iMultiplier = 1, m_hWordStats = {m_dHash = {0x0 <repeats 256 times>}, m_pFirstByOrder = 0x0, m_pLastByOrder = 0x0, 
                m_iLength = 0, m_pIterator = 0x0}, m_iMatches = 0, m_iTotalMatches = 0, m_tIOStats = {m_iReadTime = 0, m_iReadOps = 0, m_iReadBytes = 0, 
                m_iWriteTime = 0, m_iWriteOps = 0, m_iWriteBytes = 0, m_bEnabled = false, m_pPrev = 0x0}, m_iAgentCpuTime = 0, m_tAgentIOStats = {m_iReadTime = 0, 
                m_iReadOps = 0, m_iReadBytes = 0, m_iWriteTime = 0, m_iWriteOps = 0, m_iWriteBytes = 0, m_bEnabled = false, m_pPrev = 0x0}, m_iPredictedTime = 0, 
              m_iAgentPredictedTime = 0, m_iAgentFetchedDocs = 0, m_iAgentFetchedHits = 0, m_iAgentFetchedSkips = 0, m_tStats = {m_pNanoBudget = 0x0, m_iFetchedDocs = 0, 
                m_iFetchedHits = 0, m_iSkips = 0}, m_bHasPrediction = false, m_sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
                static SAFETY_GAP = 4}, m_sWarning = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
              m_iBadRows = 0}, m_dMatches = {<VecTraits_T<CSphMatch>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphMatch>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
            m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                    m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                    static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                    m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                    static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
              static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x7fa2bf563270 "(nameless)", 
                static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 0, 
              m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
              m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
              m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_pBlobPool = 0x0, m_pDocstore = 0x0, 
            m_iOffset = 0, m_iCount = 0, m_iSuccesses = 0, m_pProfile = 0x0}, m_dSchemas = {<VecTraits_T<CSphSchema>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<CSphSchema>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dMatchCounts = {<VecTraits_T<int>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dLockedAttrs = {<VecTraits_T<CSphIndex const*>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphIndex const*>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dZeroCount = {<VecTraits_T<CSphString>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dTag2Docstore = {
            m_dPool = {<VecTraits_T<PoolPtrs_t>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<PoolPtrs_t>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        bResult = false
        dSorters = {<VecTraits_T<ISphMatchSorter*>> = {m_pData = 0x7fa2bc00e2c0, m_iCount = 1}, <sph::DefaultStorage_T<ISphMatchSorter*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dErrors = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<CSphString>> = {m_pData = 0x7fa2bc00e318, m_iCount = 1}, <sph::DefaultStorage_T<CSphString>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}
        iOrderTag = 0
        iIndexWeight = 1
        tCrashQuery = {m_pQuery = 0x7fa2bc00c850 "select * from rt where match('abc') limit 10", m_iSize = 44, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, 
          m_pIndex = 0x7fa2bf5ec5b0 "rt", m_iIndexLen = 2}
        tMultiArgs = {<ISphNoncopyable> = {<No data fields>}, m_iIndexWeight = 1, m_iTag = 0, m_uPackedFactorFlags = 0, m_bLocalDF = false, m_pLocalDocs = 0x0, 
          m_iTotalDocs = 0, m_bModifySorterSchemas = true}
        iLocal = 0
        tRefCrashQuery = {<ISphNoncopyable> = {<No data fields>}, m_tReference = {m_pQuery = 0x7fa2bc00c850 "select * from rt where match('abc') limit 10", m_iSize = 44, 
            m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, m_iIndexLen = 0}}
#4  0x00000000005ceef7 in SearchHandler_c::RunSubset (this=this@entry=0x7fa4e06cf1a0, iStart=iStart@entry=0, iEnd=iEnd@entry=0)
    at /root/manticore_gitlab/src/searchd.cpp:6480
        tmCpu = <optimized out>
        eOldState = SPH_QSTATE_UNKNOWN
        dRemotes = {<ISphNoncopyable> = {<No data fields>}, <sph::Vector_T<AgentConn_t*, sph::DefaultCopy_T<AgentConn_t*>, sph::DefaultRelimit, sph::DefaultStorage_T<AgentConn_t*> >> = {<VecTraits_T<AgentConn_t*>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<AgentConn_t*>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, <No data fields>}
        tReqBuilder = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}
        tReporter = {m_pPtr = 0x0}
        tParser = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}
        tmSubset = 1580458940186128
        tmLocal = -1580458940186135
        dDistrServedByAgent = {<VecTraits_T<DistrServedByAgent_t>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<DistrServedByAgent_t>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        iDivideLimits = 1
        tIO = {m_iReadTime = 0, m_iReadOps = 4294967295, m_iReadBytes = 0, m_iWriteTime = 0, m_iWriteOps = 0, m_iWriteBytes = 0, m_bEnabled = 255, m_pPrev = 0x0}
#5  0x00000000005cfc25 in SearchHandler_c::RunQueries (this=this@entry=0x7fa4e06cf1a0) at /root/manticore_gitlab/src/searchd.cpp:5110
        iStart = <optimized out>
        iEnd = <optimized out>
#6  0x00000000005d02c8 in HandleMysqlSelect (dRows=..., tHandler=...) at /root/manticore_gitlab/src/searchd.cpp:14159
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dAgentTimes = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
#7  0x00000000005fa6ac in CSphinxqlSession::Execute (this=this@entry=0x7fa30400e7e8, sQuery=..., tOutput=..., uPacketID=@0x7fa30400f5a9: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16642
        tHandler = {<ISphSearchHandler> = {_vptr.ISphSearchHandler = 0x9b11f0 <vtable for SearchHandler_c+16>}, m_dQueries = {<VecTraits_T<CSphQuery>> = {
              m_pData = 0x7fa2bc00c9f8, m_iCount = 1}, <sph::DefaultStorage_T<CSphQuery>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dResults = {<VecTraits_T<AggrResult_t>> = {
              m_pData = 0x7fa2bf5e6098, m_iCount = 1}, <sph::DefaultStorage_T<AggrResult_t>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, 
          m_dQueryIndexStats = {<VecTraits_T<StatsPerQuery_t>> = {m_pData = 0x7fa2bf5ec758, m_iCount = 1}, <sph::DefaultStorage_T<StatsPerQuery_t>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, 
          m_dFailuresSet = {<VecTraits_T<SearchFailuresLog_c>> = {m_pData = 0x7fa2bc00e068, m_iCount = 1}, <sph::DefaultStorage_T<SearchFailuresLog_c>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, 
          m_dAgentTimes = {<VecTraits_T<sph::Vector_T<long, sph::DefaultCopy_T<long>, sph::DefaultRelimit, sph::DefaultStorage_T<long> > >> = {m_pData = 0x7fa2bc00e138, 
              m_iCount = 1}, <sph::DefaultStorage_T<sph::Vector_T<long, sph::DefaultCopy_T<long>, sph::DefaultRelimit, sph::DefaultStorage_T<long> > >> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, 
          m_dLocked = {<ISphNoncopyable> = {<No data fields>}, m_hUsed = {m_dHash = {0x0 <repeats 174 times>, 0x7fa2bc00c930, 0x0 <repeats 81 times>}, 
              m_pFirstByOrder = 0x7fa2bc00c930, m_pLastByOrder = 0x7fa2bc00c930, m_iLength = 1, m_pIterator = 0x0}, m_hUnmanaged = {m_dHash = {0x0 <repeats 256 times>}, 
              m_pFirstByOrder = 0x0, m_pLastByOrder = 0x0, m_iLength = 0, m_pIterator = 0x0}}, 
          m_dTables = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<ISphTableFunc*>> = {m_pData = 0x7fa2bc00c890, 
              m_iCount = 1}, <sph::DefaultStorage_T<ISphTableFunc*>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, 
          m_tThd = @0x7fa4e06d0ca0, m_iStart = 0, m_iEnd = 0, m_bMultiQueue = false, m_bFacetQueue = false, m_dLocal = {<VecTraits_T<LocalIndex_t>> = {
              m_pData = 0x7fa2bf5ec648, m_iCount = 1}, <sph::DefaultStorage_T<LocalIndex_t>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, 
          m_dExtraSchemas = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<sph::Vector_T<CSphString, sph::DefaultCopy_T<CSphString>, sph::DefaultRelimit, sph::DefaultStorage_T<CSphString> > >> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<sph::Vector_T<CSphString, sph::DefaultCopy_T<CSphString>, sph::DefaultRelimit, sph::DefaultStorage_T<CSphString> > >> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_pUpdates = 0x0, m_pDelDocs = 0x0, m_pProfile = 0x0, 
          m_eQueryType = QUERY_SQL, m_pQueryParser = 0x7fa2bf563ab0, m_tHook = {<ISphExprHook> = {_vptr.ISphExprHook = 0xa19af0 <vtable for ExprHook_c+16>}, 
            m_pIndex = 0x1c68dd0, m_pProfiler = 0x0}, m_hLocalDocs = {m_dHash = {0x0 <repeats 256 times>}, m_pFirstByOrder = 0x0, m_pLastByOrder = 0x0, m_iLength = 0, 
            m_pIterator = 0x0}, m_iTotalDocs = 0, m_bGotLocalDF = false, m_bMaster = true, m_bFederatedUser = false, m_bQueryLog = true}
        tCrashQuery = {m_pQuery = 0x7fa2bc00c850 "select * from rt where match('abc') limit 10", m_iSize = 44, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, 
          m_pIndex = 0x0, m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_SELECT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = "\v55983798507\t442620395\002\062\066\003\062\063\065\003\061\071\061\b91752119\001\061\t322649452\t916796314\001\060\001\060\006\066\071\063\064\066\060\006\066\071\063\064\066\060\001\060\001\060\n4369293035\n1566419851\n1566425700\n1566419816\001\060\001\060\062\065", '\000' <repeats 3959 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fa30400f5a9, m_tOut = @0x7fa4e06d0c70, m_iCID = 101, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fa2bf5607e8, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_SELECT_SYSVAR
#8  0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fa30400f5a9: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#9  0x00000000005d522e in ThdJobQL_t::Call (this=0x7fa30400f960) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {m_pQuery = 0x7fa2bc00c850 "select * from rt where match('abc') limit 10", m_iSize = 44, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, 
          m_pIndex = 0x7fa2bf5ec5b0 "rt", m_iIndexLen = 2}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, m_pBuf = 0x7fa16ae90bd0 "\003select * from rt where match('abc') limit 10comment\f!", 
          m_pCur = 0x7fa16ae90bfd "comment\f!", m_bError = false, m_iLen = 45}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fa2bc00a840 "\030\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 62, m_sClientName = {m_sValue = 0x7fa2bf563a90 "127.0.0.1:51118", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9a077b "select", m_iConnID = 101, m_iTid = 22077, m_tmConnect = 1580458940186055, m_tmStart = 1580458940186109, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0xdab480 <g_dThd>, m_pNext = 0x7fa4e0646ce0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fa2bd7e6f20 "select * from rt where match('abc') limit 10", m_iSize = 256, m_iUsed = 44, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {m_sValue = 0x7fa2bc00c850 "select * from rt where match('abc') limit 10", static EMPTY = <same as static member of an already seen type>, 
          static SAFETY_GAP = 4}
        bProfile = false
#10 0x00000000006fe010 in TickImpl (this=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fa30400f980
#11 CSphThdPool::Tick (pArg=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x1d4e460
#12 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x1c70b40) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x1c70b40
        pCleanup = <optimized out>
#13 0x00007fa4e6534e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#14 0x00007fa4e4d4d88d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 15 (Thread 0x7fa4e04ee700 (LWP 22084)):
#0  RtWordWriter_t::ZipWord (this=this@entry=0x7fa4e04e8f00, tWord=...) at /root/manticore_gitlab/src/sphinxrt.cpp:465
        pWords = 0x7fa2ba7fce80
        pEnd = <optimized out>
#1  0x000000000083a0fc in RtIndex_c::MergeKeywords (this=this@entry=0x1c68dd0, tSeg=..., tSeg1=..., tSeg2=..., dRowMap1=..., dRowMap2=...)
    at /root/manticore_gitlab/src/sphinxrt.cpp:2495
        iCmp = 2
        tOutDoc = {m_pDocs = 0x7fa2ba7fcec8, m_tLastRowID = 77400}
        tWord = {{m_uWordID = 140346114609280, m_sWord = 0x7fa4e04e9080 "\bdownplay", m_null = 140346114609280}, m_uDocs = 2, m_uHits = 2, m_uDoc = 9167325}
        tOut = {m_pWords = 0x7fa2ba7fce80, m_pCheckpoints = 0x7fa2ba7fce98, m_pKeywordCheckpoints = 0x7fa2ba7fcf38, m_tLastKeyword = {
            m_sLastKeyword = "downplaynihtmly.comience.orgledfsdfsd.....\212يييييييييي\000\016\022\001\000\360\223\201\240\203D\000\000\000\000\000\000\220\b\000\000\000\000\000\000\263D\000\000\353\b\000\000ЏN\340\244\177\000\000\022\001\000\000\000\000\000\000\"\000\000\000\000\000\000\000\200\001\000\000\231\000\000\000\004", m_iLastLen = 8}, m_uLastWordID = 140346114609280, m_uLastDoc = 9167315, m_iWords = 26, m_bKeywordDict = true, m_iWordsCheckpoint = 48}
        tIn1 = {
          m_tPackedWord = "\tdownright\000le\000\000bi\000\000l\000\062\064\066c778840e1\000dddd\000q\000g.\000\000\000\000\000\067\065\000\000\373\006\000\000P\220N\340\244\177\000\000\324\000\000\000\000\000\000\000\032\000\000\000\000\000\000\000B\001\000\000\221\000\000\000\003\000\000\000\000\000\000\000O\220N\340\244\177\000\000\200\220N\340\244\177\000\000\000\002\000\000\000\000\000\000\060\266n\343\241\177\000\000 \000", 
          m_pCur = 0x7fa1ee130995 "\204s\001\001\006\245ide\004\004\t\210s\004\004\031\211.\001\001\031\264town\002\002\006\265urns\001\001\f\211.\001\001\a\264vote\003\003\a\210d\002\002\022\211.\001\001\f\v", m_pMax = 0x7fa1ee15e356 "\001\001\001\b", m_tWord = {{m_uWordID = 140346114609088, m_sWord = 0x7fa4e04e8fc0 "\tdownright", 
              m_null = 140346114609088}, m_uDocs = 1, m_uHits = 1, m_uDoc = 573409}, m_iWords = 37, m_bWordDict = true, m_iWordsCheckpoint = 48, m_iCheckpoint = 391}
        pWords2 = 0x7fa4e04e9118
        tIn2 = {
          m_tPackedWord = "\bdownplay\000\000\000tml\000.com\000ence.org\000e\000fsdfs\000.....\000يييييييييي\000\000\000\000\000\000\000\000\006\000\000\000\000\000\000\000\360\221N\340\244\177\000\000\227\356\207\000\000\000\000\000`\316\177\272\242\177\000\000\254\221N\340\244\177\000\000\200\002v2\241\177\000\000 \000\000\270\242\177\000\000|?", 
          m_pCur = 0x7fa2b8d70360 "\250ing\001\001\r\265ours\002\002\b\304range\001\001\r\265ight\t\n\a\204s\036\037>\205.\003\003\321\001\265hift\001\001\030\251ing\001\001\a\245ide  \a\210.\001\001\265\001\231..\001\001\a\f\v.....slowing\001\001\n\210s!#\a\211.\004\004\276\001\226ze\003\003\027\210d\001\001\023\247ing\001\001\006\212.\001\001\a\265pout\001\001\a\305tairs\004\006\a\266ream\004\004\033\212.\001\001\031\252nya\001\001\t\364tempofox\001\001\a\245ime\005\b\n\210.\001\001 \245own,-\n\210.\003\003"..., m_pMax = 0x7fa2b8ec4300 "\353\062\313\n\r", m_tWord = {{m_uWordID = 140346114609280, m_sWord = 0x7fa4e04e9080 "\bdownplay", m_null = 140346114609280}, 
            m_uDocs = 2, m_uHits = 2, m_uDoc = 8574194}, m_iWords = 8, m_bWordDict = true, m_iWordsCheckpoint = 48, m_iCheckpoint = 3982}
        pWords1 = 0x7fa4e04e9058
#2  0x000000000083d7ed in RtIndex_c::MergeSegments (this=this@entry=0x1c68dd0, pSeg1=0x7fa1091d1180, pSeg2=0x7fa2ba7fcd10, bHasMorphology=bHasMorphology@entry=false)
    at /root/manticore_gitlab/src/sphinxrt.cpp:2569
        dRows = @0x7fa2ba7fcf08: {<VecTraits_T<unsigned int>> = {m_pData = 0x7fa1e2eac430, m_iCount = 2080000}, <sph::DefaultStorage_T<unsigned int>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::TightRelimit> = {<sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
            static SLOW_GROW_TRESHOLD = 1024}, m_iLimit = 2161793}
        dBlobs = @0x7fa2ba7fcf20: {<VecTraits_T<unsigned char>> = {m_pData = 0x7fa2bb47fc80 "", m_iCount = 780004}, <sph::DefaultStorage_T<unsigned char>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::TightRelimit> = {<sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
            static SLOW_GROW_TRESHOLD = 1024}, m_iLimit = 868777}
        dRowMap2 = {<VecTraits_T<unsigned int>> = {m_pData = 0x7fa13284c4d0, m_iCount = 120000}, <sph::DefaultStorage_T<unsigned int>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 131072}
        tNextRowID = 130000
        pSeg = 0x7fa2ba7fce60
        dRowMap1 = {<VecTraits_T<unsigned int>> = {m_pData = 0x7fa2ba771c10, m_iCount = 10000}, <sph::DefaultStorage_T<unsigned int>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16384}
        nBlobAttrs = <optimized out>
#3  0x000000000083d9e6 in RtIndex_c::MergeDoubleBufSegments (this=this@entry=0x1c68dd0) at /root/manticore_gitlab/src/sphinxrt.cpp:3678
        tMerged = <optimized out>
        i = 40
        tLast = {m_pPtr = 0x7fa2ba7fcd10}
        bHasMorphology = false
#4  0x0000000000849ba7 in RtIndex_c::SaveDiskChunk (this=this@entry=0x1c68dd0, iTID=iTID@entry=324, tGuard=..., tStats=..., bForce=bForce@entry=false, 
    iSavedChunkId=iSavedChunkId@entry=@0x7fa4e04e93ec: -1) at /root/manticore_gitlab/src/sphinxrt.cpp:3720
        tmSave = 1580458876655398
        dChunkNames = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fa2ba4abf20, m_iCount = 1}, <sph::DefaultStorage_T<int>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}
        pDiskChunk = 0x7fa133294ca0
        sChunk = {m_sValue = 0x800 <Address 0x800 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        sReason = <optimized out>
        sNewChunk = {m_sValue = 0x7fa133274c40 "rt.0", static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        tLast = {m_pPtr = 0x7fa2ba7fcd10}
#5  0x000000000084ac31 in RtIndex_c::CommitReplayable (this=this@entry=0x1c68dd0, pNewSeg=pNewSeg@entry=0x7fa13334f140, dAccKlist=..., 
    pTotalKilled=pTotalKilled@entry=0x0, bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2927
        tStat2Dump = {m_Stats = {m_iTotalDocuments = 3240000, m_iTotalBytes = 1639439444}, m_dFieldLens = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<long>> = {
              m_pData = 0x7fa133274140, m_iCount = 256}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <No data fields>}}
        tWriteLock = <optimized out>
        tChunksWLock = <optimized out>
        pDiskChunk = <optimized out>
        tGuard = {<ISphNoncopyable> = {<No data fields>}, m_dRamChunks = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {
              m_pData = 0x7fa133296cc8, m_iCount = 28}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <No data fields>}, m_dDiskChunks = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<CSphIndex const*>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphIndex const*>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <No data fields>}, m_pReading = 0x0}
        iSavedChunkId = -1
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        iTotalKilled = <optimized out>
        bSavedOk = false
        iNewDocs = 10000
        iFirstFieldLenAttr = <optimized out>
        iTID = 324
        iMemLimit = 1073741824
        bDump = true
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x1c68dd0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fa2f7800a70
        pNewSeg = {m_pPtr = 0x7fa13334f140}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x30 <Address 0x30 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fa4e04e9ad0, pIndex=0x1c68dd0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fa133294ca0}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -531718784, 
              m_iMinInfixLen = 32676, m_iMaxSubstringLen = 29789648, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = -142603664, 
              m_bIndexSP = 162, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa133294ca0, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346114612608}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346114612288}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa2fc012e60, m_iCount = 140337913793136}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 29789696}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fa2ba4ac470 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 9999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 463, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fa4e04e9ad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fa133296bf0: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fa2ba4ae790 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fa2f7800a70, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x1c68e00: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x1cba220 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d4dfe8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d54b98, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x1c6ae90, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fa1332740f0, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fa21ac8b570, m_iCount = 10000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16384}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa2ba4aead0, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa133273fe0, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fa133274090, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fa2fc012538, sQuery=..., tOutput=..., uPacketID=@0x7fa2fc0132f9: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fa4e04eb160}
        tCrashQuery = {
          m_pQuery = 0x7fa2b80008c0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 10639598, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = "\v47731046001\t402894961\001\063\003\061\061\063\003\061\071\067\t669900339\001\060\n2178159725\t316634129\001\060\001\060\006\061\065\065\062\071\064\006\061\065\065\062\071\064\001\060\001\060\n2411790449\n1566019435\n1566033719\n1566019321\003\062\062\065\065", '\000' <repeats 3959 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fa2fc0132f9, m_tOut = @0x7fa4e04edc70, m_iCID = 51, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fa2ba4abfa8, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fa2fc0132f9: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fa1870000c0) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fa2b80008c0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 10639598, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fa1a1000040 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fa1a1a2592f " The fight scenes were kinda just there but i really loved how the movie&#39;s OST was integrated into the scenes. That scene of Killmonger on the throne with the camera upside down gave me chills.</p"..., m_bError = false, m_iLen = 10639599}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fa2ba4a9ef0 "8\b", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 57, m_sClientName = {m_sValue = 0x7fa2ba4a9ed0 "127.0.0.1:50790", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 51, m_iTid = 22084, m_tmConnect = 1580458869371598, m_tmStart = 1580458869530241, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fa4e0829ce0, m_pNext = 0xdab480 <g_dThd>}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fa130000030 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 16777216, m_iUsed = 10639598, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fa2b80008c0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fa187000fc0
#16 CSphThdPool::Tick (pArg=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x1d4e460
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x1d474d0) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x1d474d0
        pCleanup = <optimized out>
#18 0x00007fa4e6534e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fa4e4d4d88d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 14 (Thread 0x7fa4e0cbf700 (LWP 22055)):
#0  0x00007fa4e653b50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fa4e6536e5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fa4e6536d28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x1c6a368) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x1c68dd0, pNewSeg=pNewSeg@entry=0x7fa2f2d53450, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x1c6a368, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x1c68e00, 
            m_iCount = 140336527015024}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140337835488336}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 10000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x1c68dd0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fa2a4d77c70
        pNewSeg = {m_pPtr = 0x7fa2f2d53450}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x30 <Address 0x30 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fa4e0cbaad0, pIndex=0x1c68dd0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fa2f2890440}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -523522688, 
              m_iMinInfixLen = 32676, m_iMaxSubstringLen = 29789648, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = -1529381776, 
              m_bIndexSP = 162, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa2f2890440, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346122808704}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346122808384}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa1cb0009d0, m_iCount = 140336527015024}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 29789696}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fa2f29dc980 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 9999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 2455, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fa4e0cbaad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fa2f2853900: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fa2f232a970 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fa2a4d77c70, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x1c68e00: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x1cba220 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d4dfe8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d54b98, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x1c6ae90, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fa2f2830e00, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fa21a0c6ef0, m_iCount = 10000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16384}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa2f29dee40, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa2f2830cf0, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fa2f2830da0, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fa1cb0000a8, sQuery=..., tOutput=..., uPacketID=@0x7fa1cb000e69: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fa4e0cbc160}
        tCrashQuery = {
          m_pQuery = 0x7fa2f00008c0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 8502827, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = '\000' <repeats 4095 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fa1cb000e69, 
          m_tOut = @0x7fa4e0cbec70, m_iCID = 43, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fa2f29dc4b8, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fa1cb000e69: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fa30400d520) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fa2f00008c0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 8502827, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fa1c9000040 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fa1c981be6c "790383,31,2155679087,111,86,186083783,0,1052502267,2247722184,0,0,72091,791846,0,0,1566871534,1566508200,1566871463,(0),'RE: [Official] Mau bertanya seputar Bukalapak? Ada BukaThread nih Gan!','<div c"..., m_bError = false, m_iLen = 8502828}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fa2f23287e0 "(\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 35, m_sClientName = {m_sValue = 0x7fa2f29da480 "127.0.0.1:50768", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 43, m_iTid = 22055, m_tmConnect = 1580458877117098, m_tmStart = 1580458877343899, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fa4e05bcce0, m_pNext = 0x7fa4e0715ce0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fa150000030 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 16777216, m_iUsed = 8502827, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fa2f00008c0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fa30400d580
#16 CSphThdPool::Tick (pArg=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x1d4e460
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x1d0dc70) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x1d0dc70
        pCleanup = <optimized out>
#18 0x00007fa4e6534e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fa4e4d4d88d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 13 (Thread 0x7fa4e0bf0700 (LWP 22058)):
#0  0x00007fa4e653b50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fa4e6536e5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fa4e6536d28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x1c6a368) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x1c68dd0, pNewSeg=pNewSeg@entry=0x7fa11a681320, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x1c6a368, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x1c68e00, 
            m_iCount = 140335944948672}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140333582870336}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 10000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x1c68dd0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fa28225dbc0
        pNewSeg = {m_pPtr = 0x7fa11a681320}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x20 <Address 0x20 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fa4e0bebad0, pIndex=0x1c68dd0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fa1f403f040}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -524370560, 
              m_iMinInfixLen = 32676, m_iMaxSubstringLen = 29789648, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = -2111448128, 
              m_bIndexSP = 162, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa1f403f040, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346121960832}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346121960512}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa30400bad0, m_iCount = 140335944948672}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 29789696}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fa19b5aad60 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 9999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 1687, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fa4e0bebad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fa1f66dd000: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fa1f69c8820 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fa28225dbc0, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x1c68e00: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x1cba220 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d4dfe8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d54b98, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x1c6ae90, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fa1f66dced0, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fa2d645d300, m_iCount = 10000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16384}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa1f69c8840, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa1f66dc230, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fa1f66dc2e0, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fa30400b1a8, sQuery=..., tOutput=..., uPacketID=@0x7fa30400bf69: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fa4e0bed160}
        tCrashQuery = {
          m_pQuery = 0x7fa1f4b5ec60 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 10378102, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = "\000\064\067\067\065\062\062\071\060\071\062\071\t402894961\001\063\003\061\061\063\003\061\071\067\t669900339\001\061\n3472800519\n1472786918\001\060\001\060\006\061\065\065\062\071\064\006\061\065\065\062\071\064\001\060\001\060\n3366445425\n1566296983\n1566311257\n1566296858\003\062\062\065", '\000' <repeats 3959 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fa30400bf69, m_tOut = @0x7fa4e0befc70, m_iCID = 65, 
          m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fa19b5aa898, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fa30400bf69: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fa30400d540) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fa1f4b5ec60 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 10378102, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fa30401ae90 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fa304a00a07 "r> <br> It gives him all the scope to effect his &quot;well I tried but they* didn\\'t play ball&quot; strategy as regards any flavour of deal vs no deal without the overall leaving process being derai"..., m_bError = false, m_iLen = 10378103}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fa19b5a8880 "\210\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 48, m_sClientName = {m_sValue = 0x7fa1f64e9130 "127.0.0.1:50822", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 65, m_iTid = 22058, m_tmConnect = 1580458877866098, m_tmStart = 1580458878071027, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fa4e08f8ce0, m_pNext = 0x7fa4e041ece0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fa118000030 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 16777216, m_iUsed = 10378102, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fa1f4b5ec60 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fa30400d140
#16 CSphThdPool::Tick (pArg=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x1d4e460
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x1c6af30) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x1c6af30
        pCleanup = <optimized out>
#18 0x00007fa4e6534e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fa4e4d4d88d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 12 (Thread 0x7fa4e67b3700 (LWP 22051)):
#0  0x00007fa4e653b50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fa4e6536e5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fa4e6536d28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x1c6a368) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x1c68dd0, pNewSeg=pNewSeg@entry=0x7fa1b4fef3a0, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x1c6a368, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x1c68e00, 
            m_iCount = 140337866898160}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140332503069600}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 10000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x1c68dd0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fa2f4b47af0
        pNewSeg = {m_pPtr = 0x7fa1b4fef3a0}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x20 <Address 0x20 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fa4e67aead0, pIndex=0x1c68dd0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fa2fa22d740}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -428151424, 
              m_iMinInfixLen = 32676, m_iMaxSubstringLen = 29789648, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = -189498640, 
              m_bIndexSP = 162, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa2fa22d740, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346218179968}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346218179648}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa187000a70, m_iCount = 140337866898160}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 29789696}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fa1b4bd3af0 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 9999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 326, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fa4e67aead0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fa2fa2157e0: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fa1b4bd5e10 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fa2f4b47af0, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x1c68e00: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x1cba220 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d4dfe8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d54b98, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x1c6ae90, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fa2fa1f2ce0, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fa296101a70, m_iCount = 10000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16384}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa1b4bd6150, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa2fa1f2bd0, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fa2fa1f2c80, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fa187000148, sQuery=..., tOutput=..., uPacketID=@0x7fa187000f09: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fa4e67b0160}
        tCrashQuery = {
          m_pQuery = 0x7fa2fa7c08f0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 4559123, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = "\000rt\002rtreader_template\btemplate", '\000' <repeats 4065 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_uPacketID = @0x7fa187000f09, m_tOut = @0x7fa4e67b2c70, m_iCID = 35, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fa1b4bd3628, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fa187000f09: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fa2fc00f500) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fa2fa7c08f0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 4559123, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fa1ad000040 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fa1ad459154 "yle: none; border-width: 0px; visibility: visible; image-rendering: -webkit-optimize-contrast;\\\" src=\\\"http://rental3651.com/onlinemall/btn_chat.jpg\\\" border=\\\"0\\\"> </a> <a href=\\\"http://s.ppomppu.co."..., m_bError = false, m_iLen = 4559124}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fa1b4bd1570 "\310\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 27, m_sClientName = {m_sValue = 0x7fa2fa0694e0 "127.0.0.1:50724", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 35, m_iTid = 22051, m_tmConnect = 1580458877717065, m_tmStart = 1580458877879881, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fa4e041ece0, m_pNext = 0x7fa4e0c79ce0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fa1b4000030 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 8388608, m_iUsed = 4559123, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fa2fa7c08f0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fa1af000fc0
#16 CSphThdPool::Tick (pArg=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x1d4e460
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x1c70c50) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x1c70c50
        pCleanup = <optimized out>
#18 0x00007fa4e6534e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fa4e4d4d88d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 11 (Thread 0x7fa4e0c7a700 (LWP 22056)):
#0  0x00007fa4e653b50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fa4e6536e5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fa4e6536d28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x1c6a368) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x1c68dd0, pNewSeg=pNewSeg@entry=0x7fa2a20956e0, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x1c6a368, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x1c68e00, 
            m_iCount = 140337155205424}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140336474204304}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 10000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x1c68dd0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fa2ca48e930
        pNewSeg = {m_pPtr = 0x7fa2a20956e0}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x20 <Address 0x20 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fa4e0c75ad0, pIndex=0x1c68dd0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fa2a04428c0}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -523805312, 
              m_iMinInfixLen = 32676, m_iMaxSubstringLen = 29789648, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = -901191376, 
              m_bIndexSP = 162, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa2a04428c0, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346122526080}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346122525760}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa2fc016af0, m_iCount = 140337155205424}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 29789696}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fa2a01c7d30 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 9999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 2572, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fa4e0c75ad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fa2a0433b80: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fa2a01ca030 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fa2ca48e930, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x1c68e00: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x1cba220 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d4dfe8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d54b98, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x1c6ae90, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fa2a0411080, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fa25ca7c130, m_iCount = 10000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16384}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa2a01ca390, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa2a0410f70, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fa2a0411020, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fa2fc0161c8, sQuery=..., tOutput=..., uPacketID=@0x7fa2fc016f89: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fa4e0c77160}
        tCrashQuery = {
          m_pQuery = 0x7fa2a1120740 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 10461498, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = "\ahits[0]\004\061\060\066\065bc7894961\001\063\003\061\061\063\003\061\071\067\t669900339\001\060\n1736782202\n1004822103\001\060\001\060\006\061\065\065\062\071\064\006\061\065\065\062\071\064\001\060\001\060\n2615638641\n1566464915\n1566479199\n1566464801\003\062\062\065", '\000' <repeats 3959 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fa2fc016f89, m_tOut = @0x7fa4e0c79c70, m_iCID = 63, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fa2a01c7868, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fa2fc016f89: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fa187000f20) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fa2a1120740 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 10461498, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fa23a000050 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fa23a9fa18b "0,1566265711,1559967660,1566265659,(0),'RE: [Amazon] Tempur-Pedic TEMPUR-ProForm Supreme 3-Inch Queen Mattress Topper ($214.19/미국내 무료)','<p> 세레니티</p> ','','XST9765071 XFR443029292','"..., m_bError = false, m_iLen = 10461499}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fa2a01c5850 "\250\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 44, m_sClientName = {m_sValue = 0x7fa2a2292ef0 "127.0.0.1:50816", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 63, m_iTid = 22056, m_tmConnect = 1580458877631764, m_tmStart = 1580458877858735, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fa4e67b2ce0, m_pNext = 0x7fa4e075ace0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fa180000030 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 16777216, m_iUsed = 10461498, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fa2a1120740 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fa2fc00bed0
#16 CSphThdPool::Tick (pArg=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x1d4e460
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x1d0dca0) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x1d0dca0
        pCleanup = <optimized out>
#18 0x00007fa4e6534e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fa4e4d4d88d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 10 (Thread 0x7fa4e0d04700 (LWP 22054)):
#0  0x00007fa4e653b50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fa4e6536e5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fa4e6536d28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x1c6a368) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x1c68dd0, pNewSeg=pNewSeg@entry=0x7fa29d1ed080, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x1c6a368, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x1c68e00, 
            m_iCount = 140336802363248}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140336401370064}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 10000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x1c68dd0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fa2b540f770
        pNewSeg = {m_pPtr = 0x7fa29d1ed080}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x30 <Address 0x30 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fa4e0cffad0, pIndex=0x1c68dd0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fa29d1d0340}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -523240064, 
              m_iMinInfixLen = 32676, m_iMaxSubstringLen = 29789648, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = -1254033552, 
              m_bIndexSP = 162, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa29d1d0340, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346123091328}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346123091008}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa1db0009d0, m_iCount = 140336802363248}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 29789696}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fa29dba18f0 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 9999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 799, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fa4e0cffad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fa29d1d2290: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fa29dba3c10 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fa2b540f770, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x1c68e00: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x1cba220 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d4dfe8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d54b98, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x1c6ae90, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fa29d1af790, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fa2ca4c1f60, m_iCount = 10000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16384}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa29dba3f50, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa29d1af680, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fa29d1af730, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fa1db0000a8, sQuery=..., tOutput=..., uPacketID=@0x7fa1db000e69: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fa4e0d01160}
        tCrashQuery = {
          m_pQuery = 0x7fa29c0008c0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 9786964, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = "\ahits[0]\004\061\060\061\063bc7894961\001\063\003\061\061\063\003\061\071\067\t669900339\001\060\n2178159725\t316634129\001\060\001\060\006\061\065\065\062\071\064\006\061\065\065\062\071\064\001\060\001\060\n2411790449\n1566019435\n1566033719\n1566019321\003\062\062\065\065", '\000' <repeats 3959 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fa1db000e69, m_tOut = @0x7fa4e0d03c70, m_iCID = 39, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fa29dba1428, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fa1db000e69: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fa1a3000ea0) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fa29c0008c0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 9786964, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fa0cc000030 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fa0cc955685 "8 b80bb7740288fda1f201890375a60c8f 46d89b44aba0c8bec685bae6bc545605'),(81136427631,430010223,31,3983889775,111,86,186083783,0,3988963022,467682331,0,0,72091,791846,0,0,1566914071,1561752120,1566914003"..., m_bError = false, m_iLen = 9786965}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fa29db9f370 "\270\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 30, m_sClientName = {m_sValue = 0x7fa29db9f350 "127.0.0.1:50754", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 39, m_iTid = 22054, m_tmConnect = 1580458876756278, m_tmStart = 1580458876926323, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fa4e0a0cce0, m_pNext = 0x7fa4e0829ce0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fa29dba7030 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 16777216, m_iUsed = 9786964, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fa29c0008c0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fa2fc00ac50
#16 CSphThdPool::Tick (pArg=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x1d4e460
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x1d0dc40) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x1d0dc40
        pCleanup = <optimized out>
#18 0x00007fa4e6534e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fa4e4d4d88d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 9 (Thread 0x7fa4e0b21700 (LWP 22061)):
#0  0x00007fa4e65389f5 in pthread_cond_wait@@GLIBC_2.3.2 () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00000000006fa1ab in AutoEvent_T<false>::WaitEvent (this=this@entry=0x1d4e468, iMsec=iMsec@entry=-1) at /root/manticore_gitlab/src/sphinxstd.cpp:1358
        ts = {tv_sec = 140338123569536, tv_nsec = 30729312}
        ns = <optimized out>
        iRes = <optimized out>
        bEventHappened = <optimized out>
#2  0x00000000006fdf9f in TickImpl (this=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2028
        pJob = <optimized out>
#3  CSphThdPool::Tick (pArg=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x1d4e460
#4  0x00000000006f9735 in sphThreadProcWrapper (pArg=0x1cd8df0) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x1cd8df0
        pCleanup = <optimized out>
#5  0x00007fa4e6534e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#6  0x00007fa4e4d4d88d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 8 (Thread 0x7fa4e0b66700 (LWP 22060)):
#0  0x00007fa4e65389f5 in pthread_cond_wait@@GLIBC_2.3.2 () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00000000006fa1ab in AutoEvent_T<false>::WaitEvent (this=this@entry=0x1d4e468, iMsec=iMsec@entry=-1) at /root/manticore_gitlab/src/sphinxstd.cpp:1358
        ts = {tv_sec = 140338123569600, tv_nsec = 30729312}
        ns = <optimized out>
        iRes = <optimized out>
        bEventHappened = <optimized out>
#2  0x00000000006fdf9f in TickImpl (this=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2028
        pJob = <optimized out>
#3  CSphThdPool::Tick (pArg=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x1d4e460
#4  0x00000000006f9735 in sphThreadProcWrapper (pArg=0x1c6af90) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x1c6af90
        pCleanup = <optimized out>
#5  0x00007fa4e6534e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#6  0x00007fa4e4d4d88d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 7 (Thread 0x7fa4e683d700 (LWP 22049)):
#0  0x00007fa4e653b50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fa4e6536e5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fa4e6536d28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x1c6a368) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x1c68dd0, pNewSeg=pNewSeg@entry=0x7fa1be14c0c0, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x1c6a368, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x1c68e00, 
            m_iCount = 140336937379968}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140332656235616}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 10000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x1c68dd0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fa2bd4d2880
        pNewSeg = {m_pPtr = 0x7fa1be14c0c0}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x30 <Address 0x30 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fa4e6838ad0, pIndex=0x1c68dd0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fa1bda97240}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -427586176, 
              m_iMinInfixLen = 32676, m_iMaxSubstringLen = 29789648, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = -1119016832, 
              m_bIndexSP = 162, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa1bda97240, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346218745216}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346218744896}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa2fc00ba20, m_iCount = 140336937379968}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 29789696}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fa1bdd9bcf0 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 9999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 376, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fa4e6838ad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fa1bda76b70: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fa2f78002b0 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fa2bd4d2880, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x1c68e00: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x1cba220 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d4dfe8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d54b98, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x1c6ae90, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fa1bda54070, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fa1fd400040, m_iCount = 10000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16384}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa2f78005f0, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa1bda53f60, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fa1bda54010, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fa2fc00b0f8, sQuery=..., tOutput=..., uPacketID=@0x7fa2fc00beb9: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fa4e683a160}
        tCrashQuery = {
          m_pQuery = 0x7fa1bcea8d20 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 10329423, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = '\000' <repeats 4095 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fa2fc00beb9, 
          m_tOut = @0x7fa4e683cc70, m_iCID = 61, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fa1bdd9b828, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fa2fc00beb9: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fa2fc013c80) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fa1bcea8d20 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 10329423, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fa1ac000030 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fa1ac9d9d80 "ct of Classic WoW on Private Servers','<div class=\\\"md\\\"> <p> If you can’t afford 15$ a month in 2019, you need to seriously reflect a bit on your life, and try as hard as you can to figure out wher"..., m_bError = false, m_iLen = 10329424}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fa1bdd99810 "\230\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 58, m_sClientName = {m_sValue = 0x7fa2f7800a00 "127.0.0.1:50812", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 61, m_iTid = 22049, m_tmConnect = 1580458877405851, m_tmStart = 1580458877611881, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fa4e079fce0, m_pNext = 0x7fa4e0baace0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fa2f4b57c70 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 16777216, m_iUsed = 10329423, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fa1bcea8d20 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fa2fc009c40
#16 CSphThdPool::Tick (pArg=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x1d4e460
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x1d4ece0) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x1d4ece0
        pCleanup = <optimized out>
#18 0x00007fa4e6534e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fa4e4d4d88d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 6 (Thread 0x7fa4e0d49700 (LWP 22053)):
#0  0x00007fa4e653b50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fa4e6536e5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fa4e6536d28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x1c6a368) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x1c68dd0, pNewSeg=pNewSeg@entry=0x7fa2ef43cb90, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x1c6a368, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x1c68e00, 
            m_iCount = 140336651429264}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140337723630112}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 10000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x1c68dd0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fa2ac41e590
        pNewSeg = {m_pPtr = 0x7fa2ef43cb90}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x30 <Address 0x30 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fa4e0d44ad0, pIndex=0x1c68dd0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fa2ef34e120}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -522957440, 
              m_iMinInfixLen = 32676, m_iMaxSubstringLen = 29789648, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = -1404967536, 
              m_bIndexSP = 162, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa2ef34e120, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346123373952}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346123373632}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa2fc015930, m_iCount = 140336651429264}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 29789696}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fa2ed5028e0 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 9999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 635, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fa4e0d44ad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fa2ef30c690: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fa2ed518350 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fa2ac41e590, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x1c68e00: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x1cba220 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d4dfe8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d54b98, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x1c6ae90, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fa2ef2e9b90, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fa2ed4e2400, m_iCount = 10000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16384}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa2ed518690, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa2ef2e9a80, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fa2ef2e9b30, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fa2fc015008, sQuery=..., tOutput=..., uPacketID=@0x7fa2fc015dc9: 2 '\002', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fa4e0d46160}
        tCrashQuery = {
          m_pQuery = 0x7fa2ed8881a0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 25589430, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = '\000' <repeats 2280 times>...}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fa2fc015dc9, 
          m_tOut = @0x7fa4e0d48c70, m_iCID = 55, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fa2ed502418, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fa2fc015dc9: 2 '\002', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fa2fc00acf0) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fa2ed8881a0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 25589430, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fa1f0000030 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fa1f18676e7 ";&gt;4034</a> </p>      <div class=\\\"viewReplyTo\\\" style=\\\"display: none;\\\"> </div>          <p class=\\\"comText\\\"> え</p> ','','XST669929385 XFR468745260','579636c344.1160004548/e27dc41e4559df4f853c2"..., m_bError = false, m_iLen = 25589431}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fa2ecd6cf20 "\030\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 42, m_sClientName = {m_sValue = 0x7fa2ecd6cf00 "127.0.0.1:50798", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 55, m_iTid = 22053, m_tmConnect = 1580458877317375, m_tmStart = 1580458877729537, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fa4e0532ce0, m_pNext = 0x7fa4e08b3ce0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fa270586010 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 33554432, m_iUsed = 25589430, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fa2ed8881a0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fa2fc00bf30
#16 CSphThdPool::Tick (pArg=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x1d4e460
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x1d0dae0) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x1d0dae0
        pCleanup = <optimized out>
#18 0x00007fa4e6534e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fa4e4d4d88d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 5 (Thread 0x7fa4e0d8e700 (LWP 22052)):
#0  0x00007fa4e65389f5 in pthread_cond_wait@@GLIBC_2.3.2 () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00000000006fa1ab in AutoEvent_T<false>::WaitEvent (this=this@entry=0x1d4e468, iMsec=iMsec@entry=-1) at /root/manticore_gitlab/src/sphinxstd.cpp:1358
        ts = {tv_sec = 0, tv_nsec = 30729312}
        ns = <optimized out>
        iRes = <optimized out>
        bEventHappened = <optimized out>
#2  0x00000000006fdf9f in TickImpl (this=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2028
        pJob = <optimized out>
#3  CSphThdPool::Tick (pArg=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x1d4e460
#4  0x00000000006f9735 in sphThreadProcWrapper (pArg=0x1c70c80) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x1c70c80
        pCleanup = <optimized out>
#5  0x00007fa4e6534e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#6  0x00007fa4e4d4d88d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 4 (Thread 0x7fa4e67f8700 (LWP 22050)):
#0  0x00007fa4e653b50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fa4e6536e5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fa4e6536d28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x1c6a368) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x1c68dd0, pNewSeg=pNewSeg@entry=0x7fa2a4ed05c0, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x1c6a368, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x1c68e00, 
            m_iCount = 140336859529056}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140336521379200}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 10000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x1c68dd0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fa2b8a93f60
        pNewSeg = {m_pPtr = 0x7fa2a4ed05c0}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x20 <Address 0x20 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fa4e67f3ad0, pIndex=0x1c68dd0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fa2a4e74060}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -427868800, 
              m_iMinInfixLen = 32676, m_iMaxSubstringLen = 29789648, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = -1196867744, 
              m_bIndexSP = 162, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa2a4e74060, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346218462592}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140346218462272}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fa2fc01f780, m_iCount = 140336859529056}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 29789696}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fa2a543a700 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 9999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 605, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fa4e67f3ad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fa2a4e75fb0: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fa2a543ca20 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fa2b8a93f60, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x1c68e00: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x1cba220 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d4dfe8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x1d54b98, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x1c6ae90, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fa2a4e534b0, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fa2bd17a4e0, m_iCount = 10000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16384}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa2a54bbc80, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fa2a4e533a0, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fa2a4e53450, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fa2fc01ee58, sQuery=..., tOutput=..., uPacketID=@0x7fa2fc01fc19: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fa4e67f5160}
        tCrashQuery = {
          m_pQuery = 0x7fa2a58205c0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 7799409, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = "\ahits[0]\003\070\067\062abc3894961\001\063\003\061\061\063\003\061\071\067\t669900339\001\061\n3472800519\n1472786918\001\060\001\060\006\061\065\065\062\071\064\006\061\065\065\062\071\064\001\060\001\060\n3366445425\n1566296983\n1566311257\n1566296858\003\062\062\065", '\000' <repeats 3959 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fa2fc01fc19, m_tOut = @0x7fa4e67f7c70, m_iCID = 68, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fa2a543a238, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fa2fc01fc19: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fa187000f60) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fa2a58205c0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 7799409, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fa1da000060 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fa1da7702d2 "6964519,(0),'RE: 내일부터 헬스 pt 받으러 갑니다','Pt 10회 40만원에 락커랑 운동복 지급이요~ 한달 헬스장 이용도 포함이구요 ㅎ','','XST9765071 XFR10612268','4c6a21"..., m_bError = false, m_iLen = 7799410}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fa2a5438220 "\210\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 51, m_sClientName = {m_sValue = 0x7fa2a54bbba0 "127.0.0.1:50830", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 68, m_iTid = 22050, m_tmConnect = 1580458878363115, m_tmStart = 1580458878562849, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fa4e03d9ce0, m_pNext = 0x7fa4e0adbce0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fa2a4017d70 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 8388608, m_iUsed = 7799409, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fa2a58205c0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fa2fc013cc0
#16 CSphThdPool::Tick (pArg=0x1d4e460) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x1d4e460
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x1cd83b0) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x1cd83b0
        pCleanup = <optimized out>
#18 0x00007fa4e6534e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fa4e4d4d88d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 3 (Thread 0x7fa4e6948700 (LWP 22047)):
#0  0x00007fa4e6538da2 in pthread_cond_timedwait@@GLIBC_2.3.2 () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00000000006fa286 in AutoEvent_T<true>::WaitEvent (this=this@entry=0xda1100 <LazyTasker()::dEvents+128>, iMsec=iMsec@entry=999)
    at /root/manticore_gitlab/src/sphinxstd.cpp:1414
        ts = {tv_sec = 1580458944, tv_nsec = 171278793}
        ns = <optimized out>
        iRes = 0
        bEventHappened = <optimized out>
#2  0x000000000062983a in EventTick (this=<optimized out>) at /root/manticore_gitlab/src/searchdtask.cpp:510
        iMsec = 999
#3  EventLoop (this=0xda1080 <LazyTasker()::dEvents>) at /root/manticore_gitlab/src/searchdtask.cpp:450
No locals.
#4  LazyJobs_c::WorkerFunc (pArg=0xda1080 <LazyTasker()::dEvents>) at /root/manticore_gitlab/src/searchdtask.cpp:579
        thLazy = {m_tRoleRef = @0xda1040}
        pThis = 0xda1080 <LazyTasker()::dEvents>
#5  0x00000000006f9735 in sphThreadProcWrapper (pArg=0x1c52910) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x1c52910
        pCleanup = <optimized out>
#6  0x00007fa4e6534e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#7  0x00007fa4e4d4d88d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 2 (Thread 0x7fa4e6882700 (LWP 22048)):
#0  0x00007fa4e6538da2 in pthread_cond_timedwait@@GLIBC_2.3.2 () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00000000006fa136 in AutoEvent_T<false>::WaitEvent (this=this@entry=0xda11c8 <LazyTasker()::dEvents+328>, 
    iMsec=<error reading variable: That operation is not available on integers of more than 8 bytes.>) at /root/manticore_gitlab/src/sphinxstd.cpp:1376
        ts = {tv_sec = 1580459543, tv_nsec = 171272198}
        ns = <optimized out>
        iRes = 0
        bEventHappened = <optimized out>
#2  0x0000000000628d84 in JobTick (tWorker=..., this=0xda1080 <LazyTasker()::dEvents>) at /root/manticore_gitlab/src/searchdtask.cpp:602
        bSignaled = <optimized out>
#3  JobLoop (pWorker=0x1d4eb00, this=0xda1080 <LazyTasker()::dEvents>) at /root/manticore_gitlab/src/searchdtask.cpp:630
No locals.
#4  LazyJobs_c::TheadPoolWorker (pArg=0x1d4eb00) at /root/manticore_gitlab/src/searchdtask.cpp:676
        thMtThread = {m_tRoleRef = @0xda1044}
#5  0x00000000006f9735 in sphThreadProcWrapper (pArg=0x1d4ec70) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x1d4ec70
        pCleanup = <optimized out>
#6  0x00007fa4e6534e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#7  0x00007fa4e4d4d88d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 1 (Thread 0x7fa4e694a880 (LWP 22046)):
#0  0x00007fa4e4d44953 in select () from /lib64/libc.so.6
No symbol table info available.
#1  0x0000000000646a74 in sphSleepMsec (iMsec=<optimized out>) at /root/manticore_gitlab/src/sphinx.cpp:2503
        tvTimeout = {tv_sec = 0, tv_usec = 352231}
#2  0x000000000064e1d5 in sphSleepMsec (iMsec=iMsec@entry=500) at /root/manticore_gitlab/src/sphinx.cpp:2492
No locals.
#3  0x00000000005c6272 in TickHead () at /root/manticore_gitlab/src/searchd.cpp:20037
        tmSleep = 500
        iClientSock = 775107130
        sClientName = "`\"\205\211\377\177\000\000\220!\205\211\377\177\000\000`\"\205\211\377\177"
        pListener = <optimized out>
        pThd = <optimized out>
#4  0x00000000005c8f0a in ServiceMain (argc=argc@entry=4, argv=argv@entry=0x7fff898538b8) at /root/manticore_gitlab/src/searchd.cpp:23602
        iRtFlushPeriod = <optimized out>
        dExactIndexes = {<VecTraits_T<CSphString>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        sLogFormat = <optimized out>
        dFailed = {<VecTraits_T<CSphString>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        hIndexes = {m_dHash = {0x0 <repeats 256 times>}, m_pFirstByOrder = 0x0, m_pLastByOrder = 0x0, m_iLength = 0, m_pIterator = 0x0}
        tQueryTLS = {m_pQuery = 0x0, m_iSize = 0, m_uCMD = 0, m_uVer = 0, m_bMySQL = false, m_bHttp = false, m_pIndex = 0x0, m_iIndexLen = 0}
        dOptIndexes = {<VecTraits_T<CSphString>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        bTestThdPoolMode = <optimized out>
        bOptDebugQlog = <optimized out>
        bOptListen = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        hSearchd = @0x1c59368: {<CSphOrderedHash<CSphVariant, CSphString, CSphStrHashFunc, 256>> = {m_dHash = {0x0 <repeats 11 times>, 0x1c5a670, 0x0, 0x0, 0x0, 
              0x1c5aad0, 0x0, 0x0, 0x1c5a5d0, 0x1c59d10, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1c5a990, 0x0, 0x0, 0x1c59ef0, 0x0, 0x1c5a2b0, 0x0 <repeats 13 times>, 
              0x1c5a490, 0x0 <repeats 34 times>, 0x1c5a850, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1c5aa30, 0x0 <repeats 15 times>, 0x1c59f90, 0x1c5ab70, 
              0x0 <repeats 31 times>, 0x1c5a3f0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1c5a210, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1c5a030, 
              0x0 <repeats 11 times>, 0x1c5a0d0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1c5a7b0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1c5ac10, 0x0, 0x0, 0x0, 0x0, 
              0x1c5a350, 0x0, 0x0, 0x0, 0x0, 0x1c59db0, 0x0 <repeats 19 times>, 0x1c59e50, 0x0 <repeats 17 times>, 0x1c5a530, 0x0 <repeats 12 times>, 0x1c5a170, 0x0, 
              0x0, 0x0, 0x0, 0x1c59c10, 0x0, 0x0}, m_pFirstByOrder = 0x1c59c10, m_pLastByOrder = 0x1c5ac10, m_iLength = 26, m_pIterator = 0x0}, m_iTag = 27}
        iOptPort = <optimized out>
        dListenerDescs = {<VecTraits_T<ListenerDesc_t>> = {m_pData = 0x1c52728, m_iCount = 2}, <sph::DefaultStorage_T<ListenerDesc_t>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        bOptStop = <optimized out>
        i = <optimized out>
        hSearchdpre = <optimized out>
        bThdPool = <optimized out>
        bVisualLoad = true
        bWatched = true
        thMain = {m_tRoleRef = @0xd9a5c0}
        bOptStatus = <optimized out>
        sOptListen = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bTestMode = <optimized out>
        bForcedPreread = <optimized out>
        bNewClusterForce = false
        hConf = @0xd9e580: {m_dHash = {0x0, 0x1c41440, 0x0 <repeats 90 times>, 0x1c58b10, 0x0 <repeats 22 times>, 0x1c566e0, 0x0 <repeats 80 times>, 0x1c578f0, 
            0x0 <repeats 59 times>}, m_pFirstByOrder = 0x1c41440, m_pLastByOrder = 0x1c58b10, m_iLength = 4, m_pIterator = 0x0}
        sEndian = <optimized out>
        conf = {m_dHash = {0x0 <repeats 256 times>}, m_pFirstByOrder = 0x0, m_pLastByOrder = 0x0, m_iLength = 0, m_pIterator = 0x0}
        bNewCluster = false
        uReplayFlags = <optimized out>
        bOptStopWait = <optimized out>
        bOptPIDFile = <optimized out>
        bOptPort = <optimized out>
        dConfig = {<VecTraits_T<char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        iDevNull = 3
#5  0x00000000005718f9 in mainimpl (argv=0x7fff898538b8, argc=4) at /root/manticore_gitlab/src/searchd.cpp:23662
        cTopOfMainStack = 0 '\000'
#6  main (argc=4, argv=0x7fff898538b8) at /root/manticore_gitlab/src/searchd.cpp:23668
No locals.

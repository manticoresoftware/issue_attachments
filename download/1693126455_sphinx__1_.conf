source cvMainIndex_10_0_src {
	type		=pgsql
	sql_host	=host
	sql_user	=user
	sql_pass	=pass
	sql_db		=database
	sql_port	=9988

	sql_query_pre	=SET client_encoding TO 'UTF8'
	sql_query_pre	= SET NAMES 'UTF8'
	sql_ranged_throttle	=1000
	sql_query_range	= SELECT MIN(cv_id),MAX(cv_id) FROM cv_index_10 WHERE cv_id between 60000000 and 60999999
	sql_query	=SELECT \
				cv_id as id,\
				cv_id,\
				experiences_titles,\
				experiences_description,\
				experiences_employers,\
				last_exp_desc,\
				(CASE WHEN is_confidential = 'f' THEN last_exp_emp ELSE NULL END) as last_exp_emp,\
				(CASE WHEN is_confidential = 'f' THEN previous_exp_emp ELSE NULL END) as previous_exp_emp,\
				last_exp_title,\
				last_exp_title_crc32,\
				previous_exp_title,\
				previous_exp_title_crc32,\
				(CASE WHEN is_confidential = 'f' THEN last_exp_emp_crc32 ELSE 0 END) as last_exp_emp_crc32,\
				(CASE WHEN is_confidential = 'f' THEN previous_exp_emp_crc32 ELSE 0 END) as previous_exp_emp_crc32,\
				(CASE WHEN months_of_experience != 999999 then months_of_experience  WHEN market_entry_date != 999999 then (to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date  ELSE 999999 END ) as total_months_of_experience,\
				industeries_roles_years,\
				present_industeries_roles_years,\
				last_jb_industry,\
				last_jb_role,\
				exp_roles_list,\
				exp_industries_list,\
				experiences_iso_encoded_list,\
				last_experience_iso_encoded,\
				target_jb_title,\
				emplyment_type_list,\
				emplyment_status_list,\
				target_job_locations_list,\
				target_job_industries_list,\
				notice_period,\
				trgt_job_salary,\
				(CASE WHEN trgt_job_salary < 0 then 0  WHEN trgt_job_salary = 0 then 1  WHEN trgt_job_salary < 500 THEN 2  WHEN trgt_job_salary <= 1000 THEN 3  WHEN trgt_job_salary <= 1500 THEN 4  WHEN trgt_job_salary <= 2000 THEN 5  WHEN trgt_job_salary <= 3000 THEN 6  WHEN trgt_job_salary <= 5000 THEN 7  WHEN trgt_job_salary <= 8000 THEN 8  WHEN trgt_job_salary <= 12000 THEN 9  WHEN trgt_job_salary <= 16000 THEN 10  WHEN trgt_job_salary <= 20000 THEN 11  WHEN trgt_job_salary <= 30000 THEN 12  WHEN trgt_job_salary <= 50000 THEN 13  ELSE 14  END) as salary_range_cluster_list,\
				career_level,\
				(CASE WHEN career_level = 6 THEN 2001 WHEN career_level < 6 THEN (career_level+1000)*2 ELSE career_level END) as career_level_sorted,\
				(CASE WHEN months_of_experience != 999999 then months_of_experience  WHEN market_entry_date != 999999 then (to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date  ELSE 0 END ) as months_of_experience_sorted,\
				objective_txt,\
				residence_location_iso_encoded,\
				LEFT(residence_location_iso_encoded::text,4)::int as residence_country_iso_encoded,\
				gender,\
				date_of_birth,\
				marital_status,\
				graduation_date,\
				visa_status,\
				car_license_countries_list_encoded,\
				edu_degree_list,\
				edu_iso_encoded_list,\
				edu_txt,\
				edu_major,\
				edu_majors_crc32_list,\
				lst_edu_major,\
				edu_institute,\
				edu_institute_crc32_list,\
				lst_edu_institute,\
				last_edu_degree,\
				skills_txt,\
				language_skills_levels_encoded_list,\
				cv_stage,\
				locale,\
				bcc_id,\
				generic_txt,\
				user_id,\
				gpa,\
				(CASE when gpa >= 99999 then 5 when gpa >= 8000 then 4 when gpa >= 6000 then 3 when gpa >= 4000 then 2 when gpa >= 2000 then 1 when gpa >= 0 then 0 end) as gpa_cluster,\
				extract('epoch' FROM date_indexed)::bigint AS date_indexed,\
				parent_bcc_id,\
				has_attachment,\
				has_photo,\
				has_video,\
				has_recommendation,\
				first_name,\
				middle_name,\
				last_name,\
				profile_name,\
				profile_id,\
				(case when referrer_source_id is null then 99999 else referrer_source_id end ) as referrer_source_id,\
				specilaities_list,\
				specilaities_text,\
				specilaities_points,\
				user_generic_field1,\
				 COALESCE(special_needs,99999) AS special_needs,\
				is_primary,\
				email_bouncing_p,\
				extract('epoch' FROM creation_date)::bigint AS creation_date,\
				is_confidential,\
				last_name_ar,\
				last_name_la,\
				first_name_ar,\
				first_name_la,\
				first_name_la || ' ' || last_name_la as full_name_la,\
				first_name_ar || ' ' || last_name_ar as full_name_ar,\
				primary_nationality,\
				(case when LEFT(residence_location_iso_encoded::text,4)::int = primary_nationality  and visa_status not in (1,7) then 0  when  LEFT(residence_location_iso_encoded::text,4)::int in (5560,6257,6254,4850,5857) and primary_nationality in (4751,6547,5769,6347,4854,6159)  then 0 else  primary_nationality end) as primary_nationality_cleaned,\
				nationalities_list,\
				specilaities_platinum,\
				specilaities_gold,\
				specilaities_silver,\
				specilaities_bronze,\
				bcc_text_fields,\
				has_flag,\
				registration_iso,\
				user_type,\
				cv_creation_method,\
				affliate_program_id,\
				cv_no_search_hits,\
				cv_no_submits_to,\
				cv_no_reviews,\
				completness_score,\
				extract('epoch' FROM registration_date)::bigint AS registration_date,\
				bcc_json_fields,\
				referrer_source,\
				user_generic_field2,\
				user_generic_field3,\
				user_generic_field4,\
				(case (CASE WHEN months_of_experience != 999999 then CEIL(months_of_experience/11.999)  WHEN market_entry_date != 999999 then ceil(((to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date)/11.999)  ELSE 999999 END )::bigint when 0 then 1 when 1 then 1 when 2 then 2 when 3 then 3 when 4 then 3 when 5 then 3 when 6 then 4 when 7 then 4 when 8 then 4 when 9 then 4 when 10 then 4 when 999999 then 6 else 5 end) as yrs_exp_cluster_id,\
				(case (CASE WHEN months_of_exp_after_grad != 999999 then CEIL(months_of_exp_after_grad/11.999) ELSE 999999 END )::bigint when 0 then 1 when 1 then 1 when 2 then 2 when 3 then 3 when 4 then 3 when 5 then 3 when 6 then 4 when 7 then 4 when 8 then 4 when 9 then 4 when 10 then 4 when 999999 then 6 else 5 end) as yrs_exp_after_grad_cluster_id,\
				(CASE WHEN completness_score < 20 THEN 1 WHEN completness_score < 40 THEN 2 WHEN completness_score < 60 THEN 3 WHEN completness_score < 80 THEN 4 WHEN completness_score < 500 THEN 5 END ) as completness_scores,\
				(case when premium_account > 0 then 1.35 else 1 end) * (case when extract('epoch' FROM mobile_confirm_date)::bigint > 0 then 1.15 else 1 end) * (case when email_bouncing_p = true then 0.01 else 1 end) * (CASE WHEN (completness_score > 99) THEN 1.5 WHEN (completness_score > 80) THEN (1+completness_score/250)  WHEN (completness_score > 50) THEN (1+completness_score/400) WHEN (completness_score > 25) THEN 0.9 ELSE 0.5 END) * (CASE WHEN (last_login_date > NOW()-INTERVAL '2629800 SECOND')    THEN 1.3 WHEN (last_login_date > NOW()-INTERVAL '7889400 SECOND')    THEN 1.23 WHEN (last_login_date > NOW()-INTERVAL '15778800 SECOND')   THEN 1.17  WHEN (last_login_date > NOW()-INTERVAL '31557600  SECOND')  THEN 1.12 WHEN (last_login_date > NOW()-INTERVAL '63115200  SECOND')  THEN 1.06 ELSE 1 END) * (CASE WHEN (date_indexed > NOW()-INTERVAL '2629800 SECOND')    THEN 1.5 WHEN (date_indexed > NOW()-INTERVAL '7889400 SECOND')    THEN 1.4 WHEN (date_indexed > NOW()-INTERVAL '15778800 SECOND')   THEN 1.3  WHEN (date_indexed > NOW()-INTERVAL '31557600  SECOND')  THEN 1.15 WHEN (date_indexed > NOW()-INTERVAL '63115200  SECOND')  THEN 1.13 ELSE 1 END)::float as cv_search_ranker,\
				(case when premium_account > 0 then 1.35 else 1 end) * (case when extract('epoch' FROM mobile_confirm_date)::bigint > 0 then 1.15 else 1 end) * (case when email_bouncing_p = true then 0.01 else 1 end) * (CASE WHEN (completness_score > 99) THEN 1.5 WHEN (completness_score > 80) THEN (1+completness_score/250)  WHEN (completness_score > 50) THEN (1+completness_score/400) WHEN (completness_score > 25) THEN 0.9 ELSE 0.5 END) * (CASE WHEN (last_login_date > NOW()-INTERVAL '2629800 SECOND')    THEN 1.3 WHEN (last_login_date > NOW()-INTERVAL '7889400 SECOND')    THEN 1.23 WHEN (last_login_date > NOW()-INTERVAL '15778800 SECOND')   THEN 1.17  WHEN (last_login_date > NOW()-INTERVAL '31557600  SECOND')  THEN 1.12 WHEN (last_login_date > NOW()-INTERVAL '63115200  SECOND')  THEN 1.06 ELSE 1 END) * (CASE WHEN (cv_builder_date_modified > NOW()-INTERVAL '2629800 SECOND')    THEN 1.5 WHEN (cv_builder_date_modified > NOW()-INTERVAL '7889400 SECOND')    THEN 1.4 WHEN (cv_builder_date_modified > NOW()-INTERVAL '15778800 SECOND')   THEN 1.3  WHEN (cv_builder_date_modified > NOW()-INTERVAL '31557600  SECOND')  THEN 1.15 WHEN (cv_builder_date_modified > NOW()-INTERVAL '63115200  SECOND')  THEN 1.13 ELSE 1 END)::float as byt_cv_search_ranker,\
				(CASE WHEN (is_primary = TRUE and profile_id > 0) THEN 1 ELSE 0 END) as user_public_profile_enable,\
				(case when email_bouncing_p = true then 0.01 else 1 end) * (1000*(1+0.2*(CASE WHEN has_photo = TRUE THEN 1 ELSE 0 END))) as people_ranker,\
				(CASE WHEN (sections_fields IS NULL OR sections_fields = ' ')   THEN 'tar per con edu exp'  ELSE sections_fields  END) as sections_fields,\
				extract('epoch' FROM cv_completion_date)::bigint AS cv_completion_date,\
				extract('epoch' FROM last_login_date)::bigint AS last_login_date,\
				(CASE WHEN (user_state IS NULL OR user_state = ' ')  THEN 'mini' ELSE user_state END) as user_state,\
				email_enc,\
				email_domain,\
				dependents,\
				cell_phone_enc,\
				home_phone_enc,\
				work_phone_enc,\
				cell_phone,\
				bounce_count,\
				last_salary_value,\
				receive_emails_list,\
				last_exp_emp as last_exp_emp_full,\
				last_exp_emp_crc32 as last_exp_emp_crc32_full,\
				user_lang_preference,\
				premium_account,\
				user_tests,\
				user_courses,\
				hobbies,\
				hopping,\
				gaps,\
				res_visa_status,\
				extract('epoch' FROM mobile_confirm_date)::bigint AS mobile_confirm_date,\
				viewer_ids,\
				extract('epoch' FROM first_bch_deg_date)::bigint AS first_bch_deg_date,\
				gsm,\
				last_gsc_id,\
				previous_gsc_id,\
				all_gsc_ids,\
				all_gsc_ids_txt,\
				last_gst_id,\
				previous_gst_id,\
				all_gst_ids,\
				other_gst_id,\
				target_gst_ids,\
				all_gst_ids_text,\
				highest_degree,\
				disabilities,\
				months_of_exp_after_grad,\
				cv_custom_json,\
				sessions_count,\
				photo_url,\
				unemployed,\
				orginal_nationality,\
				extract('epoch' FROM cv_builder_date_modified)::bigint AS cv_builder_date_modified,\
				trainings,\
				certificates,\
				training_institutes,\
				last_gsi_id,\
				previous_gsi_id,\
				all_gsi_ids,\
				target_jb_roles,\
				all_gsi_ids_txt,\
				3 as index_weight,\
				'ANYKEYWORD' as any_keyword,\
				last_exp_comp_size,\
                		extract('epoch' FROM updated_contact_date)::bigint AS updated_contact_date,\
				extract('epoch' FROM last_exp_start_date)::bigint AS last_exp_start_date\
			FROM \
				cv_index_10 \
			WHERE \
				insertion_date <  (SELECT lst_main_index_start_time FROM spx_delta_separator WHERE index_id = 110 LIMIT 1) \
				 AND cv_id>=$start AND cv_id<=$end

	sql_range_step	=25000
	sql_attr_uint		=cv_id
	sql_field_string		=last_exp_emp
	sql_field_string		=previous_exp_emp
	sql_field_string		=last_exp_title
	sql_attr_uint		=last_exp_title_crc32
	sql_field_string		=previous_exp_title
	sql_attr_uint		=previous_exp_title_crc32
	sql_attr_uint		=last_exp_emp_crc32
	sql_attr_uint		=previous_exp_emp_crc32
	sql_attr_uint		=total_months_of_experience
	sql_attr_multi		=bigint industeries_roles_years from field industeries_roles_years
	sql_attr_multi		=bigint present_industeries_roles_years from field present_industeries_roles_years
	sql_attr_uint		=last_jb_industry
	sql_attr_uint		=last_jb_role
	sql_attr_multi		=bigint exp_roles_list from field exp_roles_list
	sql_attr_multi		=bigint exp_industries_list from field exp_industries_list
	sql_attr_multi		=uint experiences_iso_encoded_list from field experiences_iso_encoded_list
	sql_attr_uint		=last_experience_iso_encoded
	sql_field_string		=target_jb_title
	sql_attr_multi		=uint emplyment_type_list from field emplyment_type_list
	sql_attr_multi		=uint emplyment_status_list from field emplyment_status_list
	sql_attr_multi		=uint target_job_locations_list from field target_job_locations_list
	sql_attr_multi		=uint target_job_industries_list from field target_job_industries_list
	sql_attr_uint		=notice_period
	sql_attr_uint		=trgt_job_salary
	sql_attr_uint		=salary_range_cluster_list
	sql_attr_uint		=career_level
        sql_attr_uint   	=career_level_sorted
        sql_attr_uint	        =months_of_experience_sorted
	sql_attr_uint		=residence_location_iso_encoded
	sql_attr_uint		=residence_country_iso_encoded
	sql_attr_uint		=gender
	sql_attr_uint		=date_of_birth
	sql_attr_uint		=marital_status
	sql_attr_uint		=graduation_date
	sql_attr_uint		=visa_status
	sql_attr_multi		=uint car_license_countries_list_encoded from field car_license_countries_list_encoded
	sql_attr_multi		=uint edu_degree_list from field edu_degree_list
	sql_attr_multi		=uint edu_iso_encoded_list from field edu_iso_encoded_list
	sql_attr_multi		=uint edu_majors_crc32_list from field edu_majors_crc32_list
	sql_attr_multi		=uint edu_institute_crc32_list from field edu_institute_crc32_list
	sql_attr_uint		=last_edu_degree
	sql_attr_multi		=uint language_skills_levels_encoded_list from field language_skills_levels_encoded_list
	sql_attr_uint		=cv_stage
	sql_attr_uint		=locale
	sql_attr_uint		=bcc_id
	sql_attr_uint		=user_id
	sql_attr_uint		=gpa
	sql_attr_uint		=gpa_cluster
	sql_attr_timestamp		=date_indexed
	sql_attr_uint		=parent_bcc_id
	sql_attr_bool		=has_attachment
	sql_attr_bool		=has_photo
	sql_attr_bool		=has_video
	sql_attr_bool		=has_recommendation
	sql_field_string		=first_name
	sql_field_string		=middle_name
	sql_field_string		=last_name
	sql_field_string		=profile_name
	sql_attr_uint		=profile_id
	sql_attr_uint		=referrer_source_id
	sql_attr_multi		=uint specilaities_list from field specilaities_list
	sql_attr_multi		=bigint specilaities_points from field specilaities_points
	sql_attr_uint		=special_needs
	sql_attr_bool		=is_primary
	sql_attr_bool		=email_bouncing_p
	sql_attr_timestamp		=creation_date
	sql_attr_bool		=is_confidential
	sql_field_string		=last_name_ar
	sql_field_string		=last_name_la
	sql_field_string		=first_name_ar
	sql_field_string		=first_name_la
	sql_attr_uint		=primary_nationality
	sql_attr_uint		=primary_nationality_cleaned
	sql_attr_multi          =uint nationalities_list from field nationalities_list
	sql_attr_uint		=registration_iso
	sql_attr_uint		=user_type
	sql_attr_uint		=cv_creation_method
	sql_attr_uint		=affliate_program_id
	sql_attr_uint		=cv_no_search_hits
	sql_attr_uint		=cv_no_submits_to
	sql_attr_uint		=cv_no_reviews
	sql_attr_uint		=completness_score
	sql_attr_timestamp		=registration_date
	sql_attr_multi		=bigint bcc_json_fields from field bcc_json_fields
	sql_attr_uint		=yrs_exp_cluster_id
	sql_attr_uint		=yrs_exp_after_grad_cluster_id
	sql_attr_uint		=completness_scores
	sql_attr_float		=cv_search_ranker
	sql_attr_float		=byt_cv_search_ranker
	sql_attr_uint		=user_public_profile_enable
	sql_attr_uint		=people_ranker
	sql_attr_timestamp		=cv_completion_date
	sql_attr_timestamp		=last_login_date
	sql_field_string		=user_state
	sql_field_string		=email_enc
	sql_field_string		=email_domain
	sql_attr_uint		=dependents
	sql_field_string		=cell_phone_enc
	sql_field_string		=home_phone_enc
	sql_field_string		=work_phone_enc
	sql_field_string		=cell_phone
	sql_attr_uint		=bounce_count
	sql_attr_uint		=last_salary_value
	sql_field_string		=last_exp_emp_full
	sql_attr_uint		=last_exp_emp_crc32_full
	sql_attr_uint		=user_lang_preference
	sql_attr_uint		=premium_account
	sql_attr_multi		=uint user_tests from field user_tests
	sql_attr_multi		=uint user_courses from field user_courses
	sql_attr_uint		=hopping
	sql_attr_uint		=gaps
	sql_attr_uint		=res_visa_status
	sql_attr_timestamp		=mobile_confirm_date
	sql_attr_timestamp		=first_bch_deg_date
	sql_attr_multi		=uint gsm from field gsm
	sql_attr_uint		=last_gsc_id
	sql_attr_uint		=previous_gsc_id
	sql_attr_multi		=uint all_gsc_ids from field all_gsc_ids
	sql_attr_multi		=uint last_gst_id from field last_gst_id
	sql_attr_multi		=uint previous_gst_id from field previous_gst_id
	sql_attr_multi		=uint all_gst_ids from field all_gst_ids
	sql_attr_multi		=uint other_gst_id from field other_gst_id
	sql_attr_multi		=uint target_gst_ids from field target_gst_ids
	sql_attr_uint		=highest_degree
	sql_attr_multi		=uint disabilities from field disabilities
	sql_attr_uint		=months_of_exp_after_grad
	sql_attr_json		=cv_custom_json
	sql_attr_uint		=sessions_count
	sql_field_string		=photo_url
	sql_attr_bool		=unemployed
	sql_attr_uint		=orginal_nationality
	sql_attr_timestamp		=cv_builder_date_modified
	sql_attr_uint		=last_gsi_id
	sql_attr_uint		=previous_gsi_id
	sql_attr_multi		=uint all_gsi_ids from field all_gsi_ids
	sql_attr_multi		=uint target_jb_roles from field target_jb_roles
    	sql_attr_uint       =last_exp_comp_size
   	sql_attr_timestamp  =updated_contact_date
	sql_attr_timestamp  =last_exp_start_date
	sql_attr_uint		=index_weight
	sql_attr_multi		=uint folder_id from ranged-query;  SELECT cv_id, folder_id FROM byt_employer_basket_10 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_employer_basket_10 WHERE cv_id between 60000000 and 60999999
	sql_attr_multi		=uint tag_id from ranged-query;  SELECT cv_id, tag_id FROM byt_item_tags_10 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_item_tags_10 WHERE cv_id between 60000000 and 60999999
	sql_attr_multi		=uint note_group_id from ranged-query;  SELECT cv_id, group_id FROM byt_comments_10 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_comments_10 WHERE cv_id between 60000000 and 60999999
}

		index cvMainIndex_10_0
		{
			type			= plain
			source 			= cvMainIndex_10_0_src
			path 			= /home/sphinx/sphinx/var/data/cvMainIndex_10_0
			morphology   = none
			dict=keywords
			index_sp  = 1
			index_zones		= b_*, is_agency, special_needs, referrer_source
			stopwords		= en,ar
			exceptions		= /home/sphinx/sphinx/var/data/exceptions.txt
			min_word_len		= 1
			charset_table		= non_cjk
			ngram_len		= 1
			#ngram_chars		=  non_cjk
			inplace_enable		= 0
			html_strip				= 1
			preopen				= 1
		}		

	source cvMainIndexStemmed_10_0_src {
	type		=pgsql
	sql_host	=host
	sql_user	=user
	sql_pass	=pass
	sql_db		=database
	sql_port	=9988

	sql_query_pre	=SET client_encoding TO 'UTF8'
	sql_query_pre	= SET NAMES 'UTF8'
	sql_ranged_throttle	=1000
	sql_query_range	= SELECT MIN(cv_id),MAX(cv_id) FROM cv_index_10 WHERE cv_id between 60000000 and 60999999
	sql_query	=SELECT \
				cv_id as id,\
				cv_id,\
				experiences_titles,\
				experiences_description,\
				experiences_employers,\
				last_exp_desc,\
				(CASE WHEN is_confidential = 'f' THEN last_exp_emp ELSE NULL END) as last_exp_emp,\
				(CASE WHEN is_confidential = 'f' THEN previous_exp_emp ELSE NULL END) as previous_exp_emp,\
				last_exp_title,\
				last_exp_title_crc32,\
				previous_exp_title,\
				previous_exp_title_crc32,\
				(CASE WHEN is_confidential = 'f' THEN last_exp_emp_crc32 ELSE 0 END) as last_exp_emp_crc32,\
				(CASE WHEN is_confidential = 'f' THEN previous_exp_emp_crc32 ELSE 0 END) as previous_exp_emp_crc32,\
				(CASE WHEN months_of_experience != 999999 then months_of_experience  WHEN market_entry_date != 999999 then (to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date  ELSE 999999 END ) as total_months_of_experience,\
				industeries_roles_years,\
				present_industeries_roles_years,\
				last_jb_industry,\
				last_jb_role,\
				exp_roles_list,\
				exp_industries_list,\
				experiences_iso_encoded_list,\
				last_experience_iso_encoded,\
				target_jb_title,\
				emplyment_type_list,\
				emplyment_status_list,\
				target_job_locations_list,\
				target_job_industries_list,\
				notice_period,\
				trgt_job_salary,\
				(CASE WHEN trgt_job_salary < 0 then 0  WHEN trgt_job_salary = 0 then 1  WHEN trgt_job_salary < 500 THEN 2  WHEN trgt_job_salary <= 1000 THEN 3  WHEN trgt_job_salary <= 1500 THEN 4  WHEN trgt_job_salary <= 2000 THEN 5  WHEN trgt_job_salary <= 3000 THEN 6  WHEN trgt_job_salary <= 5000 THEN 7  WHEN trgt_job_salary <= 8000 THEN 8  WHEN trgt_job_salary <= 12000 THEN 9  WHEN trgt_job_salary <= 16000 THEN 10  WHEN trgt_job_salary <= 20000 THEN 11  WHEN trgt_job_salary <= 30000 THEN 12  WHEN trgt_job_salary <= 50000 THEN 13  ELSE 14  END) as salary_range_cluster_list,\
				career_level,\
				(CASE WHEN career_level = 6 THEN 2001 WHEN career_level < 6 THEN (career_level+1000)*2 ELSE career_level END) as career_level_sorted,\
				(CASE WHEN months_of_experience != 999999 then months_of_experience  WHEN market_entry_date != 999999 then (to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date  ELSE 0 END ) as months_of_experience_sorted,\
				objective_txt,\
				residence_location_iso_encoded,\
				LEFT(residence_location_iso_encoded::text,4)::int as residence_country_iso_encoded,\
				gender,\
				date_of_birth,\
				marital_status,\
				graduation_date,\
				visa_status,\
				car_license_countries_list_encoded,\
				edu_degree_list,\
				edu_iso_encoded_list,\
				edu_txt,\
				edu_major,\
				edu_majors_crc32_list,\
				lst_edu_major,\
				edu_institute,\
				edu_institute_crc32_list,\
				lst_edu_institute,\
				last_edu_degree,\
				skills_txt,\
				language_skills_levels_encoded_list,\
				cv_stage,\
				locale,\
				bcc_id,\
				generic_txt,\
				user_id,\
				gpa,\
				(CASE when gpa >= 99999 then 5 when gpa >= 8000 then 4 when gpa >= 6000 then 3 when gpa >= 4000 then 2 when gpa >= 2000 then 1 when gpa >= 0 then 0 end) as gpa_cluster,\
				extract('epoch' FROM date_indexed)::bigint AS date_indexed,\
				parent_bcc_id,\
				has_attachment,\
				has_photo,\
				has_video,\
				has_recommendation,\
				first_name,\
				middle_name,\
				last_name,\
				profile_name,\
				profile_id,\
				(case when referrer_source_id is null then 99999 else referrer_source_id end ) as referrer_source_id,\
				specilaities_list,\
				specilaities_text,\
				specilaities_points,\
				user_generic_field1,\
				 COALESCE(special_needs,99999) AS special_needs,\
				is_primary,\
				email_bouncing_p,\
				extract('epoch' FROM creation_date)::bigint AS creation_date,\
				is_confidential,\
				last_name_ar,\
				last_name_la,\
				first_name_ar,\
				first_name_la,\
				first_name_la || ' ' || last_name_la as full_name_la,\
				first_name_ar || ' ' || last_name_ar as full_name_ar,\
				primary_nationality,\
				(case when LEFT(residence_location_iso_encoded::text,4)::int = primary_nationality  and visa_status not in (1,7) then 0  when  LEFT(residence_location_iso_encoded::text,4)::int in (5560,6257,6254,4850,5857) and primary_nationality in (4751,6547,5769,6347,4854,6159)  then 0 else  primary_nationality end) as primary_nationality_cleaned,\
				nationalities_list,\
				specilaities_platinum,\
				specilaities_gold,\
				specilaities_silver,\
				specilaities_bronze,\
				bcc_text_fields,\
				has_flag,\
				registration_iso,\
				user_type,\
				cv_creation_method,\
				affliate_program_id,\
				cv_no_search_hits,\
				cv_no_submits_to,\
				cv_no_reviews,\
				completness_score,\
				extract('epoch' FROM registration_date)::bigint AS registration_date,\
				bcc_json_fields,\
				referrer_source,\
				user_generic_field2,\
				user_generic_field3,\
				user_generic_field4,\
				(case (CASE WHEN months_of_experience != 999999 then CEIL(months_of_experience/11.999)  WHEN market_entry_date != 999999 then ceil(((to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date)/11.999)  ELSE 999999 END )::bigint when 0 then 1 when 1 then 1 when 2 then 2 when 3 then 3 when 4 then 3 when 5 then 3 when 6 then 4 when 7 then 4 when 8 then 4 when 9 then 4 when 10 then 4 when 999999 then 6 else 5 end) as yrs_exp_cluster_id,\
				(case (CASE WHEN months_of_exp_after_grad != 999999 then CEIL(months_of_exp_after_grad/11.999) ELSE 999999 END )::bigint when 0 then 1 when 1 then 1 when 2 then 2 when 3 then 3 when 4 then 3 when 5 then 3 when 6 then 4 when 7 then 4 when 8 then 4 when 9 then 4 when 10 then 4 when 999999 then 6 else 5 end) as yrs_exp_after_grad_cluster_id,\
				(CASE WHEN completness_score < 20 THEN 1 WHEN completness_score < 40 THEN 2 WHEN completness_score < 60 THEN 3 WHEN completness_score < 80 THEN 4 WHEN completness_score < 500 THEN 5 END ) as completness_scores,\
				(case when premium_account > 0 then 1.35 else 1 end) * (case when extract('epoch' FROM mobile_confirm_date)::bigint > 0 then 1.15 else 1 end) * (case when email_bouncing_p = true then 0.01 else 1 end) * (CASE WHEN (completness_score > 99) THEN 1.5 WHEN (completness_score > 80) THEN (1+completness_score/250)  WHEN (completness_score > 50) THEN (1+completness_score/400) WHEN (completness_score > 25) THEN 0.9 ELSE 0.5 END) * (CASE WHEN (last_login_date > NOW()-INTERVAL '2629800 SECOND')    THEN 1.3 WHEN (last_login_date > NOW()-INTERVAL '7889400 SECOND')    THEN 1.23 WHEN (last_login_date > NOW()-INTERVAL '15778800 SECOND')   THEN 1.17  WHEN (last_login_date > NOW()-INTERVAL '31557600  SECOND')  THEN 1.12 WHEN (last_login_date > NOW()-INTERVAL '63115200  SECOND')  THEN 1.06 ELSE 1 END) * (CASE WHEN (date_indexed > NOW()-INTERVAL '2629800 SECOND')    THEN 1.5 WHEN (date_indexed > NOW()-INTERVAL '7889400 SECOND')    THEN 1.4 WHEN (date_indexed > NOW()-INTERVAL '15778800 SECOND')   THEN 1.3  WHEN (date_indexed > NOW()-INTERVAL '31557600  SECOND')  THEN 1.15 WHEN (date_indexed > NOW()-INTERVAL '63115200  SECOND')  THEN 1.13 ELSE 1 END)::float as cv_search_ranker,\
				(case when premium_account > 0 then 1.35 else 1 end) * (case when extract('epoch' FROM mobile_confirm_date)::bigint > 0 then 1.15 else 1 end) * (case when email_bouncing_p = true then 0.01 else 1 end) * (CASE WHEN (completness_score > 99) THEN 1.5 WHEN (completness_score > 80) THEN (1+completness_score/250)  WHEN (completness_score > 50) THEN (1+completness_score/400) WHEN (completness_score > 25) THEN 0.9 ELSE 0.5 END) * (CASE WHEN (last_login_date > NOW()-INTERVAL '2629800 SECOND')    THEN 1.3 WHEN (last_login_date > NOW()-INTERVAL '7889400 SECOND')    THEN 1.23 WHEN (last_login_date > NOW()-INTERVAL '15778800 SECOND')   THEN 1.17  WHEN (last_login_date > NOW()-INTERVAL '31557600  SECOND')  THEN 1.12 WHEN (last_login_date > NOW()-INTERVAL '63115200  SECOND')  THEN 1.06 ELSE 1 END) * (CASE WHEN (cv_builder_date_modified > NOW()-INTERVAL '2629800 SECOND')    THEN 1.5 WHEN (cv_builder_date_modified > NOW()-INTERVAL '7889400 SECOND')    THEN 1.4 WHEN (cv_builder_date_modified > NOW()-INTERVAL '15778800 SECOND')   THEN 1.3  WHEN (cv_builder_date_modified > NOW()-INTERVAL '31557600  SECOND')  THEN 1.15 WHEN (cv_builder_date_modified > NOW()-INTERVAL '63115200  SECOND')  THEN 1.13 ELSE 1 END)::float as byt_cv_search_ranker,\
				(CASE WHEN (is_primary = TRUE and profile_id > 0) THEN 1 ELSE 0 END) as user_public_profile_enable,\
				(case when email_bouncing_p = true then 0.01 else 1 end) * (1000*(1+0.2*(CASE WHEN has_photo = TRUE THEN 1 ELSE 0 END))) as people_ranker,\
				(CASE WHEN (sections_fields IS NULL OR sections_fields = ' ')   THEN 'tar per con edu exp'  ELSE sections_fields  END) as sections_fields,\
				extract('epoch' FROM cv_completion_date)::bigint AS cv_completion_date,\
				extract('epoch' FROM last_login_date)::bigint AS last_login_date,\
				(CASE WHEN (user_state IS NULL OR user_state = ' ')  THEN 'mini' ELSE user_state END) as user_state,\
				email_enc,\
				email_domain,\
				dependents,\
				cell_phone_enc,\
				home_phone_enc,\
				work_phone_enc,\
				cell_phone,\
				bounce_count,\
				last_salary_value,\
				receive_emails_list,\
				last_exp_emp as last_exp_emp_full,\
				last_exp_emp_crc32 as last_exp_emp_crc32_full,\
				user_lang_preference,\
				premium_account,\
				user_tests,\
				user_courses,\
				hobbies,\
				hopping,\
				gaps,\
				res_visa_status,\
				extract('epoch' FROM mobile_confirm_date)::bigint AS mobile_confirm_date,\
				viewer_ids,\
				extract('epoch' FROM first_bch_deg_date)::bigint AS first_bch_deg_date,\
				gsm,\
				last_gsc_id,\
				previous_gsc_id,\
				all_gsc_ids,\
				all_gsc_ids_txt,\
				last_gst_id,\
				previous_gst_id,\
				all_gst_ids,\
				other_gst_id,\
				target_gst_ids,\
				all_gst_ids_text,\
				highest_degree,\
				disabilities,\
				months_of_exp_after_grad,\
				cv_custom_json,\
				sessions_count,\
				photo_url,\
				unemployed,\
				orginal_nationality,\
				extract('epoch' FROM cv_builder_date_modified)::bigint AS cv_builder_date_modified,\
				trainings,\
				certificates,\
				training_institutes,\
				last_gsi_id,\
				previous_gsi_id,\
				all_gsi_ids,\
				target_jb_roles,\
				all_gsi_ids_txt,\
				1 as index_weight,\
				'ANYKEYWORD' as any_keyword,\
				last_exp_comp_size,\
                		extract('epoch' FROM updated_contact_date)::bigint AS updated_contact_date,\
				extract('epoch' FROM last_exp_start_date)::bigint AS last_exp_start_date\
			FROM \
				cv_index_10 \
			WHERE \
				insertion_date <  (SELECT lst_main_index_start_time FROM spx_delta_separator WHERE index_id = 110 LIMIT 1) \
				 AND cv_id>=$start AND cv_id<=$end

	sql_range_step	=25000
	sql_attr_uint		=cv_id
	sql_field_string		=last_exp_emp
	sql_field_string		=previous_exp_emp
	sql_field_string		=last_exp_title
	sql_attr_uint		=last_exp_title_crc32
	sql_field_string		=previous_exp_title
	sql_attr_uint		=previous_exp_title_crc32
	sql_attr_uint		=last_exp_emp_crc32
	sql_attr_uint		=previous_exp_emp_crc32
	sql_attr_uint		=total_months_of_experience
	sql_attr_multi		=bigint industeries_roles_years from field industeries_roles_years
	sql_attr_multi		=bigint present_industeries_roles_years from field present_industeries_roles_years
	sql_attr_uint		=last_jb_industry
	sql_attr_uint		=last_jb_role
	sql_attr_multi		=bigint exp_roles_list from field exp_roles_list
	sql_attr_multi		=bigint exp_industries_list from field exp_industries_list
	sql_attr_multi		=uint experiences_iso_encoded_list from field experiences_iso_encoded_list
	sql_attr_uint		=last_experience_iso_encoded
	sql_field_string		=target_jb_title
	sql_attr_multi		=uint emplyment_type_list from field emplyment_type_list
	sql_attr_multi		=uint emplyment_status_list from field emplyment_status_list
	sql_attr_multi		=uint target_job_locations_list from field target_job_locations_list
	sql_attr_multi		=uint target_job_industries_list from field target_job_industries_list
	sql_attr_uint		=notice_period
	sql_attr_uint		=trgt_job_salary
	sql_attr_uint		=salary_range_cluster_list
	sql_attr_uint		=career_level
	sql_attr_uint           =career_level_sorted
	sql_attr_uint           =months_of_experience_sorted
	sql_attr_uint		=residence_location_iso_encoded
	sql_attr_uint		=residence_country_iso_encoded
	sql_attr_uint		=gender
	sql_attr_uint		=date_of_birth
	sql_attr_uint		=marital_status
	sql_attr_uint		=graduation_date
	sql_attr_uint		=visa_status
	sql_attr_multi		=uint car_license_countries_list_encoded from field car_license_countries_list_encoded
	sql_attr_multi		=uint edu_degree_list from field edu_degree_list
	sql_attr_multi		=uint edu_iso_encoded_list from field edu_iso_encoded_list
	sql_attr_multi		=uint edu_majors_crc32_list from field edu_majors_crc32_list
	sql_attr_multi		=uint edu_institute_crc32_list from field edu_institute_crc32_list
	sql_attr_uint		=last_edu_degree
	sql_attr_multi		=uint language_skills_levels_encoded_list from field language_skills_levels_encoded_list
	sql_attr_uint		=cv_stage
	sql_attr_uint		=locale
	sql_attr_uint		=bcc_id
	sql_attr_uint		=user_id
	sql_attr_uint		=gpa
	sql_attr_uint		=gpa_cluster
	sql_attr_timestamp		=date_indexed
	sql_attr_uint		=parent_bcc_id
	sql_attr_bool		=has_attachment
	sql_attr_bool		=has_photo
	sql_attr_bool		=has_video
	sql_attr_bool		=has_recommendation
	sql_field_string		=first_name
	sql_field_string		=middle_name
	sql_field_string		=last_name
	sql_field_string		=profile_name
	sql_attr_uint		=profile_id
	sql_attr_uint		=referrer_source_id
	sql_attr_multi		=uint specilaities_list from field specilaities_list
	sql_attr_multi		=bigint specilaities_points from field specilaities_points
	sql_attr_uint		=special_needs
	sql_attr_bool		=is_primary
	sql_attr_bool		=email_bouncing_p
	sql_attr_timestamp		=creation_date
	sql_attr_bool		=is_confidential
	sql_field_string		=last_name_ar
	sql_field_string		=last_name_la
	sql_field_string		=first_name_ar
	sql_field_string		=first_name_la
	sql_attr_uint		=primary_nationality
	sql_attr_uint		=primary_nationality_cleaned
	sql_attr_multi          =uint nationalities_list from field nationalities_list
	sql_attr_uint		=registration_iso
	sql_attr_uint		=user_type
	sql_attr_uint		=cv_creation_method
	sql_attr_uint		=affliate_program_id
	sql_attr_uint		=cv_no_search_hits
	sql_attr_uint		=cv_no_submits_to
	sql_attr_uint		=cv_no_reviews
	sql_attr_uint		=completness_score
	sql_attr_timestamp		=registration_date
	sql_attr_multi		=bigint bcc_json_fields from field bcc_json_fields
	sql_attr_uint		=yrs_exp_cluster_id
	sql_attr_uint		=yrs_exp_after_grad_cluster_id
	sql_attr_uint		=completness_scores
	sql_attr_float		=cv_search_ranker
	sql_attr_float		=byt_cv_search_ranker
	sql_attr_uint		=user_public_profile_enable
	sql_attr_uint		=people_ranker
	sql_attr_timestamp		=cv_completion_date
	sql_attr_timestamp		=last_login_date
	sql_field_string		=user_state
	sql_field_string		=email_enc
	sql_field_string		=email_domain
	sql_attr_uint		=dependents
	sql_field_string		=cell_phone_enc
	sql_field_string		=home_phone_enc
	sql_field_string		=work_phone_enc
	sql_field_string		=cell_phone
	sql_attr_uint		=bounce_count
	sql_attr_uint		=last_salary_value
	sql_field_string		=last_exp_emp_full
	sql_attr_uint		=last_exp_emp_crc32_full
	sql_attr_uint		=user_lang_preference
	sql_attr_uint		=premium_account
	sql_attr_multi		=uint user_tests from field user_tests
	sql_attr_multi		=uint user_courses from field user_courses
	sql_attr_uint		=hopping
	sql_attr_uint		=gaps
	sql_attr_uint		=res_visa_status
	sql_attr_timestamp		=mobile_confirm_date
	sql_attr_timestamp		=first_bch_deg_date
	sql_attr_multi		=uint gsm from field gsm
	sql_attr_uint		=last_gsc_id
	sql_attr_uint		=previous_gsc_id
	sql_attr_multi		=uint all_gsc_ids from field all_gsc_ids
	sql_attr_multi		=uint last_gst_id from field last_gst_id
	sql_attr_multi		=uint previous_gst_id from field previous_gst_id
	sql_attr_multi		=uint all_gst_ids from field all_gst_ids
	sql_attr_multi		=uint other_gst_id from field other_gst_id
	sql_attr_multi		=uint target_gst_ids from field target_gst_ids
	sql_attr_uint		=highest_degree
	sql_attr_multi		=uint disabilities from field disabilities
	sql_attr_uint		=months_of_exp_after_grad
	sql_attr_json		=cv_custom_json
	sql_attr_uint		=sessions_count
	sql_field_string		=photo_url
	sql_attr_bool		=unemployed
	sql_attr_uint		=orginal_nationality
	sql_attr_timestamp		=cv_builder_date_modified
	sql_attr_uint		=last_gsi_id
	sql_attr_uint		=previous_gsi_id
	sql_attr_multi		=uint all_gsi_ids from field all_gsi_ids
	sql_attr_multi		=uint target_jb_roles from field target_jb_roles
	sql_attr_uint       =last_exp_comp_size
    	sql_attr_timestamp  =updated_contact_date
	sql_attr_timestamp  =last_exp_start_date
	sql_attr_uint		=index_weight
	sql_attr_multi		=uint folder_id from ranged-query;  SELECT cv_id, folder_id FROM byt_employer_basket_10 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_employer_basket_10 WHERE cv_id between 60000000 and 60999999
	sql_attr_multi		=uint tag_id from ranged-query;  SELECT cv_id, tag_id FROM byt_item_tags_10 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_item_tags_10 WHERE cv_id between 60000000 and 60999999
	sql_attr_multi		=uint note_group_id from ranged-query;  SELECT cv_id, group_id FROM byt_comments_10 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_comments_10 WHERE cv_id between 60000000 and 60999999
}

		index cvMainIndexStemmed_10_0
		{
			type			= plain
			source 			= cvMainIndexStemmed_10_0_src
			path 			= /home/sphinx/sphinx/var/data/cvMainIndexStemmed_10_0
			morphology   = stem_en,stem_ar
			wordforms  = /home/sphinx/sphinx/var/data/wordforms.txt
			dict=keywords
			index_sp  = 1
			index_zones		= b_*, is_agency, special_needs, referrer_source
			stopwords		= en,ar
			exceptions		= /home/sphinx/sphinx/var/data/exceptions.txt
			min_word_len		= 1
			charset_table		= non_cjk
			index_exact_words	= 1
			
			ngram_len		= 1
			#ngram_chars		=  non_cjk
			html_strip				= 1
			preopen				= 1
		}		
		


source cvMainIndex_10_1_src {
	type		=pgsql
	sql_host	=host
	sql_user	=user
	sql_pass	=pass
	sql_db		=database
	sql_port	=9988

	sql_query_pre	=SET client_encoding TO 'UTF8'
	sql_query_pre	= SET NAMES 'UTF8'
	sql_ranged_throttle	=1000
	sql_query_range	= SELECT MIN(cv_id),MAX(cv_id) FROM cv_index_10 WHERE cv_id between 61000000 and 61999999
	sql_query	=SELECT \
				cv_id as id,\
				cv_id,\
				experiences_titles,\
				experiences_description,\
				experiences_employers,\
				last_exp_desc,\
				(CASE WHEN is_confidential = 'f' THEN last_exp_emp ELSE NULL END) as last_exp_emp,\
				(CASE WHEN is_confidential = 'f' THEN previous_exp_emp ELSE NULL END) as previous_exp_emp,\
				last_exp_title,\
				last_exp_title_crc32,\
				previous_exp_title,\
				previous_exp_title_crc32,\
				(CASE WHEN is_confidential = 'f' THEN last_exp_emp_crc32 ELSE 0 END) as last_exp_emp_crc32,\
				(CASE WHEN is_confidential = 'f' THEN previous_exp_emp_crc32 ELSE 0 END) as previous_exp_emp_crc32,\
				(CASE WHEN months_of_experience != 999999 then months_of_experience  WHEN market_entry_date != 999999 then (to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date  ELSE 999999 END ) as total_months_of_experience,\
				industeries_roles_years,\
				present_industeries_roles_years,\
				last_jb_industry,\
				last_jb_role,\
				exp_roles_list,\
				exp_industries_list,\
				experiences_iso_encoded_list,\
				last_experience_iso_encoded,\
				target_jb_title,\
				emplyment_type_list,\
				emplyment_status_list,\
				target_job_locations_list,\
				target_job_industries_list,\
				notice_period,\
				trgt_job_salary,\
				(CASE WHEN trgt_job_salary < 0 then 0  WHEN trgt_job_salary = 0 then 1  WHEN trgt_job_salary < 500 THEN 2  WHEN trgt_job_salary <= 1000 THEN 3  WHEN trgt_job_salary <= 1500 THEN 4  WHEN trgt_job_salary <= 2000 THEN 5  WHEN trgt_job_salary <= 3000 THEN 6  WHEN trgt_job_salary <= 5000 THEN 7  WHEN trgt_job_salary <= 8000 THEN 8  WHEN trgt_job_salary <= 12000 THEN 9  WHEN trgt_job_salary <= 16000 THEN 10  WHEN trgt_job_salary <= 20000 THEN 11  WHEN trgt_job_salary <= 30000 THEN 12  WHEN trgt_job_salary <= 50000 THEN 13  ELSE 14  END) as salary_range_cluster_list,\
				career_level,\
				(CASE WHEN career_level = 6 THEN 2001 WHEN career_level < 6 THEN (career_level+1000)*2 ELSE career_level END) as career_level_sorted,\
				(CASE WHEN months_of_experience != 999999 then months_of_experience  WHEN market_entry_date != 999999 then (to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date  ELSE 0 END ) as months_of_experience_sorted,\
				objective_txt,\
				residence_location_iso_encoded,\
				LEFT(residence_location_iso_encoded::text,4)::int as residence_country_iso_encoded,\
				gender,\
				date_of_birth,\
				marital_status,\
				graduation_date,\
				visa_status,\
				car_license_countries_list_encoded,\
				edu_degree_list,\
				edu_iso_encoded_list,\
				edu_txt,\
				edu_major,\
				edu_majors_crc32_list,\
				lst_edu_major,\
				edu_institute,\
				edu_institute_crc32_list,\
				lst_edu_institute,\
				last_edu_degree,\
				skills_txt,\
				language_skills_levels_encoded_list,\
				cv_stage,\
				locale,\
				bcc_id,\
				generic_txt,\
				user_id,\
				gpa,\
				(CASE when gpa >= 99999 then 5 when gpa >= 8000 then 4 when gpa >= 6000 then 3 when gpa >= 4000 then 2 when gpa >= 2000 then 1 when gpa >= 0 then 0 end) as gpa_cluster,\
				extract('epoch' FROM date_indexed)::bigint AS date_indexed,\
				parent_bcc_id,\
				has_attachment,\
				has_photo,\
				has_video,\
				has_recommendation,\
				first_name,\
				middle_name,\
				last_name,\
				profile_name,\
				profile_id,\
				(case when referrer_source_id is null then 99999 else referrer_source_id end ) as referrer_source_id,\
				specilaities_list,\
				specilaities_text,\
				specilaities_points,\
				user_generic_field1,\
				 COALESCE(special_needs,99999) AS special_needs,\
				is_primary,\
				email_bouncing_p,\
				extract('epoch' FROM creation_date)::bigint AS creation_date,\
				is_confidential,\
				last_name_ar,\
				last_name_la,\
				first_name_ar,\
				first_name_la,\
				first_name_la || ' ' || last_name_la as full_name_la,\
				first_name_ar || ' ' || last_name_ar as full_name_ar,\
				primary_nationality,\
				(case when LEFT(residence_location_iso_encoded::text,4)::int = primary_nationality  and visa_status not in (1,7) then 0  when  LEFT(residence_location_iso_encoded::text,4)::int in (5560,6257,6254,4850,5857) and primary_nationality in (4751,6547,5769,6347,4854,6159)  then 0 else  primary_nationality end) as primary_nationality_cleaned,\
				nationalities_list,\
				specilaities_platinum,\
				specilaities_gold,\
				specilaities_silver,\
				specilaities_bronze,\
				bcc_text_fields,\
				has_flag,\
				registration_iso,\
				user_type,\
				cv_creation_method,\
				affliate_program_id,\
				cv_no_search_hits,\
				cv_no_submits_to,\
				cv_no_reviews,\
				completness_score,\
				extract('epoch' FROM registration_date)::bigint AS registration_date,\
				bcc_json_fields,\
				referrer_source,\
				user_generic_field2,\
				user_generic_field3,\
				user_generic_field4,\
				(case (CASE WHEN months_of_experience != 999999 then CEIL(months_of_experience/11.999)  WHEN market_entry_date != 999999 then ceil(((to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date)/11.999)  ELSE 999999 END )::bigint when 0 then 1 when 1 then 1 when 2 then 2 when 3 then 3 when 4 then 3 when 5 then 3 when 6 then 4 when 7 then 4 when 8 then 4 when 9 then 4 when 10 then 4 when 999999 then 6 else 5 end) as yrs_exp_cluster_id,\
				(case (CASE WHEN months_of_exp_after_grad != 999999 then CEIL(months_of_exp_after_grad/11.999) ELSE 999999 END )::bigint when 0 then 1 when 1 then 1 when 2 then 2 when 3 then 3 when 4 then 3 when 5 then 3 when 6 then 4 when 7 then 4 when 8 then 4 when 9 then 4 when 10 then 4 when 999999 then 6 else 5 end) as yrs_exp_after_grad_cluster_id,\
				(CASE WHEN completness_score < 20 THEN 1 WHEN completness_score < 40 THEN 2 WHEN completness_score < 60 THEN 3 WHEN completness_score < 80 THEN 4 WHEN completness_score < 500 THEN 5 END ) as completness_scores,\
				(case when premium_account > 0 then 1.35 else 1 end) * (case when extract('epoch' FROM mobile_confirm_date)::bigint > 0 then 1.15 else 1 end) * (case when email_bouncing_p = true then 0.01 else 1 end) * (CASE WHEN (completness_score > 99) THEN 1.5 WHEN (completness_score > 80) THEN (1+completness_score/250)  WHEN (completness_score > 50) THEN (1+completness_score/400) WHEN (completness_score > 25) THEN 0.9 ELSE 0.5 END) * (CASE WHEN (last_login_date > NOW()-INTERVAL '2629800 SECOND')    THEN 1.3 WHEN (last_login_date > NOW()-INTERVAL '7889400 SECOND')    THEN 1.23 WHEN (last_login_date > NOW()-INTERVAL '15778800 SECOND')   THEN 1.17  WHEN (last_login_date > NOW()-INTERVAL '31557600  SECOND')  THEN 1.12 WHEN (last_login_date > NOW()-INTERVAL '63115200  SECOND')  THEN 1.06 ELSE 1 END) * (CASE WHEN (date_indexed > NOW()-INTERVAL '2629800 SECOND')    THEN 1.5 WHEN (date_indexed > NOW()-INTERVAL '7889400 SECOND')    THEN 1.4 WHEN (date_indexed > NOW()-INTERVAL '15778800 SECOND')   THEN 1.3  WHEN (date_indexed > NOW()-INTERVAL '31557600  SECOND')  THEN 1.15 WHEN (date_indexed > NOW()-INTERVAL '63115200  SECOND')  THEN 1.13 ELSE 1 END)::float as cv_search_ranker,\
				(case when premium_account > 0 then 1.35 else 1 end) * (case when extract('epoch' FROM mobile_confirm_date)::bigint > 0 then 1.15 else 1 end) * (case when email_bouncing_p = true then 0.01 else 1 end) * (CASE WHEN (completness_score > 99) THEN 1.5 WHEN (completness_score > 80) THEN (1+completness_score/250)  WHEN (completness_score > 50) THEN (1+completness_score/400) WHEN (completness_score > 25) THEN 0.9 ELSE 0.5 END) * (CASE WHEN (last_login_date > NOW()-INTERVAL '2629800 SECOND')    THEN 1.3 WHEN (last_login_date > NOW()-INTERVAL '7889400 SECOND')    THEN 1.23 WHEN (last_login_date > NOW()-INTERVAL '15778800 SECOND')   THEN 1.17  WHEN (last_login_date > NOW()-INTERVAL '31557600  SECOND')  THEN 1.12 WHEN (last_login_date > NOW()-INTERVAL '63115200  SECOND')  THEN 1.06 ELSE 1 END) * (CASE WHEN (cv_builder_date_modified > NOW()-INTERVAL '2629800 SECOND')    THEN 1.5 WHEN (cv_builder_date_modified > NOW()-INTERVAL '7889400 SECOND')    THEN 1.4 WHEN (cv_builder_date_modified > NOW()-INTERVAL '15778800 SECOND')   THEN 1.3  WHEN (cv_builder_date_modified > NOW()-INTERVAL '31557600  SECOND')  THEN 1.15 WHEN (cv_builder_date_modified > NOW()-INTERVAL '63115200  SECOND')  THEN 1.13 ELSE 1 END)::float as byt_cv_search_ranker,\
				(CASE WHEN (is_primary = TRUE and profile_id > 0) THEN 1 ELSE 0 END) as user_public_profile_enable,\
				(case when email_bouncing_p = true then 0.01 else 1 end) * (1000*(1+0.2*(CASE WHEN has_photo = TRUE THEN 1 ELSE 0 END))) as people_ranker,\
				(CASE WHEN (sections_fields IS NULL OR sections_fields = ' ')   THEN 'tar per con edu exp'  ELSE sections_fields  END) as sections_fields,\
				extract('epoch' FROM cv_completion_date)::bigint AS cv_completion_date,\
				extract('epoch' FROM last_login_date)::bigint AS last_login_date,\
				(CASE WHEN (user_state IS NULL OR user_state = ' ')  THEN 'mini' ELSE user_state END) as user_state,\
				email_enc,\
				email_domain,\
				dependents,\
				cell_phone_enc,\
				home_phone_enc,\
				work_phone_enc,\
				cell_phone,\
				bounce_count,\
				last_salary_value,\
				receive_emails_list,\
				last_exp_emp as last_exp_emp_full,\
				last_exp_emp_crc32 as last_exp_emp_crc32_full,\
				user_lang_preference,\
				premium_account,\
				user_tests,\
				user_courses,\
				hobbies,\
				hopping,\
				gaps,\
				res_visa_status,\
				extract('epoch' FROM mobile_confirm_date)::bigint AS mobile_confirm_date,\
				viewer_ids,\
				extract('epoch' FROM first_bch_deg_date)::bigint AS first_bch_deg_date,\
				gsm,\
				last_gsc_id,\
				previous_gsc_id,\
				all_gsc_ids,\
				all_gsc_ids_txt,\
				last_gst_id,\
				previous_gst_id,\
				all_gst_ids,\
				other_gst_id,\
				target_gst_ids,\
				all_gst_ids_text,\
				highest_degree,\
				disabilities,\
				months_of_exp_after_grad,\
				cv_custom_json,\
				sessions_count,\
				photo_url,\
				unemployed,\
				orginal_nationality,\
				extract('epoch' FROM cv_builder_date_modified)::bigint AS cv_builder_date_modified,\
				trainings,\
				certificates,\
				training_institutes,\
				last_gsi_id,\
				previous_gsi_id,\
				all_gsi_ids,\
				target_jb_roles,\
				all_gsi_ids_txt,\
				3 as index_weight,\
				'ANYKEYWORD' as any_keyword,\
				last_exp_comp_size,\
                		extract('epoch' FROM updated_contact_date)::bigint AS updated_contact_date,\
				extract('epoch' FROM last_exp_start_date)::bigint AS last_exp_start_date\
			FROM \
				cv_index_10 \
			WHERE \
				insertion_date <  (SELECT lst_main_index_start_time FROM spx_delta_separator WHERE index_id = 110 LIMIT 1) \
				 AND cv_id>=$start AND cv_id<=$end

	sql_range_step	=25000
	sql_attr_uint		=cv_id
	sql_field_string		=last_exp_emp
	sql_field_string		=previous_exp_emp
	sql_field_string		=last_exp_title
	sql_attr_uint		=last_exp_title_crc32
	sql_field_string		=previous_exp_title
	sql_attr_uint		=previous_exp_title_crc32
	sql_attr_uint		=last_exp_emp_crc32
	sql_attr_uint		=previous_exp_emp_crc32
	sql_attr_uint		=total_months_of_experience
	sql_attr_multi		=bigint industeries_roles_years from field industeries_roles_years
	sql_attr_multi		=bigint present_industeries_roles_years from field present_industeries_roles_years
	sql_attr_uint		=last_jb_industry
	sql_attr_uint		=last_jb_role
	sql_attr_multi		=bigint exp_roles_list from field exp_roles_list
	sql_attr_multi		=bigint exp_industries_list from field exp_industries_list
	sql_attr_multi		=uint experiences_iso_encoded_list from field experiences_iso_encoded_list
	sql_attr_uint		=last_experience_iso_encoded
	sql_field_string		=target_jb_title
	sql_attr_multi		=uint emplyment_type_list from field emplyment_type_list
	sql_attr_multi		=uint emplyment_status_list from field emplyment_status_list
	sql_attr_multi		=uint target_job_locations_list from field target_job_locations_list
	sql_attr_multi		=uint target_job_industries_list from field target_job_industries_list
	sql_attr_uint		=notice_period
	sql_attr_uint		=trgt_job_salary
	sql_attr_uint		=salary_range_cluster_list
	sql_attr_uint		=career_level
        sql_attr_uint   	=career_level_sorted
        sql_attr_uint	        =months_of_experience_sorted
	sql_attr_uint		=residence_location_iso_encoded
	sql_attr_uint		=residence_country_iso_encoded
	sql_attr_uint		=gender
	sql_attr_uint		=date_of_birth
	sql_attr_uint		=marital_status
	sql_attr_uint		=graduation_date
	sql_attr_uint		=visa_status
	sql_attr_multi		=uint car_license_countries_list_encoded from field car_license_countries_list_encoded
	sql_attr_multi		=uint edu_degree_list from field edu_degree_list
	sql_attr_multi		=uint edu_iso_encoded_list from field edu_iso_encoded_list
	sql_attr_multi		=uint edu_majors_crc32_list from field edu_majors_crc32_list
	sql_attr_multi		=uint edu_institute_crc32_list from field edu_institute_crc32_list
	sql_attr_uint		=last_edu_degree
	sql_attr_multi		=uint language_skills_levels_encoded_list from field language_skills_levels_encoded_list
	sql_attr_uint		=cv_stage
	sql_attr_uint		=locale
	sql_attr_uint		=bcc_id
	sql_attr_uint		=user_id
	sql_attr_uint		=gpa
	sql_attr_uint		=gpa_cluster
	sql_attr_timestamp		=date_indexed
	sql_attr_uint		=parent_bcc_id
	sql_attr_bool		=has_attachment
	sql_attr_bool		=has_photo
	sql_attr_bool		=has_video
	sql_attr_bool		=has_recommendation
	sql_field_string		=first_name
	sql_field_string		=middle_name
	sql_field_string		=last_name
	sql_field_string		=profile_name
	sql_attr_uint		=profile_id
	sql_attr_uint		=referrer_source_id
	sql_attr_multi		=uint specilaities_list from field specilaities_list
	sql_attr_multi		=bigint specilaities_points from field specilaities_points
	sql_attr_uint		=special_needs
	sql_attr_bool		=is_primary
	sql_attr_bool		=email_bouncing_p
	sql_attr_timestamp		=creation_date
	sql_attr_bool		=is_confidential
	sql_field_string		=last_name_ar
	sql_field_string		=last_name_la
	sql_field_string		=first_name_ar
	sql_field_string		=first_name_la
	sql_attr_uint		=primary_nationality
	sql_attr_uint		=primary_nationality_cleaned
	sql_attr_multi          =uint nationalities_list from field nationalities_list
	sql_attr_uint		=registration_iso
	sql_attr_uint		=user_type
	sql_attr_uint		=cv_creation_method
	sql_attr_uint		=affliate_program_id
	sql_attr_uint		=cv_no_search_hits
	sql_attr_uint		=cv_no_submits_to
	sql_attr_uint		=cv_no_reviews
	sql_attr_uint		=completness_score
	sql_attr_timestamp		=registration_date
	sql_attr_multi		=bigint bcc_json_fields from field bcc_json_fields
	sql_attr_uint		=yrs_exp_cluster_id
	sql_attr_uint		=yrs_exp_after_grad_cluster_id
	sql_attr_uint		=completness_scores
	sql_attr_float		=cv_search_ranker
	sql_attr_float		=byt_cv_search_ranker
	sql_attr_uint		=user_public_profile_enable
	sql_attr_uint		=people_ranker
	sql_attr_timestamp		=cv_completion_date
	sql_attr_timestamp		=last_login_date
	sql_field_string		=user_state
	sql_field_string		=email_enc
	sql_field_string		=email_domain
	sql_attr_uint		=dependents
	sql_field_string		=cell_phone_enc
	sql_field_string		=home_phone_enc
	sql_field_string		=work_phone_enc
	sql_field_string		=cell_phone
	sql_attr_uint		=bounce_count
	sql_attr_uint		=last_salary_value
	sql_field_string		=last_exp_emp_full
	sql_attr_uint		=last_exp_emp_crc32_full
	sql_attr_uint		=user_lang_preference
	sql_attr_uint		=premium_account
	sql_attr_multi		=uint user_tests from field user_tests
	sql_attr_multi		=uint user_courses from field user_courses
	sql_attr_uint		=hopping
	sql_attr_uint		=gaps
	sql_attr_uint		=res_visa_status
	sql_attr_timestamp		=mobile_confirm_date
	sql_attr_timestamp		=first_bch_deg_date
	sql_attr_multi		=uint gsm from field gsm
	sql_attr_uint		=last_gsc_id
	sql_attr_uint		=previous_gsc_id
	sql_attr_multi		=uint all_gsc_ids from field all_gsc_ids
	sql_attr_multi		=uint last_gst_id from field last_gst_id
	sql_attr_multi		=uint previous_gst_id from field previous_gst_id
	sql_attr_multi		=uint all_gst_ids from field all_gst_ids
	sql_attr_multi		=uint other_gst_id from field other_gst_id
	sql_attr_multi		=uint target_gst_ids from field target_gst_ids
	sql_attr_uint		=highest_degree
	sql_attr_multi		=uint disabilities from field disabilities
	sql_attr_uint		=months_of_exp_after_grad
	sql_attr_json		=cv_custom_json
	sql_attr_uint		=sessions_count
	sql_field_string		=photo_url
	sql_attr_bool		=unemployed
	sql_attr_uint		=orginal_nationality
	sql_attr_timestamp		=cv_builder_date_modified
	sql_attr_uint		=last_gsi_id
	sql_attr_uint		=previous_gsi_id
	sql_attr_multi		=uint all_gsi_ids from field all_gsi_ids
	sql_attr_multi		=uint target_jb_roles from field target_jb_roles
    	sql_attr_uint       =last_exp_comp_size
   	sql_attr_timestamp  =updated_contact_date
	sql_attr_timestamp  =last_exp_start_date
	sql_attr_uint		=index_weight
	sql_attr_multi		=uint folder_id from ranged-query;  SELECT cv_id, folder_id FROM byt_employer_basket_10 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_employer_basket_10 WHERE cv_id between 61000000 and 61999999
	sql_attr_multi		=uint tag_id from ranged-query;  SELECT cv_id, tag_id FROM byt_item_tags_10 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_item_tags_10 WHERE cv_id between 61000000 and 61999999
	sql_attr_multi		=uint note_group_id from ranged-query;  SELECT cv_id, group_id FROM byt_comments_10 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_comments_10 WHERE cv_id between 61000000 and 61999999
}

		index cvMainIndex_10_1
		{
			type			= plain
			source 			= cvMainIndex_10_1_src
			path 			= /home/sphinx/sphinx/var/data/cvMainIndex_10_1
			morphology   = none
			dict=keywords
			index_sp  = 1
			index_zones		= b_*, is_agency, special_needs, referrer_source
			stopwords		= en,ar
			exceptions		= /home/sphinx/sphinx/var/data/exceptions.txt
			min_word_len		= 1
			charset_table		= non_cjk
			ngram_len		= 1
			#ngram_chars		=  non_cjk
			inplace_enable		= 0
			html_strip				= 1
			preopen				= 1
		}		

	source cvMainIndexStemmed_10_1_src {
	type		=pgsql
	sql_host	=host
	sql_user	=user
	sql_pass	=pass
	sql_db		=database
	sql_port	=9988

	sql_query_pre	=SET client_encoding TO 'UTF8'
	sql_query_pre	= SET NAMES 'UTF8'
	sql_ranged_throttle	=1000
	sql_query_range	= SELECT MIN(cv_id),MAX(cv_id) FROM cv_index_10 WHERE cv_id between 61000000 and 61999999
	sql_query	=SELECT \
				cv_id as id,\
				cv_id,\
				experiences_titles,\
				experiences_description,\
				experiences_employers,\
				last_exp_desc,\
				(CASE WHEN is_confidential = 'f' THEN last_exp_emp ELSE NULL END) as last_exp_emp,\
				(CASE WHEN is_confidential = 'f' THEN previous_exp_emp ELSE NULL END) as previous_exp_emp,\
				last_exp_title,\
				last_exp_title_crc32,\
				previous_exp_title,\
				previous_exp_title_crc32,\
				(CASE WHEN is_confidential = 'f' THEN last_exp_emp_crc32 ELSE 0 END) as last_exp_emp_crc32,\
				(CASE WHEN is_confidential = 'f' THEN previous_exp_emp_crc32 ELSE 0 END) as previous_exp_emp_crc32,\
				(CASE WHEN months_of_experience != 999999 then months_of_experience  WHEN market_entry_date != 999999 then (to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date  ELSE 999999 END ) as total_months_of_experience,\
				industeries_roles_years,\
				present_industeries_roles_years,\
				last_jb_industry,\
				last_jb_role,\
				exp_roles_list,\
				exp_industries_list,\
				experiences_iso_encoded_list,\
				last_experience_iso_encoded,\
				target_jb_title,\
				emplyment_type_list,\
				emplyment_status_list,\
				target_job_locations_list,\
				target_job_industries_list,\
				notice_period,\
				trgt_job_salary,\
				(CASE WHEN trgt_job_salary < 0 then 0  WHEN trgt_job_salary = 0 then 1  WHEN trgt_job_salary < 500 THEN 2  WHEN trgt_job_salary <= 1000 THEN 3  WHEN trgt_job_salary <= 1500 THEN 4  WHEN trgt_job_salary <= 2000 THEN 5  WHEN trgt_job_salary <= 3000 THEN 6  WHEN trgt_job_salary <= 5000 THEN 7  WHEN trgt_job_salary <= 8000 THEN 8  WHEN trgt_job_salary <= 12000 THEN 9  WHEN trgt_job_salary <= 16000 THEN 10  WHEN trgt_job_salary <= 20000 THEN 11  WHEN trgt_job_salary <= 30000 THEN 12  WHEN trgt_job_salary <= 50000 THEN 13  ELSE 14  END) as salary_range_cluster_list,\
				career_level,\
				(CASE WHEN career_level = 6 THEN 2001 WHEN career_level < 6 THEN (career_level+1000)*2 ELSE career_level END) as career_level_sorted,\
				(CASE WHEN months_of_experience != 999999 then months_of_experience  WHEN market_entry_date != 999999 then (to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date  ELSE 0 END ) as months_of_experience_sorted,\
				objective_txt,\
				residence_location_iso_encoded,\
				LEFT(residence_location_iso_encoded::text,4)::int as residence_country_iso_encoded,\
				gender,\
				date_of_birth,\
				marital_status,\
				graduation_date,\
				visa_status,\
				car_license_countries_list_encoded,\
				edu_degree_list,\
				edu_iso_encoded_list,\
				edu_txt,\
				edu_major,\
				edu_majors_crc32_list,\
				lst_edu_major,\
				edu_institute,\
				edu_institute_crc32_list,\
				lst_edu_institute,\
				last_edu_degree,\
				skills_txt,\
				language_skills_levels_encoded_list,\
				cv_stage,\
				locale,\
				bcc_id,\
				generic_txt,\
				user_id,\
				gpa,\
				(CASE when gpa >= 99999 then 5 when gpa >= 8000 then 4 when gpa >= 6000 then 3 when gpa >= 4000 then 2 when gpa >= 2000 then 1 when gpa >= 0 then 0 end) as gpa_cluster,\
				extract('epoch' FROM date_indexed)::bigint AS date_indexed,\
				parent_bcc_id,\
				has_attachment,\
				has_photo,\
				has_video,\
				has_recommendation,\
				first_name,\
				middle_name,\
				last_name,\
				profile_name,\
				profile_id,\
				(case when referrer_source_id is null then 99999 else referrer_source_id end ) as referrer_source_id,\
				specilaities_list,\
				specilaities_text,\
				specilaities_points,\
				user_generic_field1,\
				 COALESCE(special_needs,99999) AS special_needs,\
				is_primary,\
				email_bouncing_p,\
				extract('epoch' FROM creation_date)::bigint AS creation_date,\
				is_confidential,\
				last_name_ar,\
				last_name_la,\
				first_name_ar,\
				first_name_la,\
				first_name_la || ' ' || last_name_la as full_name_la,\
				first_name_ar || ' ' || last_name_ar as full_name_ar,\
				primary_nationality,\
				(case when LEFT(residence_location_iso_encoded::text,4)::int = primary_nationality  and visa_status not in (1,7) then 0  when  LEFT(residence_location_iso_encoded::text,4)::int in (5560,6257,6254,4850,5857) and primary_nationality in (4751,6547,5769,6347,4854,6159)  then 0 else  primary_nationality end) as primary_nationality_cleaned,\
				nationalities_list,\
				specilaities_platinum,\
				specilaities_gold,\
				specilaities_silver,\
				specilaities_bronze,\
				bcc_text_fields,\
				has_flag,\
				registration_iso,\
				user_type,\
				cv_creation_method,\
				affliate_program_id,\
				cv_no_search_hits,\
				cv_no_submits_to,\
				cv_no_reviews,\
				completness_score,\
				extract('epoch' FROM registration_date)::bigint AS registration_date,\
				bcc_json_fields,\
				referrer_source,\
				user_generic_field2,\
				user_generic_field3,\
				user_generic_field4,\
				(case (CASE WHEN months_of_experience != 999999 then CEIL(months_of_experience/11.999)  WHEN market_entry_date != 999999 then ceil(((to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date)/11.999)  ELSE 999999 END )::bigint when 0 then 1 when 1 then 1 when 2 then 2 when 3 then 3 when 4 then 3 when 5 then 3 when 6 then 4 when 7 then 4 when 8 then 4 when 9 then 4 when 10 then 4 when 999999 then 6 else 5 end) as yrs_exp_cluster_id,\
				(case (CASE WHEN months_of_exp_after_grad != 999999 then CEIL(months_of_exp_after_grad/11.999) ELSE 999999 END )::bigint when 0 then 1 when 1 then 1 when 2 then 2 when 3 then 3 when 4 then 3 when 5 then 3 when 6 then 4 when 7 then 4 when 8 then 4 when 9 then 4 when 10 then 4 when 999999 then 6 else 5 end) as yrs_exp_after_grad_cluster_id,\
				(CASE WHEN completness_score < 20 THEN 1 WHEN completness_score < 40 THEN 2 WHEN completness_score < 60 THEN 3 WHEN completness_score < 80 THEN 4 WHEN completness_score < 500 THEN 5 END ) as completness_scores,\
				(case when premium_account > 0 then 1.35 else 1 end) * (case when extract('epoch' FROM mobile_confirm_date)::bigint > 0 then 1.15 else 1 end) * (case when email_bouncing_p = true then 0.01 else 1 end) * (CASE WHEN (completness_score > 99) THEN 1.5 WHEN (completness_score > 80) THEN (1+completness_score/250)  WHEN (completness_score > 50) THEN (1+completness_score/400) WHEN (completness_score > 25) THEN 0.9 ELSE 0.5 END) * (CASE WHEN (last_login_date > NOW()-INTERVAL '2629800 SECOND')    THEN 1.3 WHEN (last_login_date > NOW()-INTERVAL '7889400 SECOND')    THEN 1.23 WHEN (last_login_date > NOW()-INTERVAL '15778800 SECOND')   THEN 1.17  WHEN (last_login_date > NOW()-INTERVAL '31557600  SECOND')  THEN 1.12 WHEN (last_login_date > NOW()-INTERVAL '63115200  SECOND')  THEN 1.06 ELSE 1 END) * (CASE WHEN (date_indexed > NOW()-INTERVAL '2629800 SECOND')    THEN 1.5 WHEN (date_indexed > NOW()-INTERVAL '7889400 SECOND')    THEN 1.4 WHEN (date_indexed > NOW()-INTERVAL '15778800 SECOND')   THEN 1.3  WHEN (date_indexed > NOW()-INTERVAL '31557600  SECOND')  THEN 1.15 WHEN (date_indexed > NOW()-INTERVAL '63115200  SECOND')  THEN 1.13 ELSE 1 END)::float as cv_search_ranker,\
				(case when premium_account > 0 then 1.35 else 1 end) * (case when extract('epoch' FROM mobile_confirm_date)::bigint > 0 then 1.15 else 1 end) * (case when email_bouncing_p = true then 0.01 else 1 end) * (CASE WHEN (completness_score > 99) THEN 1.5 WHEN (completness_score > 80) THEN (1+completness_score/250)  WHEN (completness_score > 50) THEN (1+completness_score/400) WHEN (completness_score > 25) THEN 0.9 ELSE 0.5 END) * (CASE WHEN (last_login_date > NOW()-INTERVAL '2629800 SECOND')    THEN 1.3 WHEN (last_login_date > NOW()-INTERVAL '7889400 SECOND')    THEN 1.23 WHEN (last_login_date > NOW()-INTERVAL '15778800 SECOND')   THEN 1.17  WHEN (last_login_date > NOW()-INTERVAL '31557600  SECOND')  THEN 1.12 WHEN (last_login_date > NOW()-INTERVAL '63115200  SECOND')  THEN 1.06 ELSE 1 END) * (CASE WHEN (cv_builder_date_modified > NOW()-INTERVAL '2629800 SECOND')    THEN 1.5 WHEN (cv_builder_date_modified > NOW()-INTERVAL '7889400 SECOND')    THEN 1.4 WHEN (cv_builder_date_modified > NOW()-INTERVAL '15778800 SECOND')   THEN 1.3  WHEN (cv_builder_date_modified > NOW()-INTERVAL '31557600  SECOND')  THEN 1.15 WHEN (cv_builder_date_modified > NOW()-INTERVAL '63115200  SECOND')  THEN 1.13 ELSE 1 END)::float as byt_cv_search_ranker,\
				(CASE WHEN (is_primary = TRUE and profile_id > 0) THEN 1 ELSE 0 END) as user_public_profile_enable,\
				(case when email_bouncing_p = true then 0.01 else 1 end) * (1000*(1+0.2*(CASE WHEN has_photo = TRUE THEN 1 ELSE 0 END))) as people_ranker,\
				(CASE WHEN (sections_fields IS NULL OR sections_fields = ' ')   THEN 'tar per con edu exp'  ELSE sections_fields  END) as sections_fields,\
				extract('epoch' FROM cv_completion_date)::bigint AS cv_completion_date,\
				extract('epoch' FROM last_login_date)::bigint AS last_login_date,\
				(CASE WHEN (user_state IS NULL OR user_state = ' ')  THEN 'mini' ELSE user_state END) as user_state,\
				email_enc,\
				email_domain,\
				dependents,\
				cell_phone_enc,\
				home_phone_enc,\
				work_phone_enc,\
				cell_phone,\
				bounce_count,\
				last_salary_value,\
				receive_emails_list,\
				last_exp_emp as last_exp_emp_full,\
				last_exp_emp_crc32 as last_exp_emp_crc32_full,\
				user_lang_preference,\
				premium_account,\
				user_tests,\
				user_courses,\
				hobbies,\
				hopping,\
				gaps,\
				res_visa_status,\
				extract('epoch' FROM mobile_confirm_date)::bigint AS mobile_confirm_date,\
				viewer_ids,\
				extract('epoch' FROM first_bch_deg_date)::bigint AS first_bch_deg_date,\
				gsm,\
				last_gsc_id,\
				previous_gsc_id,\
				all_gsc_ids,\
				all_gsc_ids_txt,\
				last_gst_id,\
				previous_gst_id,\
				all_gst_ids,\
				other_gst_id,\
				target_gst_ids,\
				all_gst_ids_text,\
				highest_degree,\
				disabilities,\
				months_of_exp_after_grad,\
				cv_custom_json,\
				sessions_count,\
				photo_url,\
				unemployed,\
				orginal_nationality,\
				extract('epoch' FROM cv_builder_date_modified)::bigint AS cv_builder_date_modified,\
				trainings,\
				certificates,\
				training_institutes,\
				last_gsi_id,\
				previous_gsi_id,\
				all_gsi_ids,\
				target_jb_roles,\
				all_gsi_ids_txt,\
				1 as index_weight,\
				'ANYKEYWORD' as any_keyword,\
				last_exp_comp_size,\
                		extract('epoch' FROM updated_contact_date)::bigint AS updated_contact_date,\
				extract('epoch' FROM last_exp_start_date)::bigint AS last_exp_start_date\
			FROM \
				cv_index_10 \
			WHERE \
				insertion_date <  (SELECT lst_main_index_start_time FROM spx_delta_separator WHERE index_id = 110 LIMIT 1) \
				 AND cv_id>=$start AND cv_id<=$end

	sql_range_step	=25000
	sql_attr_uint		=cv_id
	sql_field_string		=last_exp_emp
	sql_field_string		=previous_exp_emp
	sql_field_string		=last_exp_title
	sql_attr_uint		=last_exp_title_crc32
	sql_field_string		=previous_exp_title
	sql_attr_uint		=previous_exp_title_crc32
	sql_attr_uint		=last_exp_emp_crc32
	sql_attr_uint		=previous_exp_emp_crc32
	sql_attr_uint		=total_months_of_experience
	sql_attr_multi		=bigint industeries_roles_years from field industeries_roles_years
	sql_attr_multi		=bigint present_industeries_roles_years from field present_industeries_roles_years
	sql_attr_uint		=last_jb_industry
	sql_attr_uint		=last_jb_role
	sql_attr_multi		=bigint exp_roles_list from field exp_roles_list
	sql_attr_multi		=bigint exp_industries_list from field exp_industries_list
	sql_attr_multi		=uint experiences_iso_encoded_list from field experiences_iso_encoded_list
	sql_attr_uint		=last_experience_iso_encoded
	sql_field_string		=target_jb_title
	sql_attr_multi		=uint emplyment_type_list from field emplyment_type_list
	sql_attr_multi		=uint emplyment_status_list from field emplyment_status_list
	sql_attr_multi		=uint target_job_locations_list from field target_job_locations_list
	sql_attr_multi		=uint target_job_industries_list from field target_job_industries_list
	sql_attr_uint		=notice_period
	sql_attr_uint		=trgt_job_salary
	sql_attr_uint		=salary_range_cluster_list
	sql_attr_uint		=career_level
	sql_attr_uint           =career_level_sorted
	sql_attr_uint           =months_of_experience_sorted
	sql_attr_uint		=residence_location_iso_encoded
	sql_attr_uint		=residence_country_iso_encoded
	sql_attr_uint		=gender
	sql_attr_uint		=date_of_birth
	sql_attr_uint		=marital_status
	sql_attr_uint		=graduation_date
	sql_attr_uint		=visa_status
	sql_attr_multi		=uint car_license_countries_list_encoded from field car_license_countries_list_encoded
	sql_attr_multi		=uint edu_degree_list from field edu_degree_list
	sql_attr_multi		=uint edu_iso_encoded_list from field edu_iso_encoded_list
	sql_attr_multi		=uint edu_majors_crc32_list from field edu_majors_crc32_list
	sql_attr_multi		=uint edu_institute_crc32_list from field edu_institute_crc32_list
	sql_attr_uint		=last_edu_degree
	sql_attr_multi		=uint language_skills_levels_encoded_list from field language_skills_levels_encoded_list
	sql_attr_uint		=cv_stage
	sql_attr_uint		=locale
	sql_attr_uint		=bcc_id
	sql_attr_uint		=user_id
	sql_attr_uint		=gpa
	sql_attr_uint		=gpa_cluster
	sql_attr_timestamp		=date_indexed
	sql_attr_uint		=parent_bcc_id
	sql_attr_bool		=has_attachment
	sql_attr_bool		=has_photo
	sql_attr_bool		=has_video
	sql_attr_bool		=has_recommendation
	sql_field_string		=first_name
	sql_field_string		=middle_name
	sql_field_string		=last_name
	sql_field_string		=profile_name
	sql_attr_uint		=profile_id
	sql_attr_uint		=referrer_source_id
	sql_attr_multi		=uint specilaities_list from field specilaities_list
	sql_attr_multi		=bigint specilaities_points from field specilaities_points
	sql_attr_uint		=special_needs
	sql_attr_bool		=is_primary
	sql_attr_bool		=email_bouncing_p
	sql_attr_timestamp		=creation_date
	sql_attr_bool		=is_confidential
	sql_field_string		=last_name_ar
	sql_field_string		=last_name_la
	sql_field_string		=first_name_ar
	sql_field_string		=first_name_la
	sql_attr_uint		=primary_nationality
	sql_attr_uint		=primary_nationality_cleaned
	sql_attr_multi          =uint nationalities_list from field nationalities_list
	sql_attr_uint		=registration_iso
	sql_attr_uint		=user_type
	sql_attr_uint		=cv_creation_method
	sql_attr_uint		=affliate_program_id
	sql_attr_uint		=cv_no_search_hits
	sql_attr_uint		=cv_no_submits_to
	sql_attr_uint		=cv_no_reviews
	sql_attr_uint		=completness_score
	sql_attr_timestamp		=registration_date
	sql_attr_multi		=bigint bcc_json_fields from field bcc_json_fields
	sql_attr_uint		=yrs_exp_cluster_id
	sql_attr_uint		=yrs_exp_after_grad_cluster_id
	sql_attr_uint		=completness_scores
	sql_attr_float		=cv_search_ranker
	sql_attr_float		=byt_cv_search_ranker
	sql_attr_uint		=user_public_profile_enable
	sql_attr_uint		=people_ranker
	sql_attr_timestamp		=cv_completion_date
	sql_attr_timestamp		=last_login_date
	sql_field_string		=user_state
	sql_field_string		=email_enc
	sql_field_string		=email_domain
	sql_attr_uint		=dependents
	sql_field_string		=cell_phone_enc
	sql_field_string		=home_phone_enc
	sql_field_string		=work_phone_enc
	sql_field_string		=cell_phone
	sql_attr_uint		=bounce_count
	sql_attr_uint		=last_salary_value
	sql_field_string		=last_exp_emp_full
	sql_attr_uint		=last_exp_emp_crc32_full
	sql_attr_uint		=user_lang_preference
	sql_attr_uint		=premium_account
	sql_attr_multi		=uint user_tests from field user_tests
	sql_attr_multi		=uint user_courses from field user_courses
	sql_attr_uint		=hopping
	sql_attr_uint		=gaps
	sql_attr_uint		=res_visa_status
	sql_attr_timestamp		=mobile_confirm_date
	sql_attr_timestamp		=first_bch_deg_date
	sql_attr_multi		=uint gsm from field gsm
	sql_attr_uint		=last_gsc_id
	sql_attr_uint		=previous_gsc_id
	sql_attr_multi		=uint all_gsc_ids from field all_gsc_ids
	sql_attr_multi		=uint last_gst_id from field last_gst_id
	sql_attr_multi		=uint previous_gst_id from field previous_gst_id
	sql_attr_multi		=uint all_gst_ids from field all_gst_ids
	sql_attr_multi		=uint other_gst_id from field other_gst_id
	sql_attr_multi		=uint target_gst_ids from field target_gst_ids
	sql_attr_uint		=highest_degree
	sql_attr_multi		=uint disabilities from field disabilities
	sql_attr_uint		=months_of_exp_after_grad
	sql_attr_json		=cv_custom_json
	sql_attr_uint		=sessions_count
	sql_field_string		=photo_url
	sql_attr_bool		=unemployed
	sql_attr_uint		=orginal_nationality
	sql_attr_timestamp		=cv_builder_date_modified
	sql_attr_uint		=last_gsi_id
	sql_attr_uint		=previous_gsi_id
	sql_attr_multi		=uint all_gsi_ids from field all_gsi_ids
	sql_attr_multi		=uint target_jb_roles from field target_jb_roles
	sql_attr_uint       =last_exp_comp_size
    	sql_attr_timestamp  =updated_contact_date
	sql_attr_timestamp  =last_exp_start_date
	sql_attr_uint		=index_weight
	sql_attr_multi		=uint folder_id from ranged-query;  SELECT cv_id, folder_id FROM byt_employer_basket_10 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_employer_basket_10 WHERE cv_id between 61000000 and 61999999
	sql_attr_multi		=uint tag_id from ranged-query;  SELECT cv_id, tag_id FROM byt_item_tags_10 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_item_tags_10 WHERE cv_id between 61000000 and 61999999
	sql_attr_multi		=uint note_group_id from ranged-query;  SELECT cv_id, group_id FROM byt_comments_10 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_comments_10 WHERE cv_id between 61000000 and 61999999
}

		index cvMainIndexStemmed_10_1
		{
			type			= plain
			source 			= cvMainIndexStemmed_10_1_src
			path 			= /home/sphinx/sphinx/var/data/cvMainIndexStemmed_10_1
			morphology   = stem_en,stem_ar
			wordforms  = /home/sphinx/sphinx/var/data/wordforms.txt
			dict=keywords
			index_sp  = 1
			index_zones		= b_*, is_agency, special_needs, referrer_source
			stopwords		= en,ar
			exceptions		= /home/sphinx/sphinx/var/data/exceptions.txt
			min_word_len		= 1
			charset_table		= non_cjk
			index_exact_words	= 1
			
			ngram_len		= 1
			#ngram_chars		=  non_cjk
			html_strip				= 1
			preopen				= 1
		}		
		


source cvMainIndex_10_2_src {
	type		=pgsql
	sql_host	=host
	sql_user	=user
	sql_pass	=pass
	sql_db		=database
	sql_port	=9988

	sql_query_pre	=SET client_encoding TO 'UTF8'
	sql_query_pre	= SET NAMES 'UTF8'
	sql_ranged_throttle	=1000
	sql_query_range	= SELECT MIN(cv_id),MAX(cv_id) FROM cv_index_10 WHERE cv_id between 62000000 and 62999999
	sql_query	=SELECT \
				cv_id as id,\
				cv_id,\
				experiences_titles,\
				experiences_description,\
				experiences_employers,\
				last_exp_desc,\
				(CASE WHEN is_confidential = 'f' THEN last_exp_emp ELSE NULL END) as last_exp_emp,\
				(CASE WHEN is_confidential = 'f' THEN previous_exp_emp ELSE NULL END) as previous_exp_emp,\
				last_exp_title,\
				last_exp_title_crc32,\
				previous_exp_title,\
				previous_exp_title_crc32,\
				(CASE WHEN is_confidential = 'f' THEN last_exp_emp_crc32 ELSE 0 END) as last_exp_emp_crc32,\
				(CASE WHEN is_confidential = 'f' THEN previous_exp_emp_crc32 ELSE 0 END) as previous_exp_emp_crc32,\
				(CASE WHEN months_of_experience != 999999 then months_of_experience  WHEN market_entry_date != 999999 then (to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date  ELSE 999999 END ) as total_months_of_experience,\
				industeries_roles_years,\
				present_industeries_roles_years,\
				last_jb_industry,\
				last_jb_role,\
				exp_roles_list,\
				exp_industries_list,\
				experiences_iso_encoded_list,\
				last_experience_iso_encoded,\
				target_jb_title,\
				emplyment_type_list,\
				emplyment_status_list,\
				target_job_locations_list,\
				target_job_industries_list,\
				notice_period,\
				trgt_job_salary,\
				(CASE WHEN trgt_job_salary < 0 then 0  WHEN trgt_job_salary = 0 then 1  WHEN trgt_job_salary < 500 THEN 2  WHEN trgt_job_salary <= 1000 THEN 3  WHEN trgt_job_salary <= 1500 THEN 4  WHEN trgt_job_salary <= 2000 THEN 5  WHEN trgt_job_salary <= 3000 THEN 6  WHEN trgt_job_salary <= 5000 THEN 7  WHEN trgt_job_salary <= 8000 THEN 8  WHEN trgt_job_salary <= 12000 THEN 9  WHEN trgt_job_salary <= 16000 THEN 10  WHEN trgt_job_salary <= 20000 THEN 11  WHEN trgt_job_salary <= 30000 THEN 12  WHEN trgt_job_salary <= 50000 THEN 13  ELSE 14  END) as salary_range_cluster_list,\
				career_level,\
				(CASE WHEN career_level = 6 THEN 2001 WHEN career_level < 6 THEN (career_level+1000)*2 ELSE career_level END) as career_level_sorted,\
				(CASE WHEN months_of_experience != 999999 then months_of_experience  WHEN market_entry_date != 999999 then (to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date  ELSE 0 END ) as months_of_experience_sorted,\
				objective_txt,\
				residence_location_iso_encoded,\
				LEFT(residence_location_iso_encoded::text,4)::int as residence_country_iso_encoded,\
				gender,\
				date_of_birth,\
				marital_status,\
				graduation_date,\
				visa_status,\
				car_license_countries_list_encoded,\
				edu_degree_list,\
				edu_iso_encoded_list,\
				edu_txt,\
				edu_major,\
				edu_majors_crc32_list,\
				lst_edu_major,\
				edu_institute,\
				edu_institute_crc32_list,\
				lst_edu_institute,\
				last_edu_degree,\
				skills_txt,\
				language_skills_levels_encoded_list,\
				cv_stage,\
				locale,\
				bcc_id,\
				generic_txt,\
				user_id,\
				gpa,\
				(CASE when gpa >= 99999 then 5 when gpa >= 8000 then 4 when gpa >= 6000 then 3 when gpa >= 4000 then 2 when gpa >= 2000 then 1 when gpa >= 0 then 0 end) as gpa_cluster,\
				extract('epoch' FROM date_indexed)::bigint AS date_indexed,\
				parent_bcc_id,\
				has_attachment,\
				has_photo,\
				has_video,\
				has_recommendation,\
				first_name,\
				middle_name,\
				last_name,\
				profile_name,\
				profile_id,\
				(case when referrer_source_id is null then 99999 else referrer_source_id end ) as referrer_source_id,\
				specilaities_list,\
				specilaities_text,\
				specilaities_points,\
				user_generic_field1,\
				 COALESCE(special_needs,99999) AS special_needs,\
				is_primary,\
				email_bouncing_p,\
				extract('epoch' FROM creation_date)::bigint AS creation_date,\
				is_confidential,\
				last_name_ar,\
				last_name_la,\
				first_name_ar,\
				first_name_la,\
				first_name_la || ' ' || last_name_la as full_name_la,\
				first_name_ar || ' ' || last_name_ar as full_name_ar,\
				primary_nationality,\
				(case when LEFT(residence_location_iso_encoded::text,4)::int = primary_nationality  and visa_status not in (1,7) then 0  when  LEFT(residence_location_iso_encoded::text,4)::int in (5560,6257,6254,4850,5857) and primary_nationality in (4751,6547,5769,6347,4854,6159)  then 0 else  primary_nationality end) as primary_nationality_cleaned,\
				nationalities_list,\
				specilaities_platinum,\
				specilaities_gold,\
				specilaities_silver,\
				specilaities_bronze,\
				bcc_text_fields,\
				has_flag,\
				registration_iso,\
				user_type,\
				cv_creation_method,\
				affliate_program_id,\
				cv_no_search_hits,\
				cv_no_submits_to,\
				cv_no_reviews,\
				completness_score,\
				extract('epoch' FROM registration_date)::bigint AS registration_date,\
				bcc_json_fields,\
				referrer_source,\
				user_generic_field2,\
				user_generic_field3,\
				user_generic_field4,\
				(case (CASE WHEN months_of_experience != 999999 then CEIL(months_of_experience/11.999)  WHEN market_entry_date != 999999 then ceil(((to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date)/11.999)  ELSE 999999 END )::bigint when 0 then 1 when 1 then 1 when 2 then 2 when 3 then 3 when 4 then 3 when 5 then 3 when 6 then 4 when 7 then 4 when 8 then 4 when 9 then 4 when 10 then 4 when 999999 then 6 else 5 end) as yrs_exp_cluster_id,\
				(case (CASE WHEN months_of_exp_after_grad != 999999 then CEIL(months_of_exp_after_grad/11.999) ELSE 999999 END )::bigint when 0 then 1 when 1 then 1 when 2 then 2 when 3 then 3 when 4 then 3 when 5 then 3 when 6 then 4 when 7 then 4 when 8 then 4 when 9 then 4 when 10 then 4 when 999999 then 6 else 5 end) as yrs_exp_after_grad_cluster_id,\
				(CASE WHEN completness_score < 20 THEN 1 WHEN completness_score < 40 THEN 2 WHEN completness_score < 60 THEN 3 WHEN completness_score < 80 THEN 4 WHEN completness_score < 500 THEN 5 END ) as completness_scores,\
				(case when premium_account > 0 then 1.35 else 1 end) * (case when extract('epoch' FROM mobile_confirm_date)::bigint > 0 then 1.15 else 1 end) * (case when email_bouncing_p = true then 0.01 else 1 end) * (CASE WHEN (completness_score > 99) THEN 1.5 WHEN (completness_score > 80) THEN (1+completness_score/250)  WHEN (completness_score > 50) THEN (1+completness_score/400) WHEN (completness_score > 25) THEN 0.9 ELSE 0.5 END) * (CASE WHEN (last_login_date > NOW()-INTERVAL '2629800 SECOND')    THEN 1.3 WHEN (last_login_date > NOW()-INTERVAL '7889400 SECOND')    THEN 1.23 WHEN (last_login_date > NOW()-INTERVAL '15778800 SECOND')   THEN 1.17  WHEN (last_login_date > NOW()-INTERVAL '31557600  SECOND')  THEN 1.12 WHEN (last_login_date > NOW()-INTERVAL '63115200  SECOND')  THEN 1.06 ELSE 1 END) * (CASE WHEN (date_indexed > NOW()-INTERVAL '2629800 SECOND')    THEN 1.5 WHEN (date_indexed > NOW()-INTERVAL '7889400 SECOND')    THEN 1.4 WHEN (date_indexed > NOW()-INTERVAL '15778800 SECOND')   THEN 1.3  WHEN (date_indexed > NOW()-INTERVAL '31557600  SECOND')  THEN 1.15 WHEN (date_indexed > NOW()-INTERVAL '63115200  SECOND')  THEN 1.13 ELSE 1 END)::float as cv_search_ranker,\
				(case when premium_account > 0 then 1.35 else 1 end) * (case when extract('epoch' FROM mobile_confirm_date)::bigint > 0 then 1.15 else 1 end) * (case when email_bouncing_p = true then 0.01 else 1 end) * (CASE WHEN (completness_score > 99) THEN 1.5 WHEN (completness_score > 80) THEN (1+completness_score/250)  WHEN (completness_score > 50) THEN (1+completness_score/400) WHEN (completness_score > 25) THEN 0.9 ELSE 0.5 END) * (CASE WHEN (last_login_date > NOW()-INTERVAL '2629800 SECOND')    THEN 1.3 WHEN (last_login_date > NOW()-INTERVAL '7889400 SECOND')    THEN 1.23 WHEN (last_login_date > NOW()-INTERVAL '15778800 SECOND')   THEN 1.17  WHEN (last_login_date > NOW()-INTERVAL '31557600  SECOND')  THEN 1.12 WHEN (last_login_date > NOW()-INTERVAL '63115200  SECOND')  THEN 1.06 ELSE 1 END) * (CASE WHEN (cv_builder_date_modified > NOW()-INTERVAL '2629800 SECOND')    THEN 1.5 WHEN (cv_builder_date_modified > NOW()-INTERVAL '7889400 SECOND')    THEN 1.4 WHEN (cv_builder_date_modified > NOW()-INTERVAL '15778800 SECOND')   THEN 1.3  WHEN (cv_builder_date_modified > NOW()-INTERVAL '31557600  SECOND')  THEN 1.15 WHEN (cv_builder_date_modified > NOW()-INTERVAL '63115200  SECOND')  THEN 1.13 ELSE 1 END)::float as byt_cv_search_ranker,\
				(CASE WHEN (is_primary = TRUE and profile_id > 0) THEN 1 ELSE 0 END) as user_public_profile_enable,\
				(case when email_bouncing_p = true then 0.01 else 1 end) * (1000*(1+0.2*(CASE WHEN has_photo = TRUE THEN 1 ELSE 0 END))) as people_ranker,\
				(CASE WHEN (sections_fields IS NULL OR sections_fields = ' ')   THEN 'tar per con edu exp'  ELSE sections_fields  END) as sections_fields,\
				extract('epoch' FROM cv_completion_date)::bigint AS cv_completion_date,\
				extract('epoch' FROM last_login_date)::bigint AS last_login_date,\
				(CASE WHEN (user_state IS NULL OR user_state = ' ')  THEN 'mini' ELSE user_state END) as user_state,\
				email_enc,\
				email_domain,\
				dependents,\
				cell_phone_enc,\
				home_phone_enc,\
				work_phone_enc,\
				cell_phone,\
				bounce_count,\
				last_salary_value,\
				receive_emails_list,\
				last_exp_emp as last_exp_emp_full,\
				last_exp_emp_crc32 as last_exp_emp_crc32_full,\
				user_lang_preference,\
				premium_account,\
				user_tests,\
				user_courses,\
				hobbies,\
				hopping,\
				gaps,\
				res_visa_status,\
				extract('epoch' FROM mobile_confirm_date)::bigint AS mobile_confirm_date,\
				viewer_ids,\
				extract('epoch' FROM first_bch_deg_date)::bigint AS first_bch_deg_date,\
				gsm,\
				last_gsc_id,\
				previous_gsc_id,\
				all_gsc_ids,\
				all_gsc_ids_txt,\
				last_gst_id,\
				previous_gst_id,\
				all_gst_ids,\
				other_gst_id,\
				target_gst_ids,\
				all_gst_ids_text,\
				highest_degree,\
				disabilities,\
				months_of_exp_after_grad,\
				cv_custom_json,\
				sessions_count,\
				photo_url,\
				unemployed,\
				orginal_nationality,\
				extract('epoch' FROM cv_builder_date_modified)::bigint AS cv_builder_date_modified,\
				trainings,\
				certificates,\
				training_institutes,\
				last_gsi_id,\
				previous_gsi_id,\
				all_gsi_ids,\
				target_jb_roles,\
				all_gsi_ids_txt,\
				3 as index_weight,\
				'ANYKEYWORD' as any_keyword,\
				last_exp_comp_size,\
                		extract('epoch' FROM updated_contact_date)::bigint AS updated_contact_date,\
				extract('epoch' FROM last_exp_start_date)::bigint AS last_exp_start_date\
			FROM \
				cv_index_10 \
			WHERE \
				insertion_date <  (SELECT lst_main_index_start_time FROM spx_delta_separator WHERE index_id = 110 LIMIT 1) \
				 AND cv_id>=$start AND cv_id<=$end

	sql_range_step	=25000
	sql_attr_uint		=cv_id
	sql_field_string		=last_exp_emp
	sql_field_string		=previous_exp_emp
	sql_field_string		=last_exp_title
	sql_attr_uint		=last_exp_title_crc32
	sql_field_string		=previous_exp_title
	sql_attr_uint		=previous_exp_title_crc32
	sql_attr_uint		=last_exp_emp_crc32
	sql_attr_uint		=previous_exp_emp_crc32
	sql_attr_uint		=total_months_of_experience
	sql_attr_multi		=bigint industeries_roles_years from field industeries_roles_years
	sql_attr_multi		=bigint present_industeries_roles_years from field present_industeries_roles_years
	sql_attr_uint		=last_jb_industry
	sql_attr_uint		=last_jb_role
	sql_attr_multi		=bigint exp_roles_list from field exp_roles_list
	sql_attr_multi		=bigint exp_industries_list from field exp_industries_list
	sql_attr_multi		=uint experiences_iso_encoded_list from field experiences_iso_encoded_list
	sql_attr_uint		=last_experience_iso_encoded
	sql_field_string		=target_jb_title
	sql_attr_multi		=uint emplyment_type_list from field emplyment_type_list
	sql_attr_multi		=uint emplyment_status_list from field emplyment_status_list
	sql_attr_multi		=uint target_job_locations_list from field target_job_locations_list
	sql_attr_multi		=uint target_job_industries_list from field target_job_industries_list
	sql_attr_uint		=notice_period
	sql_attr_uint		=trgt_job_salary
	sql_attr_uint		=salary_range_cluster_list
	sql_attr_uint		=career_level
        sql_attr_uint   	=career_level_sorted
        sql_attr_uint	        =months_of_experience_sorted
	sql_attr_uint		=residence_location_iso_encoded
	sql_attr_uint		=residence_country_iso_encoded
	sql_attr_uint		=gender
	sql_attr_uint		=date_of_birth
	sql_attr_uint		=marital_status
	sql_attr_uint		=graduation_date
	sql_attr_uint		=visa_status
	sql_attr_multi		=uint car_license_countries_list_encoded from field car_license_countries_list_encoded
	sql_attr_multi		=uint edu_degree_list from field edu_degree_list
	sql_attr_multi		=uint edu_iso_encoded_list from field edu_iso_encoded_list
	sql_attr_multi		=uint edu_majors_crc32_list from field edu_majors_crc32_list
	sql_attr_multi		=uint edu_institute_crc32_list from field edu_institute_crc32_list
	sql_attr_uint		=last_edu_degree
	sql_attr_multi		=uint language_skills_levels_encoded_list from field language_skills_levels_encoded_list
	sql_attr_uint		=cv_stage
	sql_attr_uint		=locale
	sql_attr_uint		=bcc_id
	sql_attr_uint		=user_id
	sql_attr_uint		=gpa
	sql_attr_uint		=gpa_cluster
	sql_attr_timestamp		=date_indexed
	sql_attr_uint		=parent_bcc_id
	sql_attr_bool		=has_attachment
	sql_attr_bool		=has_photo
	sql_attr_bool		=has_video
	sql_attr_bool		=has_recommendation
	sql_field_string		=first_name
	sql_field_string		=middle_name
	sql_field_string		=last_name
	sql_field_string		=profile_name
	sql_attr_uint		=profile_id
	sql_attr_uint		=referrer_source_id
	sql_attr_multi		=uint specilaities_list from field specilaities_list
	sql_attr_multi		=bigint specilaities_points from field specilaities_points
	sql_attr_uint		=special_needs
	sql_attr_bool		=is_primary
	sql_attr_bool		=email_bouncing_p
	sql_attr_timestamp		=creation_date
	sql_attr_bool		=is_confidential
	sql_field_string		=last_name_ar
	sql_field_string		=last_name_la
	sql_field_string		=first_name_ar
	sql_field_string		=first_name_la
	sql_attr_uint		=primary_nationality
	sql_attr_uint		=primary_nationality_cleaned
	sql_attr_multi          =uint nationalities_list from field nationalities_list
	sql_attr_uint		=registration_iso
	sql_attr_uint		=user_type
	sql_attr_uint		=cv_creation_method
	sql_attr_uint		=affliate_program_id
	sql_attr_uint		=cv_no_search_hits
	sql_attr_uint		=cv_no_submits_to
	sql_attr_uint		=cv_no_reviews
	sql_attr_uint		=completness_score
	sql_attr_timestamp		=registration_date
	sql_attr_multi		=bigint bcc_json_fields from field bcc_json_fields
	sql_attr_uint		=yrs_exp_cluster_id
	sql_attr_uint		=yrs_exp_after_grad_cluster_id
	sql_attr_uint		=completness_scores
	sql_attr_float		=cv_search_ranker
	sql_attr_float		=byt_cv_search_ranker
	sql_attr_uint		=user_public_profile_enable
	sql_attr_uint		=people_ranker
	sql_attr_timestamp		=cv_completion_date
	sql_attr_timestamp		=last_login_date
	sql_field_string		=user_state
	sql_field_string		=email_enc
	sql_field_string		=email_domain
	sql_attr_uint		=dependents
	sql_field_string		=cell_phone_enc
	sql_field_string		=home_phone_enc
	sql_field_string		=work_phone_enc
	sql_field_string		=cell_phone
	sql_attr_uint		=bounce_count
	sql_attr_uint		=last_salary_value
	sql_field_string		=last_exp_emp_full
	sql_attr_uint		=last_exp_emp_crc32_full
	sql_attr_uint		=user_lang_preference
	sql_attr_uint		=premium_account
	sql_attr_multi		=uint user_tests from field user_tests
	sql_attr_multi		=uint user_courses from field user_courses
	sql_attr_uint		=hopping
	sql_attr_uint		=gaps
	sql_attr_uint		=res_visa_status
	sql_attr_timestamp		=mobile_confirm_date
	sql_attr_timestamp		=first_bch_deg_date
	sql_attr_multi		=uint gsm from field gsm
	sql_attr_uint		=last_gsc_id
	sql_attr_uint		=previous_gsc_id
	sql_attr_multi		=uint all_gsc_ids from field all_gsc_ids
	sql_attr_multi		=uint last_gst_id from field last_gst_id
	sql_attr_multi		=uint previous_gst_id from field previous_gst_id
	sql_attr_multi		=uint all_gst_ids from field all_gst_ids
	sql_attr_multi		=uint other_gst_id from field other_gst_id
	sql_attr_multi		=uint target_gst_ids from field target_gst_ids
	sql_attr_uint		=highest_degree
	sql_attr_multi		=uint disabilities from field disabilities
	sql_attr_uint		=months_of_exp_after_grad
	sql_attr_json		=cv_custom_json
	sql_attr_uint		=sessions_count
	sql_field_string		=photo_url
	sql_attr_bool		=unemployed
	sql_attr_uint		=orginal_nationality
	sql_attr_timestamp		=cv_builder_date_modified
	sql_attr_uint		=last_gsi_id
	sql_attr_uint		=previous_gsi_id
	sql_attr_multi		=uint all_gsi_ids from field all_gsi_ids
	sql_attr_multi		=uint target_jb_roles from field target_jb_roles
    	sql_attr_uint       =last_exp_comp_size
   	sql_attr_timestamp  =updated_contact_date
	sql_attr_timestamp  =last_exp_start_date
	sql_attr_uint		=index_weight
	sql_attr_multi		=uint folder_id from ranged-query;  SELECT cv_id, folder_id FROM byt_employer_basket_10 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_employer_basket_10 WHERE cv_id between 62000000 and 62999999
	sql_attr_multi		=uint tag_id from ranged-query;  SELECT cv_id, tag_id FROM byt_item_tags_10 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_item_tags_10 WHERE cv_id between 62000000 and 62999999
	sql_attr_multi		=uint note_group_id from ranged-query;  SELECT cv_id, group_id FROM byt_comments_10 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_comments_10 WHERE cv_id between 62000000 and 62999999
}

		index cvMainIndex_10_2
		{
			type			= plain
			source 			= cvMainIndex_10_2_src
			path 			= /home/sphinx/sphinx/var/data/cvMainIndex_10_2
			morphology   = none
			dict=keywords
			index_sp  = 1
			index_zones		= b_*, is_agency, special_needs, referrer_source
			stopwords		= en,ar
			exceptions		= /home/sphinx/sphinx/var/data/exceptions.txt
			min_word_len		= 1
			charset_table		= non_cjk
			ngram_len		= 1
			#ngram_chars		=  non_cjk
			inplace_enable		= 0
			html_strip				= 1
			preopen				= 1
		}		

	source cvMainIndexStemmed_10_2_src {
	type		=pgsql
	sql_host	=host
	sql_user	=user
	sql_pass	=pass
	sql_db		=database
	sql_port	=9988

	sql_query_pre	=SET client_encoding TO 'UTF8'
	sql_query_pre	= SET NAMES 'UTF8'
	sql_ranged_throttle	=1000
	sql_query_range	= SELECT MIN(cv_id),MAX(cv_id) FROM cv_index_10 WHERE cv_id between 62000000 and 62999999
	sql_query	=SELECT \
				cv_id as id,\
				cv_id,\
				experiences_titles,\
				experiences_description,\
				experiences_employers,\
				last_exp_desc,\
				(CASE WHEN is_confidential = 'f' THEN last_exp_emp ELSE NULL END) as last_exp_emp,\
				(CASE WHEN is_confidential = 'f' THEN previous_exp_emp ELSE NULL END) as previous_exp_emp,\
				last_exp_title,\
				last_exp_title_crc32,\
				previous_exp_title,\
				previous_exp_title_crc32,\
				(CASE WHEN is_confidential = 'f' THEN last_exp_emp_crc32 ELSE 0 END) as last_exp_emp_crc32,\
				(CASE WHEN is_confidential = 'f' THEN previous_exp_emp_crc32 ELSE 0 END) as previous_exp_emp_crc32,\
				(CASE WHEN months_of_experience != 999999 then months_of_experience  WHEN market_entry_date != 999999 then (to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date  ELSE 999999 END ) as total_months_of_experience,\
				industeries_roles_years,\
				present_industeries_roles_years,\
				last_jb_industry,\
				last_jb_role,\
				exp_roles_list,\
				exp_industries_list,\
				experiences_iso_encoded_list,\
				last_experience_iso_encoded,\
				target_jb_title,\
				emplyment_type_list,\
				emplyment_status_list,\
				target_job_locations_list,\
				target_job_industries_list,\
				notice_period,\
				trgt_job_salary,\
				(CASE WHEN trgt_job_salary < 0 then 0  WHEN trgt_job_salary = 0 then 1  WHEN trgt_job_salary < 500 THEN 2  WHEN trgt_job_salary <= 1000 THEN 3  WHEN trgt_job_salary <= 1500 THEN 4  WHEN trgt_job_salary <= 2000 THEN 5  WHEN trgt_job_salary <= 3000 THEN 6  WHEN trgt_job_salary <= 5000 THEN 7  WHEN trgt_job_salary <= 8000 THEN 8  WHEN trgt_job_salary <= 12000 THEN 9  WHEN trgt_job_salary <= 16000 THEN 10  WHEN trgt_job_salary <= 20000 THEN 11  WHEN trgt_job_salary <= 30000 THEN 12  WHEN trgt_job_salary <= 50000 THEN 13  ELSE 14  END) as salary_range_cluster_list,\
				career_level,\
				(CASE WHEN career_level = 6 THEN 2001 WHEN career_level < 6 THEN (career_level+1000)*2 ELSE career_level END) as career_level_sorted,\
				(CASE WHEN months_of_experience != 999999 then months_of_experience  WHEN market_entry_date != 999999 then (to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date  ELSE 0 END ) as months_of_experience_sorted,\
				objective_txt,\
				residence_location_iso_encoded,\
				LEFT(residence_location_iso_encoded::text,4)::int as residence_country_iso_encoded,\
				gender,\
				date_of_birth,\
				marital_status,\
				graduation_date,\
				visa_status,\
				car_license_countries_list_encoded,\
				edu_degree_list,\
				edu_iso_encoded_list,\
				edu_txt,\
				edu_major,\
				edu_majors_crc32_list,\
				lst_edu_major,\
				edu_institute,\
				edu_institute_crc32_list,\
				lst_edu_institute,\
				last_edu_degree,\
				skills_txt,\
				language_skills_levels_encoded_list,\
				cv_stage,\
				locale,\
				bcc_id,\
				generic_txt,\
				user_id,\
				gpa,\
				(CASE when gpa >= 99999 then 5 when gpa >= 8000 then 4 when gpa >= 6000 then 3 when gpa >= 4000 then 2 when gpa >= 2000 then 1 when gpa >= 0 then 0 end) as gpa_cluster,\
				extract('epoch' FROM date_indexed)::bigint AS date_indexed,\
				parent_bcc_id,\
				has_attachment,\
				has_photo,\
				has_video,\
				has_recommendation,\
				first_name,\
				middle_name,\
				last_name,\
				profile_name,\
				profile_id,\
				(case when referrer_source_id is null then 99999 else referrer_source_id end ) as referrer_source_id,\
				specilaities_list,\
				specilaities_text,\
				specilaities_points,\
				user_generic_field1,\
				 COALESCE(special_needs,99999) AS special_needs,\
				is_primary,\
				email_bouncing_p,\
				extract('epoch' FROM creation_date)::bigint AS creation_date,\
				is_confidential,\
				last_name_ar,\
				last_name_la,\
				first_name_ar,\
				first_name_la,\
				first_name_la || ' ' || last_name_la as full_name_la,\
				first_name_ar || ' ' || last_name_ar as full_name_ar,\
				primary_nationality,\
				(case when LEFT(residence_location_iso_encoded::text,4)::int = primary_nationality  and visa_status not in (1,7) then 0  when  LEFT(residence_location_iso_encoded::text,4)::int in (5560,6257,6254,4850,5857) and primary_nationality in (4751,6547,5769,6347,4854,6159)  then 0 else  primary_nationality end) as primary_nationality_cleaned,\
				nationalities_list,\
				specilaities_platinum,\
				specilaities_gold,\
				specilaities_silver,\
				specilaities_bronze,\
				bcc_text_fields,\
				has_flag,\
				registration_iso,\
				user_type,\
				cv_creation_method,\
				affliate_program_id,\
				cv_no_search_hits,\
				cv_no_submits_to,\
				cv_no_reviews,\
				completness_score,\
				extract('epoch' FROM registration_date)::bigint AS registration_date,\
				bcc_json_fields,\
				referrer_source,\
				user_generic_field2,\
				user_generic_field3,\
				user_generic_field4,\
				(case (CASE WHEN months_of_experience != 999999 then CEIL(months_of_experience/11.999)  WHEN market_entry_date != 999999 then ceil(((to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date)/11.999)  ELSE 999999 END )::bigint when 0 then 1 when 1 then 1 when 2 then 2 when 3 then 3 when 4 then 3 when 5 then 3 when 6 then 4 when 7 then 4 when 8 then 4 when 9 then 4 when 10 then 4 when 999999 then 6 else 5 end) as yrs_exp_cluster_id,\
				(case (CASE WHEN months_of_exp_after_grad != 999999 then CEIL(months_of_exp_after_grad/11.999) ELSE 999999 END )::bigint when 0 then 1 when 1 then 1 when 2 then 2 when 3 then 3 when 4 then 3 when 5 then 3 when 6 then 4 when 7 then 4 when 8 then 4 when 9 then 4 when 10 then 4 when 999999 then 6 else 5 end) as yrs_exp_after_grad_cluster_id,\
				(CASE WHEN completness_score < 20 THEN 1 WHEN completness_score < 40 THEN 2 WHEN completness_score < 60 THEN 3 WHEN completness_score < 80 THEN 4 WHEN completness_score < 500 THEN 5 END ) as completness_scores,\
				(case when premium_account > 0 then 1.35 else 1 end) * (case when extract('epoch' FROM mobile_confirm_date)::bigint > 0 then 1.15 else 1 end) * (case when email_bouncing_p = true then 0.01 else 1 end) * (CASE WHEN (completness_score > 99) THEN 1.5 WHEN (completness_score > 80) THEN (1+completness_score/250)  WHEN (completness_score > 50) THEN (1+completness_score/400) WHEN (completness_score > 25) THEN 0.9 ELSE 0.5 END) * (CASE WHEN (last_login_date > NOW()-INTERVAL '2629800 SECOND')    THEN 1.3 WHEN (last_login_date > NOW()-INTERVAL '7889400 SECOND')    THEN 1.23 WHEN (last_login_date > NOW()-INTERVAL '15778800 SECOND')   THEN 1.17  WHEN (last_login_date > NOW()-INTERVAL '31557600  SECOND')  THEN 1.12 WHEN (last_login_date > NOW()-INTERVAL '63115200  SECOND')  THEN 1.06 ELSE 1 END) * (CASE WHEN (date_indexed > NOW()-INTERVAL '2629800 SECOND')    THEN 1.5 WHEN (date_indexed > NOW()-INTERVAL '7889400 SECOND')    THEN 1.4 WHEN (date_indexed > NOW()-INTERVAL '15778800 SECOND')   THEN 1.3  WHEN (date_indexed > NOW()-INTERVAL '31557600  SECOND')  THEN 1.15 WHEN (date_indexed > NOW()-INTERVAL '63115200  SECOND')  THEN 1.13 ELSE 1 END)::float as cv_search_ranker,\
				(case when premium_account > 0 then 1.35 else 1 end) * (case when extract('epoch' FROM mobile_confirm_date)::bigint > 0 then 1.15 else 1 end) * (case when email_bouncing_p = true then 0.01 else 1 end) * (CASE WHEN (completness_score > 99) THEN 1.5 WHEN (completness_score > 80) THEN (1+completness_score/250)  WHEN (completness_score > 50) THEN (1+completness_score/400) WHEN (completness_score > 25) THEN 0.9 ELSE 0.5 END) * (CASE WHEN (last_login_date > NOW()-INTERVAL '2629800 SECOND')    THEN 1.3 WHEN (last_login_date > NOW()-INTERVAL '7889400 SECOND')    THEN 1.23 WHEN (last_login_date > NOW()-INTERVAL '15778800 SECOND')   THEN 1.17  WHEN (last_login_date > NOW()-INTERVAL '31557600  SECOND')  THEN 1.12 WHEN (last_login_date > NOW()-INTERVAL '63115200  SECOND')  THEN 1.06 ELSE 1 END) * (CASE WHEN (cv_builder_date_modified > NOW()-INTERVAL '2629800 SECOND')    THEN 1.5 WHEN (cv_builder_date_modified > NOW()-INTERVAL '7889400 SECOND')    THEN 1.4 WHEN (cv_builder_date_modified > NOW()-INTERVAL '15778800 SECOND')   THEN 1.3  WHEN (cv_builder_date_modified > NOW()-INTERVAL '31557600  SECOND')  THEN 1.15 WHEN (cv_builder_date_modified > NOW()-INTERVAL '63115200  SECOND')  THEN 1.13 ELSE 1 END)::float as byt_cv_search_ranker,\
				(CASE WHEN (is_primary = TRUE and profile_id > 0) THEN 1 ELSE 0 END) as user_public_profile_enable,\
				(case when email_bouncing_p = true then 0.01 else 1 end) * (1000*(1+0.2*(CASE WHEN has_photo = TRUE THEN 1 ELSE 0 END))) as people_ranker,\
				(CASE WHEN (sections_fields IS NULL OR sections_fields = ' ')   THEN 'tar per con edu exp'  ELSE sections_fields  END) as sections_fields,\
				extract('epoch' FROM cv_completion_date)::bigint AS cv_completion_date,\
				extract('epoch' FROM last_login_date)::bigint AS last_login_date,\
				(CASE WHEN (user_state IS NULL OR user_state = ' ')  THEN 'mini' ELSE user_state END) as user_state,\
				email_enc,\
				email_domain,\
				dependents,\
				cell_phone_enc,\
				home_phone_enc,\
				work_phone_enc,\
				cell_phone,\
				bounce_count,\
				last_salary_value,\
				receive_emails_list,\
				last_exp_emp as last_exp_emp_full,\
				last_exp_emp_crc32 as last_exp_emp_crc32_full,\
				user_lang_preference,\
				premium_account,\
				user_tests,\
				user_courses,\
				hobbies,\
				hopping,\
				gaps,\
				res_visa_status,\
				extract('epoch' FROM mobile_confirm_date)::bigint AS mobile_confirm_date,\
				viewer_ids,\
				extract('epoch' FROM first_bch_deg_date)::bigint AS first_bch_deg_date,\
				gsm,\
				last_gsc_id,\
				previous_gsc_id,\
				all_gsc_ids,\
				all_gsc_ids_txt,\
				last_gst_id,\
				previous_gst_id,\
				all_gst_ids,\
				other_gst_id,\
				target_gst_ids,\
				all_gst_ids_text,\
				highest_degree,\
				disabilities,\
				months_of_exp_after_grad,\
				cv_custom_json,\
				sessions_count,\
				photo_url,\
				unemployed,\
				orginal_nationality,\
				extract('epoch' FROM cv_builder_date_modified)::bigint AS cv_builder_date_modified,\
				trainings,\
				certificates,\
				training_institutes,\
				last_gsi_id,\
				previous_gsi_id,\
				all_gsi_ids,\
				target_jb_roles,\
				all_gsi_ids_txt,\
				1 as index_weight,\
				'ANYKEYWORD' as any_keyword,\
				last_exp_comp_size,\
                		extract('epoch' FROM updated_contact_date)::bigint AS updated_contact_date,\
				extract('epoch' FROM last_exp_start_date)::bigint AS last_exp_start_date\
			FROM \
				cv_index_10 \
			WHERE \
				insertion_date <  (SELECT lst_main_index_start_time FROM spx_delta_separator WHERE index_id = 110 LIMIT 1) \
				 AND cv_id>=$start AND cv_id<=$end

	sql_range_step	=25000
	sql_attr_uint		=cv_id
	sql_field_string		=last_exp_emp
	sql_field_string		=previous_exp_emp
	sql_field_string		=last_exp_title
	sql_attr_uint		=last_exp_title_crc32
	sql_field_string		=previous_exp_title
	sql_attr_uint		=previous_exp_title_crc32
	sql_attr_uint		=last_exp_emp_crc32
	sql_attr_uint		=previous_exp_emp_crc32
	sql_attr_uint		=total_months_of_experience
	sql_attr_multi		=bigint industeries_roles_years from field industeries_roles_years
	sql_attr_multi		=bigint present_industeries_roles_years from field present_industeries_roles_years
	sql_attr_uint		=last_jb_industry
	sql_attr_uint		=last_jb_role
	sql_attr_multi		=bigint exp_roles_list from field exp_roles_list
	sql_attr_multi		=bigint exp_industries_list from field exp_industries_list
	sql_attr_multi		=uint experiences_iso_encoded_list from field experiences_iso_encoded_list
	sql_attr_uint		=last_experience_iso_encoded
	sql_field_string		=target_jb_title
	sql_attr_multi		=uint emplyment_type_list from field emplyment_type_list
	sql_attr_multi		=uint emplyment_status_list from field emplyment_status_list
	sql_attr_multi		=uint target_job_locations_list from field target_job_locations_list
	sql_attr_multi		=uint target_job_industries_list from field target_job_industries_list
	sql_attr_uint		=notice_period
	sql_attr_uint		=trgt_job_salary
	sql_attr_uint		=salary_range_cluster_list
	sql_attr_uint		=career_level
	sql_attr_uint           =career_level_sorted
	sql_attr_uint           =months_of_experience_sorted
	sql_attr_uint		=residence_location_iso_encoded
	sql_attr_uint		=residence_country_iso_encoded
	sql_attr_uint		=gender
	sql_attr_uint		=date_of_birth
	sql_attr_uint		=marital_status
	sql_attr_uint		=graduation_date
	sql_attr_uint		=visa_status
	sql_attr_multi		=uint car_license_countries_list_encoded from field car_license_countries_list_encoded
	sql_attr_multi		=uint edu_degree_list from field edu_degree_list
	sql_attr_multi		=uint edu_iso_encoded_list from field edu_iso_encoded_list
	sql_attr_multi		=uint edu_majors_crc32_list from field edu_majors_crc32_list
	sql_attr_multi		=uint edu_institute_crc32_list from field edu_institute_crc32_list
	sql_attr_uint		=last_edu_degree
	sql_attr_multi		=uint language_skills_levels_encoded_list from field language_skills_levels_encoded_list
	sql_attr_uint		=cv_stage
	sql_attr_uint		=locale
	sql_attr_uint		=bcc_id
	sql_attr_uint		=user_id
	sql_attr_uint		=gpa
	sql_attr_uint		=gpa_cluster
	sql_attr_timestamp		=date_indexed
	sql_attr_uint		=parent_bcc_id
	sql_attr_bool		=has_attachment
	sql_attr_bool		=has_photo
	sql_attr_bool		=has_video
	sql_attr_bool		=has_recommendation
	sql_field_string		=first_name
	sql_field_string		=middle_name
	sql_field_string		=last_name
	sql_field_string		=profile_name
	sql_attr_uint		=profile_id
	sql_attr_uint		=referrer_source_id
	sql_attr_multi		=uint specilaities_list from field specilaities_list
	sql_attr_multi		=bigint specilaities_points from field specilaities_points
	sql_attr_uint		=special_needs
	sql_attr_bool		=is_primary
	sql_attr_bool		=email_bouncing_p
	sql_attr_timestamp		=creation_date
	sql_attr_bool		=is_confidential
	sql_field_string		=last_name_ar
	sql_field_string		=last_name_la
	sql_field_string		=first_name_ar
	sql_field_string		=first_name_la
	sql_attr_uint		=primary_nationality
	sql_attr_uint		=primary_nationality_cleaned
	sql_attr_multi          =uint nationalities_list from field nationalities_list
	sql_attr_uint		=registration_iso
	sql_attr_uint		=user_type
	sql_attr_uint		=cv_creation_method
	sql_attr_uint		=affliate_program_id
	sql_attr_uint		=cv_no_search_hits
	sql_attr_uint		=cv_no_submits_to
	sql_attr_uint		=cv_no_reviews
	sql_attr_uint		=completness_score
	sql_attr_timestamp		=registration_date
	sql_attr_multi		=bigint bcc_json_fields from field bcc_json_fields
	sql_attr_uint		=yrs_exp_cluster_id
	sql_attr_uint		=yrs_exp_after_grad_cluster_id
	sql_attr_uint		=completness_scores
	sql_attr_float		=cv_search_ranker
	sql_attr_float		=byt_cv_search_ranker
	sql_attr_uint		=user_public_profile_enable
	sql_attr_uint		=people_ranker
	sql_attr_timestamp		=cv_completion_date
	sql_attr_timestamp		=last_login_date
	sql_field_string		=user_state
	sql_field_string		=email_enc
	sql_field_string		=email_domain
	sql_attr_uint		=dependents
	sql_field_string		=cell_phone_enc
	sql_field_string		=home_phone_enc
	sql_field_string		=work_phone_enc
	sql_field_string		=cell_phone
	sql_attr_uint		=bounce_count
	sql_attr_uint		=last_salary_value
	sql_field_string		=last_exp_emp_full
	sql_attr_uint		=last_exp_emp_crc32_full
	sql_attr_uint		=user_lang_preference
	sql_attr_uint		=premium_account
	sql_attr_multi		=uint user_tests from field user_tests
	sql_attr_multi		=uint user_courses from field user_courses
	sql_attr_uint		=hopping
	sql_attr_uint		=gaps
	sql_attr_uint		=res_visa_status
	sql_attr_timestamp		=mobile_confirm_date
	sql_attr_timestamp		=first_bch_deg_date
	sql_attr_multi		=uint gsm from field gsm
	sql_attr_uint		=last_gsc_id
	sql_attr_uint		=previous_gsc_id
	sql_attr_multi		=uint all_gsc_ids from field all_gsc_ids
	sql_attr_multi		=uint last_gst_id from field last_gst_id
	sql_attr_multi		=uint previous_gst_id from field previous_gst_id
	sql_attr_multi		=uint all_gst_ids from field all_gst_ids
	sql_attr_multi		=uint other_gst_id from field other_gst_id
	sql_attr_multi		=uint target_gst_ids from field target_gst_ids
	sql_attr_uint		=highest_degree
	sql_attr_multi		=uint disabilities from field disabilities
	sql_attr_uint		=months_of_exp_after_grad
	sql_attr_json		=cv_custom_json
	sql_attr_uint		=sessions_count
	sql_field_string		=photo_url
	sql_attr_bool		=unemployed
	sql_attr_uint		=orginal_nationality
	sql_attr_timestamp		=cv_builder_date_modified
	sql_attr_uint		=last_gsi_id
	sql_attr_uint		=previous_gsi_id
	sql_attr_multi		=uint all_gsi_ids from field all_gsi_ids
	sql_attr_multi		=uint target_jb_roles from field target_jb_roles
	sql_attr_uint       =last_exp_comp_size
    	sql_attr_timestamp  =updated_contact_date
	sql_attr_timestamp  =last_exp_start_date
	sql_attr_uint		=index_weight
	sql_attr_multi		=uint folder_id from ranged-query;  SELECT cv_id, folder_id FROM byt_employer_basket_10 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_employer_basket_10 WHERE cv_id between 62000000 and 62999999
	sql_attr_multi		=uint tag_id from ranged-query;  SELECT cv_id, tag_id FROM byt_item_tags_10 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_item_tags_10 WHERE cv_id between 62000000 and 62999999
	sql_attr_multi		=uint note_group_id from ranged-query;  SELECT cv_id, group_id FROM byt_comments_10 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_comments_10 WHERE cv_id between 62000000 and 62999999
}

		index cvMainIndexStemmed_10_2
		{
			type			= plain
			source 			= cvMainIndexStemmed_10_2_src
			path 			= /home/sphinx/sphinx/var/data/cvMainIndexStemmed_10_2
			morphology   = stem_en,stem_ar
			wordforms  = /home/sphinx/sphinx/var/data/wordforms.txt
			dict=keywords
			index_sp  = 1
			index_zones		= b_*, is_agency, special_needs, referrer_source
			stopwords		= en,ar
			exceptions		= /home/sphinx/sphinx/var/data/exceptions.txt
			min_word_len		= 1
			charset_table		= non_cjk
			index_exact_words	= 1
			
			ngram_len		= 1
			#ngram_chars		=  non_cjk
			html_strip				= 1
			preopen				= 1
		}		
		


source cvMainIndex_10_3_src {
	type		=pgsql
	sql_host	=host
	sql_user	=user
	sql_pass	=pass
	sql_db		=database
	sql_port	=9988

	sql_query_pre	=SET client_encoding TO 'UTF8'
	sql_query_pre	= SET NAMES 'UTF8'
	sql_ranged_throttle	=1000
	sql_query_range	= SELECT MIN(cv_id),MAX(cv_id) FROM cv_index_10 WHERE cv_id between 63000000 and 63999999
	sql_query	=SELECT \
				cv_id as id,\
				cv_id,\
				experiences_titles,\
				experiences_description,\
				experiences_employers,\
				last_exp_desc,\
				(CASE WHEN is_confidential = 'f' THEN last_exp_emp ELSE NULL END) as last_exp_emp,\
				(CASE WHEN is_confidential = 'f' THEN previous_exp_emp ELSE NULL END) as previous_exp_emp,\
				last_exp_title,\
				last_exp_title_crc32,\
				previous_exp_title,\
				previous_exp_title_crc32,\
				(CASE WHEN is_confidential = 'f' THEN last_exp_emp_crc32 ELSE 0 END) as last_exp_emp_crc32,\
				(CASE WHEN is_confidential = 'f' THEN previous_exp_emp_crc32 ELSE 0 END) as previous_exp_emp_crc32,\
				(CASE WHEN months_of_experience != 999999 then months_of_experience  WHEN market_entry_date != 999999 then (to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date  ELSE 999999 END ) as total_months_of_experience,\
				industeries_roles_years,\
				present_industeries_roles_years,\
				last_jb_industry,\
				last_jb_role,\
				exp_roles_list,\
				exp_industries_list,\
				experiences_iso_encoded_list,\
				last_experience_iso_encoded,\
				target_jb_title,\
				emplyment_type_list,\
				emplyment_status_list,\
				target_job_locations_list,\
				target_job_industries_list,\
				notice_period,\
				trgt_job_salary,\
				(CASE WHEN trgt_job_salary < 0 then 0  WHEN trgt_job_salary = 0 then 1  WHEN trgt_job_salary < 500 THEN 2  WHEN trgt_job_salary <= 1000 THEN 3  WHEN trgt_job_salary <= 1500 THEN 4  WHEN trgt_job_salary <= 2000 THEN 5  WHEN trgt_job_salary <= 3000 THEN 6  WHEN trgt_job_salary <= 5000 THEN 7  WHEN trgt_job_salary <= 8000 THEN 8  WHEN trgt_job_salary <= 12000 THEN 9  WHEN trgt_job_salary <= 16000 THEN 10  WHEN trgt_job_salary <= 20000 THEN 11  WHEN trgt_job_salary <= 30000 THEN 12  WHEN trgt_job_salary <= 50000 THEN 13  ELSE 14  END) as salary_range_cluster_list,\
				career_level,\
				(CASE WHEN career_level = 6 THEN 2001 WHEN career_level < 6 THEN (career_level+1000)*2 ELSE career_level END) as career_level_sorted,\
				(CASE WHEN months_of_experience != 999999 then months_of_experience  WHEN market_entry_date != 999999 then (to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date  ELSE 0 END ) as months_of_experience_sorted,\
				objective_txt,\
				residence_location_iso_encoded,\
				LEFT(residence_location_iso_encoded::text,4)::int as residence_country_iso_encoded,\
				gender,\
				date_of_birth,\
				marital_status,\
				graduation_date,\
				visa_status,\
				car_license_countries_list_encoded,\
				edu_degree_list,\
				edu_iso_encoded_list,\
				edu_txt,\
				edu_major,\
				edu_majors_crc32_list,\
				lst_edu_major,\
				edu_institute,\
				edu_institute_crc32_list,\
				lst_edu_institute,\
				last_edu_degree,\
				skills_txt,\
				language_skills_levels_encoded_list,\
				cv_stage,\
				locale,\
				bcc_id,\
				generic_txt,\
				user_id,\
				gpa,\
				(CASE when gpa >= 99999 then 5 when gpa >= 8000 then 4 when gpa >= 6000 then 3 when gpa >= 4000 then 2 when gpa >= 2000 then 1 when gpa >= 0 then 0 end) as gpa_cluster,\
				extract('epoch' FROM date_indexed)::bigint AS date_indexed,\
				parent_bcc_id,\
				has_attachment,\
				has_photo,\
				has_video,\
				has_recommendation,\
				first_name,\
				middle_name,\
				last_name,\
				profile_name,\
				profile_id,\
				(case when referrer_source_id is null then 99999 else referrer_source_id end ) as referrer_source_id,\
				specilaities_list,\
				specilaities_text,\
				specilaities_points,\
				user_generic_field1,\
				 COALESCE(special_needs,99999) AS special_needs,\
				is_primary,\
				email_bouncing_p,\
				extract('epoch' FROM creation_date)::bigint AS creation_date,\
				is_confidential,\
				last_name_ar,\
				last_name_la,\
				first_name_ar,\
				first_name_la,\
				first_name_la || ' ' || last_name_la as full_name_la,\
				first_name_ar || ' ' || last_name_ar as full_name_ar,\
				primary_nationality,\
				(case when LEFT(residence_location_iso_encoded::text,4)::int = primary_nationality  and visa_status not in (1,7) then 0  when  LEFT(residence_location_iso_encoded::text,4)::int in (5560,6257,6254,4850,5857) and primary_nationality in (4751,6547,5769,6347,4854,6159)  then 0 else  primary_nationality end) as primary_nationality_cleaned,\
				nationalities_list,\
				specilaities_platinum,\
				specilaities_gold,\
				specilaities_silver,\
				specilaities_bronze,\
				bcc_text_fields,\
				has_flag,\
				registration_iso,\
				user_type,\
				cv_creation_method,\
				affliate_program_id,\
				cv_no_search_hits,\
				cv_no_submits_to,\
				cv_no_reviews,\
				completness_score,\
				extract('epoch' FROM registration_date)::bigint AS registration_date,\
				bcc_json_fields,\
				referrer_source,\
				user_generic_field2,\
				user_generic_field3,\
				user_generic_field4,\
				(case (CASE WHEN months_of_experience != 999999 then CEIL(months_of_experience/11.999)  WHEN market_entry_date != 999999 then ceil(((to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date)/11.999)  ELSE 999999 END )::bigint when 0 then 1 when 1 then 1 when 2 then 2 when 3 then 3 when 4 then 3 when 5 then 3 when 6 then 4 when 7 then 4 when 8 then 4 when 9 then 4 when 10 then 4 when 999999 then 6 else 5 end) as yrs_exp_cluster_id,\
				(case (CASE WHEN months_of_exp_after_grad != 999999 then CEIL(months_of_exp_after_grad/11.999) ELSE 999999 END )::bigint when 0 then 1 when 1 then 1 when 2 then 2 when 3 then 3 when 4 then 3 when 5 then 3 when 6 then 4 when 7 then 4 when 8 then 4 when 9 then 4 when 10 then 4 when 999999 then 6 else 5 end) as yrs_exp_after_grad_cluster_id,\
				(CASE WHEN completness_score < 20 THEN 1 WHEN completness_score < 40 THEN 2 WHEN completness_score < 60 THEN 3 WHEN completness_score < 80 THEN 4 WHEN completness_score < 500 THEN 5 END ) as completness_scores,\
				(case when premium_account > 0 then 1.35 else 1 end) * (case when extract('epoch' FROM mobile_confirm_date)::bigint > 0 then 1.15 else 1 end) * (case when email_bouncing_p = true then 0.01 else 1 end) * (CASE WHEN (completness_score > 99) THEN 1.5 WHEN (completness_score > 80) THEN (1+completness_score/250)  WHEN (completness_score > 50) THEN (1+completness_score/400) WHEN (completness_score > 25) THEN 0.9 ELSE 0.5 END) * (CASE WHEN (last_login_date > NOW()-INTERVAL '2629800 SECOND')    THEN 1.3 WHEN (last_login_date > NOW()-INTERVAL '7889400 SECOND')    THEN 1.23 WHEN (last_login_date > NOW()-INTERVAL '15778800 SECOND')   THEN 1.17  WHEN (last_login_date > NOW()-INTERVAL '31557600  SECOND')  THEN 1.12 WHEN (last_login_date > NOW()-INTERVAL '63115200  SECOND')  THEN 1.06 ELSE 1 END) * (CASE WHEN (date_indexed > NOW()-INTERVAL '2629800 SECOND')    THEN 1.5 WHEN (date_indexed > NOW()-INTERVAL '7889400 SECOND')    THEN 1.4 WHEN (date_indexed > NOW()-INTERVAL '15778800 SECOND')   THEN 1.3  WHEN (date_indexed > NOW()-INTERVAL '31557600  SECOND')  THEN 1.15 WHEN (date_indexed > NOW()-INTERVAL '63115200  SECOND')  THEN 1.13 ELSE 1 END)::float as cv_search_ranker,\
				(case when premium_account > 0 then 1.35 else 1 end) * (case when extract('epoch' FROM mobile_confirm_date)::bigint > 0 then 1.15 else 1 end) * (case when email_bouncing_p = true then 0.01 else 1 end) * (CASE WHEN (completness_score > 99) THEN 1.5 WHEN (completness_score > 80) THEN (1+completness_score/250)  WHEN (completness_score > 50) THEN (1+completness_score/400) WHEN (completness_score > 25) THEN 0.9 ELSE 0.5 END) * (CASE WHEN (last_login_date > NOW()-INTERVAL '2629800 SECOND')    THEN 1.3 WHEN (last_login_date > NOW()-INTERVAL '7889400 SECOND')    THEN 1.23 WHEN (last_login_date > NOW()-INTERVAL '15778800 SECOND')   THEN 1.17  WHEN (last_login_date > NOW()-INTERVAL '31557600  SECOND')  THEN 1.12 WHEN (last_login_date > NOW()-INTERVAL '63115200  SECOND')  THEN 1.06 ELSE 1 END) * (CASE WHEN (cv_builder_date_modified > NOW()-INTERVAL '2629800 SECOND')    THEN 1.5 WHEN (cv_builder_date_modified > NOW()-INTERVAL '7889400 SECOND')    THEN 1.4 WHEN (cv_builder_date_modified > NOW()-INTERVAL '15778800 SECOND')   THEN 1.3  WHEN (cv_builder_date_modified > NOW()-INTERVAL '31557600  SECOND')  THEN 1.15 WHEN (cv_builder_date_modified > NOW()-INTERVAL '63115200  SECOND')  THEN 1.13 ELSE 1 END)::float as byt_cv_search_ranker,\
				(CASE WHEN (is_primary = TRUE and profile_id > 0) THEN 1 ELSE 0 END) as user_public_profile_enable,\
				(case when email_bouncing_p = true then 0.01 else 1 end) * (1000*(1+0.2*(CASE WHEN has_photo = TRUE THEN 1 ELSE 0 END))) as people_ranker,\
				(CASE WHEN (sections_fields IS NULL OR sections_fields = ' ')   THEN 'tar per con edu exp'  ELSE sections_fields  END) as sections_fields,\
				extract('epoch' FROM cv_completion_date)::bigint AS cv_completion_date,\
				extract('epoch' FROM last_login_date)::bigint AS last_login_date,\
				(CASE WHEN (user_state IS NULL OR user_state = ' ')  THEN 'mini' ELSE user_state END) as user_state,\
				email_enc,\
				email_domain,\
				dependents,\
				cell_phone_enc,\
				home_phone_enc,\
				work_phone_enc,\
				cell_phone,\
				bounce_count,\
				last_salary_value,\
				receive_emails_list,\
				last_exp_emp as last_exp_emp_full,\
				last_exp_emp_crc32 as last_exp_emp_crc32_full,\
				user_lang_preference,\
				premium_account,\
				user_tests,\
				user_courses,\
				hobbies,\
				hopping,\
				gaps,\
				res_visa_status,\
				extract('epoch' FROM mobile_confirm_date)::bigint AS mobile_confirm_date,\
				viewer_ids,\
				extract('epoch' FROM first_bch_deg_date)::bigint AS first_bch_deg_date,\
				gsm,\
				last_gsc_id,\
				previous_gsc_id,\
				all_gsc_ids,\
				all_gsc_ids_txt,\
				last_gst_id,\
				previous_gst_id,\
				all_gst_ids,\
				other_gst_id,\
				target_gst_ids,\
				all_gst_ids_text,\
				highest_degree,\
				disabilities,\
				months_of_exp_after_grad,\
				cv_custom_json,\
				sessions_count,\
				photo_url,\
				unemployed,\
				orginal_nationality,\
				extract('epoch' FROM cv_builder_date_modified)::bigint AS cv_builder_date_modified,\
				trainings,\
				certificates,\
				training_institutes,\
				last_gsi_id,\
				previous_gsi_id,\
				all_gsi_ids,\
				target_jb_roles,\
				all_gsi_ids_txt,\
				3 as index_weight,\
				'ANYKEYWORD' as any_keyword,\
				last_exp_comp_size,\
                		extract('epoch' FROM updated_contact_date)::bigint AS updated_contact_date,\
				extract('epoch' FROM last_exp_start_date)::bigint AS last_exp_start_date\
			FROM \
				cv_index_10 \
			WHERE \
				insertion_date <  (SELECT lst_main_index_start_time FROM spx_delta_separator WHERE index_id = 110 LIMIT 1) \
				 AND cv_id>=$start AND cv_id<=$end

	sql_range_step	=25000
	sql_attr_uint		=cv_id
	sql_field_string		=last_exp_emp
	sql_field_string		=previous_exp_emp
	sql_field_string		=last_exp_title
	sql_attr_uint		=last_exp_title_crc32
	sql_field_string		=previous_exp_title
	sql_attr_uint		=previous_exp_title_crc32
	sql_attr_uint		=last_exp_emp_crc32
	sql_attr_uint		=previous_exp_emp_crc32
	sql_attr_uint		=total_months_of_experience
	sql_attr_multi		=bigint industeries_roles_years from field industeries_roles_years
	sql_attr_multi		=bigint present_industeries_roles_years from field present_industeries_roles_years
	sql_attr_uint		=last_jb_industry
	sql_attr_uint		=last_jb_role
	sql_attr_multi		=bigint exp_roles_list from field exp_roles_list
	sql_attr_multi		=bigint exp_industries_list from field exp_industries_list
	sql_attr_multi		=uint experiences_iso_encoded_list from field experiences_iso_encoded_list
	sql_attr_uint		=last_experience_iso_encoded
	sql_field_string		=target_jb_title
	sql_attr_multi		=uint emplyment_type_list from field emplyment_type_list
	sql_attr_multi		=uint emplyment_status_list from field emplyment_status_list
	sql_attr_multi		=uint target_job_locations_list from field target_job_locations_list
	sql_attr_multi		=uint target_job_industries_list from field target_job_industries_list
	sql_attr_uint		=notice_period
	sql_attr_uint		=trgt_job_salary
	sql_attr_uint		=salary_range_cluster_list
	sql_attr_uint		=career_level
        sql_attr_uint   	=career_level_sorted
        sql_attr_uint	        =months_of_experience_sorted
	sql_attr_uint		=residence_location_iso_encoded
	sql_attr_uint		=residence_country_iso_encoded
	sql_attr_uint		=gender
	sql_attr_uint		=date_of_birth
	sql_attr_uint		=marital_status
	sql_attr_uint		=graduation_date
	sql_attr_uint		=visa_status
	sql_attr_multi		=uint car_license_countries_list_encoded from field car_license_countries_list_encoded
	sql_attr_multi		=uint edu_degree_list from field edu_degree_list
	sql_attr_multi		=uint edu_iso_encoded_list from field edu_iso_encoded_list
	sql_attr_multi		=uint edu_majors_crc32_list from field edu_majors_crc32_list
	sql_attr_multi		=uint edu_institute_crc32_list from field edu_institute_crc32_list
	sql_attr_uint		=last_edu_degree
	sql_attr_multi		=uint language_skills_levels_encoded_list from field language_skills_levels_encoded_list
	sql_attr_uint		=cv_stage
	sql_attr_uint		=locale
	sql_attr_uint		=bcc_id
	sql_attr_uint		=user_id
	sql_attr_uint		=gpa
	sql_attr_uint		=gpa_cluster
	sql_attr_timestamp		=date_indexed
	sql_attr_uint		=parent_bcc_id
	sql_attr_bool		=has_attachment
	sql_attr_bool		=has_photo
	sql_attr_bool		=has_video
	sql_attr_bool		=has_recommendation
	sql_field_string		=first_name
	sql_field_string		=middle_name
	sql_field_string		=last_name
	sql_field_string		=profile_name
	sql_attr_uint		=profile_id
	sql_attr_uint		=referrer_source_id
	sql_attr_multi		=uint specilaities_list from field specilaities_list
	sql_attr_multi		=bigint specilaities_points from field specilaities_points
	sql_attr_uint		=special_needs
	sql_attr_bool		=is_primary
	sql_attr_bool		=email_bouncing_p
	sql_attr_timestamp		=creation_date
	sql_attr_bool		=is_confidential
	sql_field_string		=last_name_ar
	sql_field_string		=last_name_la
	sql_field_string		=first_name_ar
	sql_field_string		=first_name_la
	sql_attr_uint		=primary_nationality
	sql_attr_uint		=primary_nationality_cleaned
	sql_attr_multi          =uint nationalities_list from field nationalities_list
	sql_attr_uint		=registration_iso
	sql_attr_uint		=user_type
	sql_attr_uint		=cv_creation_method
	sql_attr_uint		=affliate_program_id
	sql_attr_uint		=cv_no_search_hits
	sql_attr_uint		=cv_no_submits_to
	sql_attr_uint		=cv_no_reviews
	sql_attr_uint		=completness_score
	sql_attr_timestamp		=registration_date
	sql_attr_multi		=bigint bcc_json_fields from field bcc_json_fields
	sql_attr_uint		=yrs_exp_cluster_id
	sql_attr_uint		=yrs_exp_after_grad_cluster_id
	sql_attr_uint		=completness_scores
	sql_attr_float		=cv_search_ranker
	sql_attr_float		=byt_cv_search_ranker
	sql_attr_uint		=user_public_profile_enable
	sql_attr_uint		=people_ranker
	sql_attr_timestamp		=cv_completion_date
	sql_attr_timestamp		=last_login_date
	sql_field_string		=user_state
	sql_field_string		=email_enc
	sql_field_string		=email_domain
	sql_attr_uint		=dependents
	sql_field_string		=cell_phone_enc
	sql_field_string		=home_phone_enc
	sql_field_string		=work_phone_enc
	sql_field_string		=cell_phone
	sql_attr_uint		=bounce_count
	sql_attr_uint		=last_salary_value
	sql_field_string		=last_exp_emp_full
	sql_attr_uint		=last_exp_emp_crc32_full
	sql_attr_uint		=user_lang_preference
	sql_attr_uint		=premium_account
	sql_attr_multi		=uint user_tests from field user_tests
	sql_attr_multi		=uint user_courses from field user_courses
	sql_attr_uint		=hopping
	sql_attr_uint		=gaps
	sql_attr_uint		=res_visa_status
	sql_attr_timestamp		=mobile_confirm_date
	sql_attr_timestamp		=first_bch_deg_date
	sql_attr_multi		=uint gsm from field gsm
	sql_attr_uint		=last_gsc_id
	sql_attr_uint		=previous_gsc_id
	sql_attr_multi		=uint all_gsc_ids from field all_gsc_ids
	sql_attr_multi		=uint last_gst_id from field last_gst_id
	sql_attr_multi		=uint previous_gst_id from field previous_gst_id
	sql_attr_multi		=uint all_gst_ids from field all_gst_ids
	sql_attr_multi		=uint other_gst_id from field other_gst_id
	sql_attr_multi		=uint target_gst_ids from field target_gst_ids
	sql_attr_uint		=highest_degree
	sql_attr_multi		=uint disabilities from field disabilities
	sql_attr_uint		=months_of_exp_after_grad
	sql_attr_json		=cv_custom_json
	sql_attr_uint		=sessions_count
	sql_field_string		=photo_url
	sql_attr_bool		=unemployed
	sql_attr_uint		=orginal_nationality
	sql_attr_timestamp		=cv_builder_date_modified
	sql_attr_uint		=last_gsi_id
	sql_attr_uint		=previous_gsi_id
	sql_attr_multi		=uint all_gsi_ids from field all_gsi_ids
	sql_attr_multi		=uint target_jb_roles from field target_jb_roles
    	sql_attr_uint       =last_exp_comp_size
   	sql_attr_timestamp  =updated_contact_date
	sql_attr_timestamp  =last_exp_start_date
	sql_attr_uint		=index_weight
	sql_attr_multi		=uint folder_id from ranged-query;  SELECT cv_id, folder_id FROM byt_employer_basket_10 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_employer_basket_10 WHERE cv_id between 63000000 and 63999999
	sql_attr_multi		=uint tag_id from ranged-query;  SELECT cv_id, tag_id FROM byt_item_tags_10 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_item_tags_10 WHERE cv_id between 63000000 and 63999999
	sql_attr_multi		=uint note_group_id from ranged-query;  SELECT cv_id, group_id FROM byt_comments_10 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_comments_10 WHERE cv_id between 63000000 and 63999999
}

		index cvMainIndex_10_3
		{
			type			= plain
			source 			= cvMainIndex_10_3_src
			path 			= /home/sphinx/sphinx/var/data/cvMainIndex_10_3
			morphology   = none
			dict=keywords
			index_sp  = 1
			index_zones		= b_*, is_agency, special_needs, referrer_source
			stopwords		= en,ar
			exceptions		= /home/sphinx/sphinx/var/data/exceptions.txt
			min_word_len		= 1
			charset_table		= non_cjk
			ngram_len		= 1
			#ngram_chars		=  non_cjk
			inplace_enable		= 0
			html_strip				= 1
			preopen				= 1
		}		

	source cvMainIndexStemmed_10_3_src {
	type		=pgsql
	sql_host	=host
	sql_user	=user
	sql_pass	=pass
	sql_db		=database
	sql_port	=9988

	sql_query_pre	=SET client_encoding TO 'UTF8'
	sql_query_pre	= SET NAMES 'UTF8'
	sql_ranged_throttle	=1000
	sql_query_range	= SELECT MIN(cv_id),MAX(cv_id) FROM cv_index_10 WHERE cv_id between 63000000 and 63999999
	sql_query	=SELECT \
				cv_id as id,\
				cv_id,\
				experiences_titles,\
				experiences_description,\
				experiences_employers,\
				last_exp_desc,\
				(CASE WHEN is_confidential = 'f' THEN last_exp_emp ELSE NULL END) as last_exp_emp,\
				(CASE WHEN is_confidential = 'f' THEN previous_exp_emp ELSE NULL END) as previous_exp_emp,\
				last_exp_title,\
				last_exp_title_crc32,\
				previous_exp_title,\
				previous_exp_title_crc32,\
				(CASE WHEN is_confidential = 'f' THEN last_exp_emp_crc32 ELSE 0 END) as last_exp_emp_crc32,\
				(CASE WHEN is_confidential = 'f' THEN previous_exp_emp_crc32 ELSE 0 END) as previous_exp_emp_crc32,\
				(CASE WHEN months_of_experience != 999999 then months_of_experience  WHEN market_entry_date != 999999 then (to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date  ELSE 999999 END ) as total_months_of_experience,\
				industeries_roles_years,\
				present_industeries_roles_years,\
				last_jb_industry,\
				last_jb_role,\
				exp_roles_list,\
				exp_industries_list,\
				experiences_iso_encoded_list,\
				last_experience_iso_encoded,\
				target_jb_title,\
				emplyment_type_list,\
				emplyment_status_list,\
				target_job_locations_list,\
				target_job_industries_list,\
				notice_period,\
				trgt_job_salary,\
				(CASE WHEN trgt_job_salary < 0 then 0  WHEN trgt_job_salary = 0 then 1  WHEN trgt_job_salary < 500 THEN 2  WHEN trgt_job_salary <= 1000 THEN 3  WHEN trgt_job_salary <= 1500 THEN 4  WHEN trgt_job_salary <= 2000 THEN 5  WHEN trgt_job_salary <= 3000 THEN 6  WHEN trgt_job_salary <= 5000 THEN 7  WHEN trgt_job_salary <= 8000 THEN 8  WHEN trgt_job_salary <= 12000 THEN 9  WHEN trgt_job_salary <= 16000 THEN 10  WHEN trgt_job_salary <= 20000 THEN 11  WHEN trgt_job_salary <= 30000 THEN 12  WHEN trgt_job_salary <= 50000 THEN 13  ELSE 14  END) as salary_range_cluster_list,\
				career_level,\
				(CASE WHEN career_level = 6 THEN 2001 WHEN career_level < 6 THEN (career_level+1000)*2 ELSE career_level END) as career_level_sorted,\
				(CASE WHEN months_of_experience != 999999 then months_of_experience  WHEN market_entry_date != 999999 then (to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date  ELSE 0 END ) as months_of_experience_sorted,\
				objective_txt,\
				residence_location_iso_encoded,\
				LEFT(residence_location_iso_encoded::text,4)::int as residence_country_iso_encoded,\
				gender,\
				date_of_birth,\
				marital_status,\
				graduation_date,\
				visa_status,\
				car_license_countries_list_encoded,\
				edu_degree_list,\
				edu_iso_encoded_list,\
				edu_txt,\
				edu_major,\
				edu_majors_crc32_list,\
				lst_edu_major,\
				edu_institute,\
				edu_institute_crc32_list,\
				lst_edu_institute,\
				last_edu_degree,\
				skills_txt,\
				language_skills_levels_encoded_list,\
				cv_stage,\
				locale,\
				bcc_id,\
				generic_txt,\
				user_id,\
				gpa,\
				(CASE when gpa >= 99999 then 5 when gpa >= 8000 then 4 when gpa >= 6000 then 3 when gpa >= 4000 then 2 when gpa >= 2000 then 1 when gpa >= 0 then 0 end) as gpa_cluster,\
				extract('epoch' FROM date_indexed)::bigint AS date_indexed,\
				parent_bcc_id,\
				has_attachment,\
				has_photo,\
				has_video,\
				has_recommendation,\
				first_name,\
				middle_name,\
				last_name,\
				profile_name,\
				profile_id,\
				(case when referrer_source_id is null then 99999 else referrer_source_id end ) as referrer_source_id,\
				specilaities_list,\
				specilaities_text,\
				specilaities_points,\
				user_generic_field1,\
				 COALESCE(special_needs,99999) AS special_needs,\
				is_primary,\
				email_bouncing_p,\
				extract('epoch' FROM creation_date)::bigint AS creation_date,\
				is_confidential,\
				last_name_ar,\
				last_name_la,\
				first_name_ar,\
				first_name_la,\
				first_name_la || ' ' || last_name_la as full_name_la,\
				first_name_ar || ' ' || last_name_ar as full_name_ar,\
				primary_nationality,\
				(case when LEFT(residence_location_iso_encoded::text,4)::int = primary_nationality  and visa_status not in (1,7) then 0  when  LEFT(residence_location_iso_encoded::text,4)::int in (5560,6257,6254,4850,5857) and primary_nationality in (4751,6547,5769,6347,4854,6159)  then 0 else  primary_nationality end) as primary_nationality_cleaned,\
				nationalities_list,\
				specilaities_platinum,\
				specilaities_gold,\
				specilaities_silver,\
				specilaities_bronze,\
				bcc_text_fields,\
				has_flag,\
				registration_iso,\
				user_type,\
				cv_creation_method,\
				affliate_program_id,\
				cv_no_search_hits,\
				cv_no_submits_to,\
				cv_no_reviews,\
				completness_score,\
				extract('epoch' FROM registration_date)::bigint AS registration_date,\
				bcc_json_fields,\
				referrer_source,\
				user_generic_field2,\
				user_generic_field3,\
				user_generic_field4,\
				(case (CASE WHEN months_of_experience != 999999 then CEIL(months_of_experience/11.999)  WHEN market_entry_date != 999999 then ceil(((to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date)/11.999)  ELSE 999999 END )::bigint when 0 then 1 when 1 then 1 when 2 then 2 when 3 then 3 when 4 then 3 when 5 then 3 when 6 then 4 when 7 then 4 when 8 then 4 when 9 then 4 when 10 then 4 when 999999 then 6 else 5 end) as yrs_exp_cluster_id,\
				(case (CASE WHEN months_of_exp_after_grad != 999999 then CEIL(months_of_exp_after_grad/11.999) ELSE 999999 END )::bigint when 0 then 1 when 1 then 1 when 2 then 2 when 3 then 3 when 4 then 3 when 5 then 3 when 6 then 4 when 7 then 4 when 8 then 4 when 9 then 4 when 10 then 4 when 999999 then 6 else 5 end) as yrs_exp_after_grad_cluster_id,\
				(CASE WHEN completness_score < 20 THEN 1 WHEN completness_score < 40 THEN 2 WHEN completness_score < 60 THEN 3 WHEN completness_score < 80 THEN 4 WHEN completness_score < 500 THEN 5 END ) as completness_scores,\
				(case when premium_account > 0 then 1.35 else 1 end) * (case when extract('epoch' FROM mobile_confirm_date)::bigint > 0 then 1.15 else 1 end) * (case when email_bouncing_p = true then 0.01 else 1 end) * (CASE WHEN (completness_score > 99) THEN 1.5 WHEN (completness_score > 80) THEN (1+completness_score/250)  WHEN (completness_score > 50) THEN (1+completness_score/400) WHEN (completness_score > 25) THEN 0.9 ELSE 0.5 END) * (CASE WHEN (last_login_date > NOW()-INTERVAL '2629800 SECOND')    THEN 1.3 WHEN (last_login_date > NOW()-INTERVAL '7889400 SECOND')    THEN 1.23 WHEN (last_login_date > NOW()-INTERVAL '15778800 SECOND')   THEN 1.17  WHEN (last_login_date > NOW()-INTERVAL '31557600  SECOND')  THEN 1.12 WHEN (last_login_date > NOW()-INTERVAL '63115200  SECOND')  THEN 1.06 ELSE 1 END) * (CASE WHEN (date_indexed > NOW()-INTERVAL '2629800 SECOND')    THEN 1.5 WHEN (date_indexed > NOW()-INTERVAL '7889400 SECOND')    THEN 1.4 WHEN (date_indexed > NOW()-INTERVAL '15778800 SECOND')   THEN 1.3  WHEN (date_indexed > NOW()-INTERVAL '31557600  SECOND')  THEN 1.15 WHEN (date_indexed > NOW()-INTERVAL '63115200  SECOND')  THEN 1.13 ELSE 1 END)::float as cv_search_ranker,\
				(case when premium_account > 0 then 1.35 else 1 end) * (case when extract('epoch' FROM mobile_confirm_date)::bigint > 0 then 1.15 else 1 end) * (case when email_bouncing_p = true then 0.01 else 1 end) * (CASE WHEN (completness_score > 99) THEN 1.5 WHEN (completness_score > 80) THEN (1+completness_score/250)  WHEN (completness_score > 50) THEN (1+completness_score/400) WHEN (completness_score > 25) THEN 0.9 ELSE 0.5 END) * (CASE WHEN (last_login_date > NOW()-INTERVAL '2629800 SECOND')    THEN 1.3 WHEN (last_login_date > NOW()-INTERVAL '7889400 SECOND')    THEN 1.23 WHEN (last_login_date > NOW()-INTERVAL '15778800 SECOND')   THEN 1.17  WHEN (last_login_date > NOW()-INTERVAL '31557600  SECOND')  THEN 1.12 WHEN (last_login_date > NOW()-INTERVAL '63115200  SECOND')  THEN 1.06 ELSE 1 END) * (CASE WHEN (cv_builder_date_modified > NOW()-INTERVAL '2629800 SECOND')    THEN 1.5 WHEN (cv_builder_date_modified > NOW()-INTERVAL '7889400 SECOND')    THEN 1.4 WHEN (cv_builder_date_modified > NOW()-INTERVAL '15778800 SECOND')   THEN 1.3  WHEN (cv_builder_date_modified > NOW()-INTERVAL '31557600  SECOND')  THEN 1.15 WHEN (cv_builder_date_modified > NOW()-INTERVAL '63115200  SECOND')  THEN 1.13 ELSE 1 END)::float as byt_cv_search_ranker,\
				(CASE WHEN (is_primary = TRUE and profile_id > 0) THEN 1 ELSE 0 END) as user_public_profile_enable,\
				(case when email_bouncing_p = true then 0.01 else 1 end) * (1000*(1+0.2*(CASE WHEN has_photo = TRUE THEN 1 ELSE 0 END))) as people_ranker,\
				(CASE WHEN (sections_fields IS NULL OR sections_fields = ' ')   THEN 'tar per con edu exp'  ELSE sections_fields  END) as sections_fields,\
				extract('epoch' FROM cv_completion_date)::bigint AS cv_completion_date,\
				extract('epoch' FROM last_login_date)::bigint AS last_login_date,\
				(CASE WHEN (user_state IS NULL OR user_state = ' ')  THEN 'mini' ELSE user_state END) as user_state,\
				email_enc,\
				email_domain,\
				dependents,\
				cell_phone_enc,\
				home_phone_enc,\
				work_phone_enc,\
				cell_phone,\
				bounce_count,\
				last_salary_value,\
				receive_emails_list,\
				last_exp_emp as last_exp_emp_full,\
				last_exp_emp_crc32 as last_exp_emp_crc32_full,\
				user_lang_preference,\
				premium_account,\
				user_tests,\
				user_courses,\
				hobbies,\
				hopping,\
				gaps,\
				res_visa_status,\
				extract('epoch' FROM mobile_confirm_date)::bigint AS mobile_confirm_date,\
				viewer_ids,\
				extract('epoch' FROM first_bch_deg_date)::bigint AS first_bch_deg_date,\
				gsm,\
				last_gsc_id,\
				previous_gsc_id,\
				all_gsc_ids,\
				all_gsc_ids_txt,\
				last_gst_id,\
				previous_gst_id,\
				all_gst_ids,\
				other_gst_id,\
				target_gst_ids,\
				all_gst_ids_text,\
				highest_degree,\
				disabilities,\
				months_of_exp_after_grad,\
				cv_custom_json,\
				sessions_count,\
				photo_url,\
				unemployed,\
				orginal_nationality,\
				extract('epoch' FROM cv_builder_date_modified)::bigint AS cv_builder_date_modified,\
				trainings,\
				certificates,\
				training_institutes,\
				last_gsi_id,\
				previous_gsi_id,\
				all_gsi_ids,\
				target_jb_roles,\
				all_gsi_ids_txt,\
				1 as index_weight,\
				'ANYKEYWORD' as any_keyword,\
				last_exp_comp_size,\
                		extract('epoch' FROM updated_contact_date)::bigint AS updated_contact_date,\
				extract('epoch' FROM last_exp_start_date)::bigint AS last_exp_start_date\
			FROM \
				cv_index_10 \
			WHERE \
				insertion_date <  (SELECT lst_main_index_start_time FROM spx_delta_separator WHERE index_id = 110 LIMIT 1) \
				 AND cv_id>=$start AND cv_id<=$end

	sql_range_step	=25000
	sql_attr_uint		=cv_id
	sql_field_string		=last_exp_emp
	sql_field_string		=previous_exp_emp
	sql_field_string		=last_exp_title
	sql_attr_uint		=last_exp_title_crc32
	sql_field_string		=previous_exp_title
	sql_attr_uint		=previous_exp_title_crc32
	sql_attr_uint		=last_exp_emp_crc32
	sql_attr_uint		=previous_exp_emp_crc32
	sql_attr_uint		=total_months_of_experience
	sql_attr_multi		=bigint industeries_roles_years from field industeries_roles_years
	sql_attr_multi		=bigint present_industeries_roles_years from field present_industeries_roles_years
	sql_attr_uint		=last_jb_industry
	sql_attr_uint		=last_jb_role
	sql_attr_multi		=bigint exp_roles_list from field exp_roles_list
	sql_attr_multi		=bigint exp_industries_list from field exp_industries_list
	sql_attr_multi		=uint experiences_iso_encoded_list from field experiences_iso_encoded_list
	sql_attr_uint		=last_experience_iso_encoded
	sql_field_string		=target_jb_title
	sql_attr_multi		=uint emplyment_type_list from field emplyment_type_list
	sql_attr_multi		=uint emplyment_status_list from field emplyment_status_list
	sql_attr_multi		=uint target_job_locations_list from field target_job_locations_list
	sql_attr_multi		=uint target_job_industries_list from field target_job_industries_list
	sql_attr_uint		=notice_period
	sql_attr_uint		=trgt_job_salary
	sql_attr_uint		=salary_range_cluster_list
	sql_attr_uint		=career_level
	sql_attr_uint           =career_level_sorted
	sql_attr_uint           =months_of_experience_sorted
	sql_attr_uint		=residence_location_iso_encoded
	sql_attr_uint		=residence_country_iso_encoded
	sql_attr_uint		=gender
	sql_attr_uint		=date_of_birth
	sql_attr_uint		=marital_status
	sql_attr_uint		=graduation_date
	sql_attr_uint		=visa_status
	sql_attr_multi		=uint car_license_countries_list_encoded from field car_license_countries_list_encoded
	sql_attr_multi		=uint edu_degree_list from field edu_degree_list
	sql_attr_multi		=uint edu_iso_encoded_list from field edu_iso_encoded_list
	sql_attr_multi		=uint edu_majors_crc32_list from field edu_majors_crc32_list
	sql_attr_multi		=uint edu_institute_crc32_list from field edu_institute_crc32_list
	sql_attr_uint		=last_edu_degree
	sql_attr_multi		=uint language_skills_levels_encoded_list from field language_skills_levels_encoded_list
	sql_attr_uint		=cv_stage
	sql_attr_uint		=locale
	sql_attr_uint		=bcc_id
	sql_attr_uint		=user_id
	sql_attr_uint		=gpa
	sql_attr_uint		=gpa_cluster
	sql_attr_timestamp		=date_indexed
	sql_attr_uint		=parent_bcc_id
	sql_attr_bool		=has_attachment
	sql_attr_bool		=has_photo
	sql_attr_bool		=has_video
	sql_attr_bool		=has_recommendation
	sql_field_string		=first_name
	sql_field_string		=middle_name
	sql_field_string		=last_name
	sql_field_string		=profile_name
	sql_attr_uint		=profile_id
	sql_attr_uint		=referrer_source_id
	sql_attr_multi		=uint specilaities_list from field specilaities_list
	sql_attr_multi		=bigint specilaities_points from field specilaities_points
	sql_attr_uint		=special_needs
	sql_attr_bool		=is_primary
	sql_attr_bool		=email_bouncing_p
	sql_attr_timestamp		=creation_date
	sql_attr_bool		=is_confidential
	sql_field_string		=last_name_ar
	sql_field_string		=last_name_la
	sql_field_string		=first_name_ar
	sql_field_string		=first_name_la
	sql_attr_uint		=primary_nationality
	sql_attr_uint		=primary_nationality_cleaned
	sql_attr_multi          =uint nationalities_list from field nationalities_list
	sql_attr_uint		=registration_iso
	sql_attr_uint		=user_type
	sql_attr_uint		=cv_creation_method
	sql_attr_uint		=affliate_program_id
	sql_attr_uint		=cv_no_search_hits
	sql_attr_uint		=cv_no_submits_to
	sql_attr_uint		=cv_no_reviews
	sql_attr_uint		=completness_score
	sql_attr_timestamp		=registration_date
	sql_attr_multi		=bigint bcc_json_fields from field bcc_json_fields
	sql_attr_uint		=yrs_exp_cluster_id
	sql_attr_uint		=yrs_exp_after_grad_cluster_id
	sql_attr_uint		=completness_scores
	sql_attr_float		=cv_search_ranker
	sql_attr_float		=byt_cv_search_ranker
	sql_attr_uint		=user_public_profile_enable
	sql_attr_uint		=people_ranker
	sql_attr_timestamp		=cv_completion_date
	sql_attr_timestamp		=last_login_date
	sql_field_string		=user_state
	sql_field_string		=email_enc
	sql_field_string		=email_domain
	sql_attr_uint		=dependents
	sql_field_string		=cell_phone_enc
	sql_field_string		=home_phone_enc
	sql_field_string		=work_phone_enc
	sql_field_string		=cell_phone
	sql_attr_uint		=bounce_count
	sql_attr_uint		=last_salary_value
	sql_field_string		=last_exp_emp_full
	sql_attr_uint		=last_exp_emp_crc32_full
	sql_attr_uint		=user_lang_preference
	sql_attr_uint		=premium_account
	sql_attr_multi		=uint user_tests from field user_tests
	sql_attr_multi		=uint user_courses from field user_courses
	sql_attr_uint		=hopping
	sql_attr_uint		=gaps
	sql_attr_uint		=res_visa_status
	sql_attr_timestamp		=mobile_confirm_date
	sql_attr_timestamp		=first_bch_deg_date
	sql_attr_multi		=uint gsm from field gsm
	sql_attr_uint		=last_gsc_id
	sql_attr_uint		=previous_gsc_id
	sql_attr_multi		=uint all_gsc_ids from field all_gsc_ids
	sql_attr_multi		=uint last_gst_id from field last_gst_id
	sql_attr_multi		=uint previous_gst_id from field previous_gst_id
	sql_attr_multi		=uint all_gst_ids from field all_gst_ids
	sql_attr_multi		=uint other_gst_id from field other_gst_id
	sql_attr_multi		=uint target_gst_ids from field target_gst_ids
	sql_attr_uint		=highest_degree
	sql_attr_multi		=uint disabilities from field disabilities
	sql_attr_uint		=months_of_exp_after_grad
	sql_attr_json		=cv_custom_json
	sql_attr_uint		=sessions_count
	sql_field_string		=photo_url
	sql_attr_bool		=unemployed
	sql_attr_uint		=orginal_nationality
	sql_attr_timestamp		=cv_builder_date_modified
	sql_attr_uint		=last_gsi_id
	sql_attr_uint		=previous_gsi_id
	sql_attr_multi		=uint all_gsi_ids from field all_gsi_ids
	sql_attr_multi		=uint target_jb_roles from field target_jb_roles
	sql_attr_uint       =last_exp_comp_size
    	sql_attr_timestamp  =updated_contact_date
	sql_attr_timestamp  =last_exp_start_date
	sql_attr_uint		=index_weight
	sql_attr_multi		=uint folder_id from ranged-query;  SELECT cv_id, folder_id FROM byt_employer_basket_10 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_employer_basket_10 WHERE cv_id between 63000000 and 63999999
	sql_attr_multi		=uint tag_id from ranged-query;  SELECT cv_id, tag_id FROM byt_item_tags_10 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_item_tags_10 WHERE cv_id between 63000000 and 63999999
	sql_attr_multi		=uint note_group_id from ranged-query;  SELECT cv_id, group_id FROM byt_comments_10 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_comments_10 WHERE cv_id between 63000000 and 63999999
}

		index cvMainIndexStemmed_10_3
		{
			type			= plain
			source 			= cvMainIndexStemmed_10_3_src
			path 			= /home/sphinx/sphinx/var/data/cvMainIndexStemmed_10_3
			morphology   = stem_en,stem_ar
			wordforms  = /home/sphinx/sphinx/var/data/wordforms.txt
			dict=keywords
			index_sp  = 1
			index_zones		= b_*, is_agency, special_needs, referrer_source
			stopwords		= en,ar
			exceptions		= /home/sphinx/sphinx/var/data/exceptions.txt
			min_word_len		= 1
			charset_table		= non_cjk
			index_exact_words	= 1
			
			ngram_len		= 1
			#ngram_chars		=  non_cjk
			html_strip				= 1
			preopen				= 1
		}		
		


source cvMainIndex_10_4_src {
	type		=pgsql
	sql_host	=host
	sql_user	=user
	sql_pass	=pass
	sql_db		=database
	sql_port	=9988

	sql_query_pre	=SET client_encoding TO 'UTF8'
	sql_query_pre	= SET NAMES 'UTF8'
	sql_ranged_throttle	=1000
	sql_query_range	= SELECT MIN(cv_id),MAX(cv_id) FROM cv_index_10 WHERE cv_id between 64000000 and 64999999
	sql_query	=SELECT \
				cv_id as id,\
				cv_id,\
				experiences_titles,\
				experiences_description,\
				experiences_employers,\
				last_exp_desc,\
				(CASE WHEN is_confidential = 'f' THEN last_exp_emp ELSE NULL END) as last_exp_emp,\
				(CASE WHEN is_confidential = 'f' THEN previous_exp_emp ELSE NULL END) as previous_exp_emp,\
				last_exp_title,\
				last_exp_title_crc32,\
				previous_exp_title,\
				previous_exp_title_crc32,\
				(CASE WHEN is_confidential = 'f' THEN last_exp_emp_crc32 ELSE 0 END) as last_exp_emp_crc32,\
				(CASE WHEN is_confidential = 'f' THEN previous_exp_emp_crc32 ELSE 0 END) as previous_exp_emp_crc32,\
				(CASE WHEN months_of_experience != 999999 then months_of_experience  WHEN market_entry_date != 999999 then (to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date  ELSE 999999 END ) as total_months_of_experience,\
				industeries_roles_years,\
				present_industeries_roles_years,\
				last_jb_industry,\
				last_jb_role,\
				exp_roles_list,\
				exp_industries_list,\
				experiences_iso_encoded_list,\
				last_experience_iso_encoded,\
				target_jb_title,\
				emplyment_type_list,\
				emplyment_status_list,\
				target_job_locations_list,\
				target_job_industries_list,\
				notice_period,\
				trgt_job_salary,\
				(CASE WHEN trgt_job_salary < 0 then 0  WHEN trgt_job_salary = 0 then 1  WHEN trgt_job_salary < 500 THEN 2  WHEN trgt_job_salary <= 1000 THEN 3  WHEN trgt_job_salary <= 1500 THEN 4  WHEN trgt_job_salary <= 2000 THEN 5  WHEN trgt_job_salary <= 3000 THEN 6  WHEN trgt_job_salary <= 5000 THEN 7  WHEN trgt_job_salary <= 8000 THEN 8  WHEN trgt_job_salary <= 12000 THEN 9  WHEN trgt_job_salary <= 16000 THEN 10  WHEN trgt_job_salary <= 20000 THEN 11  WHEN trgt_job_salary <= 30000 THEN 12  WHEN trgt_job_salary <= 50000 THEN 13  ELSE 14  END) as salary_range_cluster_list,\
				career_level,\
				(CASE WHEN career_level = 6 THEN 2001 WHEN career_level < 6 THEN (career_level+1000)*2 ELSE career_level END) as career_level_sorted,\
				(CASE WHEN months_of_experience != 999999 then months_of_experience  WHEN market_entry_date != 999999 then (to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date  ELSE 0 END ) as months_of_experience_sorted,\
				objective_txt,\
				residence_location_iso_encoded,\
				LEFT(residence_location_iso_encoded::text,4)::int as residence_country_iso_encoded,\
				gender,\
				date_of_birth,\
				marital_status,\
				graduation_date,\
				visa_status,\
				car_license_countries_list_encoded,\
				edu_degree_list,\
				edu_iso_encoded_list,\
				edu_txt,\
				edu_major,\
				edu_majors_crc32_list,\
				lst_edu_major,\
				edu_institute,\
				edu_institute_crc32_list,\
				lst_edu_institute,\
				last_edu_degree,\
				skills_txt,\
				language_skills_levels_encoded_list,\
				cv_stage,\
				locale,\
				bcc_id,\
				generic_txt,\
				user_id,\
				gpa,\
				(CASE when gpa >= 99999 then 5 when gpa >= 8000 then 4 when gpa >= 6000 then 3 when gpa >= 4000 then 2 when gpa >= 2000 then 1 when gpa >= 0 then 0 end) as gpa_cluster,\
				extract('epoch' FROM date_indexed)::bigint AS date_indexed,\
				parent_bcc_id,\
				has_attachment,\
				has_photo,\
				has_video,\
				has_recommendation,\
				first_name,\
				middle_name,\
				last_name,\
				profile_name,\
				profile_id,\
				(case when referrer_source_id is null then 99999 else referrer_source_id end ) as referrer_source_id,\
				specilaities_list,\
				specilaities_text,\
				specilaities_points,\
				user_generic_field1,\
				 COALESCE(special_needs,99999) AS special_needs,\
				is_primary,\
				email_bouncing_p,\
				extract('epoch' FROM creation_date)::bigint AS creation_date,\
				is_confidential,\
				last_name_ar,\
				last_name_la,\
				first_name_ar,\
				first_name_la,\
				first_name_la || ' ' || last_name_la as full_name_la,\
				first_name_ar || ' ' || last_name_ar as full_name_ar,\
				primary_nationality,\
				(case when LEFT(residence_location_iso_encoded::text,4)::int = primary_nationality  and visa_status not in (1,7) then 0  when  LEFT(residence_location_iso_encoded::text,4)::int in (5560,6257,6254,4850,5857) and primary_nationality in (4751,6547,5769,6347,4854,6159)  then 0 else  primary_nationality end) as primary_nationality_cleaned,\
				nationalities_list,\
				specilaities_platinum,\
				specilaities_gold,\
				specilaities_silver,\
				specilaities_bronze,\
				bcc_text_fields,\
				has_flag,\
				registration_iso,\
				user_type,\
				cv_creation_method,\
				affliate_program_id,\
				cv_no_search_hits,\
				cv_no_submits_to,\
				cv_no_reviews,\
				completness_score,\
				extract('epoch' FROM registration_date)::bigint AS registration_date,\
				bcc_json_fields,\
				referrer_source,\
				user_generic_field2,\
				user_generic_field3,\
				user_generic_field4,\
				(case (CASE WHEN months_of_experience != 999999 then CEIL(months_of_experience/11.999)  WHEN market_entry_date != 999999 then ceil(((to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date)/11.999)  ELSE 999999 END )::bigint when 0 then 1 when 1 then 1 when 2 then 2 when 3 then 3 when 4 then 3 when 5 then 3 when 6 then 4 when 7 then 4 when 8 then 4 when 9 then 4 when 10 then 4 when 999999 then 6 else 5 end) as yrs_exp_cluster_id,\
				(case (CASE WHEN months_of_exp_after_grad != 999999 then CEIL(months_of_exp_after_grad/11.999) ELSE 999999 END )::bigint when 0 then 1 when 1 then 1 when 2 then 2 when 3 then 3 when 4 then 3 when 5 then 3 when 6 then 4 when 7 then 4 when 8 then 4 when 9 then 4 when 10 then 4 when 999999 then 6 else 5 end) as yrs_exp_after_grad_cluster_id,\
				(CASE WHEN completness_score < 20 THEN 1 WHEN completness_score < 40 THEN 2 WHEN completness_score < 60 THEN 3 WHEN completness_score < 80 THEN 4 WHEN completness_score < 500 THEN 5 END ) as completness_scores,\
				(case when premium_account > 0 then 1.35 else 1 end) * (case when extract('epoch' FROM mobile_confirm_date)::bigint > 0 then 1.15 else 1 end) * (case when email_bouncing_p = true then 0.01 else 1 end) * (CASE WHEN (completness_score > 99) THEN 1.5 WHEN (completness_score > 80) THEN (1+completness_score/250)  WHEN (completness_score > 50) THEN (1+completness_score/400) WHEN (completness_score > 25) THEN 0.9 ELSE 0.5 END) * (CASE WHEN (last_login_date > NOW()-INTERVAL '2629800 SECOND')    THEN 1.3 WHEN (last_login_date > NOW()-INTERVAL '7889400 SECOND')    THEN 1.23 WHEN (last_login_date > NOW()-INTERVAL '15778800 SECOND')   THEN 1.17  WHEN (last_login_date > NOW()-INTERVAL '31557600  SECOND')  THEN 1.12 WHEN (last_login_date > NOW()-INTERVAL '63115200  SECOND')  THEN 1.06 ELSE 1 END) * (CASE WHEN (date_indexed > NOW()-INTERVAL '2629800 SECOND')    THEN 1.5 WHEN (date_indexed > NOW()-INTERVAL '7889400 SECOND')    THEN 1.4 WHEN (date_indexed > NOW()-INTERVAL '15778800 SECOND')   THEN 1.3  WHEN (date_indexed > NOW()-INTERVAL '31557600  SECOND')  THEN 1.15 WHEN (date_indexed > NOW()-INTERVAL '63115200  SECOND')  THEN 1.13 ELSE 1 END)::float as cv_search_ranker,\
				(case when premium_account > 0 then 1.35 else 1 end) * (case when extract('epoch' FROM mobile_confirm_date)::bigint > 0 then 1.15 else 1 end) * (case when email_bouncing_p = true then 0.01 else 1 end) * (CASE WHEN (completness_score > 99) THEN 1.5 WHEN (completness_score > 80) THEN (1+completness_score/250)  WHEN (completness_score > 50) THEN (1+completness_score/400) WHEN (completness_score > 25) THEN 0.9 ELSE 0.5 END) * (CASE WHEN (last_login_date > NOW()-INTERVAL '2629800 SECOND')    THEN 1.3 WHEN (last_login_date > NOW()-INTERVAL '7889400 SECOND')    THEN 1.23 WHEN (last_login_date > NOW()-INTERVAL '15778800 SECOND')   THEN 1.17  WHEN (last_login_date > NOW()-INTERVAL '31557600  SECOND')  THEN 1.12 WHEN (last_login_date > NOW()-INTERVAL '63115200  SECOND')  THEN 1.06 ELSE 1 END) * (CASE WHEN (cv_builder_date_modified > NOW()-INTERVAL '2629800 SECOND')    THEN 1.5 WHEN (cv_builder_date_modified > NOW()-INTERVAL '7889400 SECOND')    THEN 1.4 WHEN (cv_builder_date_modified > NOW()-INTERVAL '15778800 SECOND')   THEN 1.3  WHEN (cv_builder_date_modified > NOW()-INTERVAL '31557600  SECOND')  THEN 1.15 WHEN (cv_builder_date_modified > NOW()-INTERVAL '63115200  SECOND')  THEN 1.13 ELSE 1 END)::float as byt_cv_search_ranker,\
				(CASE WHEN (is_primary = TRUE and profile_id > 0) THEN 1 ELSE 0 END) as user_public_profile_enable,\
				(case when email_bouncing_p = true then 0.01 else 1 end) * (1000*(1+0.2*(CASE WHEN has_photo = TRUE THEN 1 ELSE 0 END))) as people_ranker,\
				(CASE WHEN (sections_fields IS NULL OR sections_fields = ' ')   THEN 'tar per con edu exp'  ELSE sections_fields  END) as sections_fields,\
				extract('epoch' FROM cv_completion_date)::bigint AS cv_completion_date,\
				extract('epoch' FROM last_login_date)::bigint AS last_login_date,\
				(CASE WHEN (user_state IS NULL OR user_state = ' ')  THEN 'mini' ELSE user_state END) as user_state,\
				email_enc,\
				email_domain,\
				dependents,\
				cell_phone_enc,\
				home_phone_enc,\
				work_phone_enc,\
				cell_phone,\
				bounce_count,\
				last_salary_value,\
				receive_emails_list,\
				last_exp_emp as last_exp_emp_full,\
				last_exp_emp_crc32 as last_exp_emp_crc32_full,\
				user_lang_preference,\
				premium_account,\
				user_tests,\
				user_courses,\
				hobbies,\
				hopping,\
				gaps,\
				res_visa_status,\
				extract('epoch' FROM mobile_confirm_date)::bigint AS mobile_confirm_date,\
				viewer_ids,\
				extract('epoch' FROM first_bch_deg_date)::bigint AS first_bch_deg_date,\
				gsm,\
				last_gsc_id,\
				previous_gsc_id,\
				all_gsc_ids,\
				all_gsc_ids_txt,\
				last_gst_id,\
				previous_gst_id,\
				all_gst_ids,\
				other_gst_id,\
				target_gst_ids,\
				all_gst_ids_text,\
				highest_degree,\
				disabilities,\
				months_of_exp_after_grad,\
				cv_custom_json,\
				sessions_count,\
				photo_url,\
				unemployed,\
				orginal_nationality,\
				extract('epoch' FROM cv_builder_date_modified)::bigint AS cv_builder_date_modified,\
				trainings,\
				certificates,\
				training_institutes,\
				last_gsi_id,\
				previous_gsi_id,\
				all_gsi_ids,\
				target_jb_roles,\
				all_gsi_ids_txt,\
				3 as index_weight,\
				'ANYKEYWORD' as any_keyword,\
				last_exp_comp_size,\
                		extract('epoch' FROM updated_contact_date)::bigint AS updated_contact_date,\
				extract('epoch' FROM last_exp_start_date)::bigint AS last_exp_start_date\
			FROM \
				cv_index_10 \
			WHERE \
				insertion_date <  (SELECT lst_main_index_start_time FROM spx_delta_separator WHERE index_id = 110 LIMIT 1) \
				 AND cv_id>=$start AND cv_id<=$end

	sql_range_step	=25000
	sql_attr_uint		=cv_id
	sql_field_string		=last_exp_emp
	sql_field_string		=previous_exp_emp
	sql_field_string		=last_exp_title
	sql_attr_uint		=last_exp_title_crc32
	sql_field_string		=previous_exp_title
	sql_attr_uint		=previous_exp_title_crc32
	sql_attr_uint		=last_exp_emp_crc32
	sql_attr_uint		=previous_exp_emp_crc32
	sql_attr_uint		=total_months_of_experience
	sql_attr_multi		=bigint industeries_roles_years from field industeries_roles_years
	sql_attr_multi		=bigint present_industeries_roles_years from field present_industeries_roles_years
	sql_attr_uint		=last_jb_industry
	sql_attr_uint		=last_jb_role
	sql_attr_multi		=bigint exp_roles_list from field exp_roles_list
	sql_attr_multi		=bigint exp_industries_list from field exp_industries_list
	sql_attr_multi		=uint experiences_iso_encoded_list from field experiences_iso_encoded_list
	sql_attr_uint		=last_experience_iso_encoded
	sql_field_string		=target_jb_title
	sql_attr_multi		=uint emplyment_type_list from field emplyment_type_list
	sql_attr_multi		=uint emplyment_status_list from field emplyment_status_list
	sql_attr_multi		=uint target_job_locations_list from field target_job_locations_list
	sql_attr_multi		=uint target_job_industries_list from field target_job_industries_list
	sql_attr_uint		=notice_period
	sql_attr_uint		=trgt_job_salary
	sql_attr_uint		=salary_range_cluster_list
	sql_attr_uint		=career_level
        sql_attr_uint   	=career_level_sorted
        sql_attr_uint	        =months_of_experience_sorted
	sql_attr_uint		=residence_location_iso_encoded
	sql_attr_uint		=residence_country_iso_encoded
	sql_attr_uint		=gender
	sql_attr_uint		=date_of_birth
	sql_attr_uint		=marital_status
	sql_attr_uint		=graduation_date
	sql_attr_uint		=visa_status
	sql_attr_multi		=uint car_license_countries_list_encoded from field car_license_countries_list_encoded
	sql_attr_multi		=uint edu_degree_list from field edu_degree_list
	sql_attr_multi		=uint edu_iso_encoded_list from field edu_iso_encoded_list
	sql_attr_multi		=uint edu_majors_crc32_list from field edu_majors_crc32_list
	sql_attr_multi		=uint edu_institute_crc32_list from field edu_institute_crc32_list
	sql_attr_uint		=last_edu_degree
	sql_attr_multi		=uint language_skills_levels_encoded_list from field language_skills_levels_encoded_list
	sql_attr_uint		=cv_stage
	sql_attr_uint		=locale
	sql_attr_uint		=bcc_id
	sql_attr_uint		=user_id
	sql_attr_uint		=gpa
	sql_attr_uint		=gpa_cluster
	sql_attr_timestamp		=date_indexed
	sql_attr_uint		=parent_bcc_id
	sql_attr_bool		=has_attachment
	sql_attr_bool		=has_photo
	sql_attr_bool		=has_video
	sql_attr_bool		=has_recommendation
	sql_field_string		=first_name
	sql_field_string		=middle_name
	sql_field_string		=last_name
	sql_field_string		=profile_name
	sql_attr_uint		=profile_id
	sql_attr_uint		=referrer_source_id
	sql_attr_multi		=uint specilaities_list from field specilaities_list
	sql_attr_multi		=bigint specilaities_points from field specilaities_points
	sql_attr_uint		=special_needs
	sql_attr_bool		=is_primary
	sql_attr_bool		=email_bouncing_p
	sql_attr_timestamp		=creation_date
	sql_attr_bool		=is_confidential
	sql_field_string		=last_name_ar
	sql_field_string		=last_name_la
	sql_field_string		=first_name_ar
	sql_field_string		=first_name_la
	sql_attr_uint		=primary_nationality
	sql_attr_uint		=primary_nationality_cleaned
	sql_attr_multi          =uint nationalities_list from field nationalities_list
	sql_attr_uint		=registration_iso
	sql_attr_uint		=user_type
	sql_attr_uint		=cv_creation_method
	sql_attr_uint		=affliate_program_id
	sql_attr_uint		=cv_no_search_hits
	sql_attr_uint		=cv_no_submits_to
	sql_attr_uint		=cv_no_reviews
	sql_attr_uint		=completness_score
	sql_attr_timestamp		=registration_date
	sql_attr_multi		=bigint bcc_json_fields from field bcc_json_fields
	sql_attr_uint		=yrs_exp_cluster_id
	sql_attr_uint		=yrs_exp_after_grad_cluster_id
	sql_attr_uint		=completness_scores
	sql_attr_float		=cv_search_ranker
	sql_attr_float		=byt_cv_search_ranker
	sql_attr_uint		=user_public_profile_enable
	sql_attr_uint		=people_ranker
	sql_attr_timestamp		=cv_completion_date
	sql_attr_timestamp		=last_login_date
	sql_field_string		=user_state
	sql_field_string		=email_enc
	sql_field_string		=email_domain
	sql_attr_uint		=dependents
	sql_field_string		=cell_phone_enc
	sql_field_string		=home_phone_enc
	sql_field_string		=work_phone_enc
	sql_field_string		=cell_phone
	sql_attr_uint		=bounce_count
	sql_attr_uint		=last_salary_value
	sql_field_string		=last_exp_emp_full
	sql_attr_uint		=last_exp_emp_crc32_full
	sql_attr_uint		=user_lang_preference
	sql_attr_uint		=premium_account
	sql_attr_multi		=uint user_tests from field user_tests
	sql_attr_multi		=uint user_courses from field user_courses
	sql_attr_uint		=hopping
	sql_attr_uint		=gaps
	sql_attr_uint		=res_visa_status
	sql_attr_timestamp		=mobile_confirm_date
	sql_attr_timestamp		=first_bch_deg_date
	sql_attr_multi		=uint gsm from field gsm
	sql_attr_uint		=last_gsc_id
	sql_attr_uint		=previous_gsc_id
	sql_attr_multi		=uint all_gsc_ids from field all_gsc_ids
	sql_attr_multi		=uint last_gst_id from field last_gst_id
	sql_attr_multi		=uint previous_gst_id from field previous_gst_id
	sql_attr_multi		=uint all_gst_ids from field all_gst_ids
	sql_attr_multi		=uint other_gst_id from field other_gst_id
	sql_attr_multi		=uint target_gst_ids from field target_gst_ids
	sql_attr_uint		=highest_degree
	sql_attr_multi		=uint disabilities from field disabilities
	sql_attr_uint		=months_of_exp_after_grad
	sql_attr_json		=cv_custom_json
	sql_attr_uint		=sessions_count
	sql_field_string		=photo_url
	sql_attr_bool		=unemployed
	sql_attr_uint		=orginal_nationality
	sql_attr_timestamp		=cv_builder_date_modified
	sql_attr_uint		=last_gsi_id
	sql_attr_uint		=previous_gsi_id
	sql_attr_multi		=uint all_gsi_ids from field all_gsi_ids
	sql_attr_multi		=uint target_jb_roles from field target_jb_roles
    	sql_attr_uint       =last_exp_comp_size
   	sql_attr_timestamp  =updated_contact_date
	sql_attr_timestamp  =last_exp_start_date
	sql_attr_uint		=index_weight
	sql_attr_multi		=uint folder_id from ranged-query;  SELECT cv_id, folder_id FROM byt_employer_basket_10 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_employer_basket_10 WHERE cv_id between 64000000 and 64999999
	sql_attr_multi		=uint tag_id from ranged-query;  SELECT cv_id, tag_id FROM byt_item_tags_10 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_item_tags_10 WHERE cv_id between 64000000 and 64999999
	sql_attr_multi		=uint note_group_id from ranged-query;  SELECT cv_id, group_id FROM byt_comments_10 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_comments_10 WHERE cv_id between 64000000 and 64999999
}

		index cvMainIndex_10_4
		{
			type			= plain
			source 			= cvMainIndex_10_4_src
			path 			= /home/sphinx/sphinx/var/data/cvMainIndex_10_4
			morphology   = none
			dict=keywords
			index_sp  = 1
			index_zones		= b_*, is_agency, special_needs, referrer_source
			stopwords		= en,ar
			exceptions		= /home/sphinx/sphinx/var/data/exceptions.txt
			min_word_len		= 1
			charset_table		= non_cjk
			ngram_len		= 1
			#ngram_chars		=  non_cjk
			inplace_enable		= 0
			html_strip				= 1
			preopen				= 1
		}		

	source cvMainIndexStemmed_10_4_src {
	type		=pgsql
	sql_host	=host
	sql_user	=user
	sql_pass	=pass
	sql_db		=database
	sql_port	=9988

	sql_query_pre	=SET client_encoding TO 'UTF8'
	sql_query_pre	= SET NAMES 'UTF8'
	sql_ranged_throttle	=1000
	sql_query_range	= SELECT MIN(cv_id),MAX(cv_id) FROM cv_index_10 WHERE cv_id between 64000000 and 64999999
	sql_query	=SELECT \
				cv_id as id,\
				cv_id,\
				experiences_titles,\
				experiences_description,\
				experiences_employers,\
				last_exp_desc,\
				(CASE WHEN is_confidential = 'f' THEN last_exp_emp ELSE NULL END) as last_exp_emp,\
				(CASE WHEN is_confidential = 'f' THEN previous_exp_emp ELSE NULL END) as previous_exp_emp,\
				last_exp_title,\
				last_exp_title_crc32,\
				previous_exp_title,\
				previous_exp_title_crc32,\
				(CASE WHEN is_confidential = 'f' THEN last_exp_emp_crc32 ELSE 0 END) as last_exp_emp_crc32,\
				(CASE WHEN is_confidential = 'f' THEN previous_exp_emp_crc32 ELSE 0 END) as previous_exp_emp_crc32,\
				(CASE WHEN months_of_experience != 999999 then months_of_experience  WHEN market_entry_date != 999999 then (to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date  ELSE 999999 END ) as total_months_of_experience,\
				industeries_roles_years,\
				present_industeries_roles_years,\
				last_jb_industry,\
				last_jb_role,\
				exp_roles_list,\
				exp_industries_list,\
				experiences_iso_encoded_list,\
				last_experience_iso_encoded,\
				target_jb_title,\
				emplyment_type_list,\
				emplyment_status_list,\
				target_job_locations_list,\
				target_job_industries_list,\
				notice_period,\
				trgt_job_salary,\
				(CASE WHEN trgt_job_salary < 0 then 0  WHEN trgt_job_salary = 0 then 1  WHEN trgt_job_salary < 500 THEN 2  WHEN trgt_job_salary <= 1000 THEN 3  WHEN trgt_job_salary <= 1500 THEN 4  WHEN trgt_job_salary <= 2000 THEN 5  WHEN trgt_job_salary <= 3000 THEN 6  WHEN trgt_job_salary <= 5000 THEN 7  WHEN trgt_job_salary <= 8000 THEN 8  WHEN trgt_job_salary <= 12000 THEN 9  WHEN trgt_job_salary <= 16000 THEN 10  WHEN trgt_job_salary <= 20000 THEN 11  WHEN trgt_job_salary <= 30000 THEN 12  WHEN trgt_job_salary <= 50000 THEN 13  ELSE 14  END) as salary_range_cluster_list,\
				career_level,\
				(CASE WHEN career_level = 6 THEN 2001 WHEN career_level < 6 THEN (career_level+1000)*2 ELSE career_level END) as career_level_sorted,\
				(CASE WHEN months_of_experience != 999999 then months_of_experience  WHEN market_entry_date != 999999 then (to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date  ELSE 0 END ) as months_of_experience_sorted,\
				objective_txt,\
				residence_location_iso_encoded,\
				LEFT(residence_location_iso_encoded::text,4)::int as residence_country_iso_encoded,\
				gender,\
				date_of_birth,\
				marital_status,\
				graduation_date,\
				visa_status,\
				car_license_countries_list_encoded,\
				edu_degree_list,\
				edu_iso_encoded_list,\
				edu_txt,\
				edu_major,\
				edu_majors_crc32_list,\
				lst_edu_major,\
				edu_institute,\
				edu_institute_crc32_list,\
				lst_edu_institute,\
				last_edu_degree,\
				skills_txt,\
				language_skills_levels_encoded_list,\
				cv_stage,\
				locale,\
				bcc_id,\
				generic_txt,\
				user_id,\
				gpa,\
				(CASE when gpa >= 99999 then 5 when gpa >= 8000 then 4 when gpa >= 6000 then 3 when gpa >= 4000 then 2 when gpa >= 2000 then 1 when gpa >= 0 then 0 end) as gpa_cluster,\
				extract('epoch' FROM date_indexed)::bigint AS date_indexed,\
				parent_bcc_id,\
				has_attachment,\
				has_photo,\
				has_video,\
				has_recommendation,\
				first_name,\
				middle_name,\
				last_name,\
				profile_name,\
				profile_id,\
				(case when referrer_source_id is null then 99999 else referrer_source_id end ) as referrer_source_id,\
				specilaities_list,\
				specilaities_text,\
				specilaities_points,\
				user_generic_field1,\
				 COALESCE(special_needs,99999) AS special_needs,\
				is_primary,\
				email_bouncing_p,\
				extract('epoch' FROM creation_date)::bigint AS creation_date,\
				is_confidential,\
				last_name_ar,\
				last_name_la,\
				first_name_ar,\
				first_name_la,\
				first_name_la || ' ' || last_name_la as full_name_la,\
				first_name_ar || ' ' || last_name_ar as full_name_ar,\
				primary_nationality,\
				(case when LEFT(residence_location_iso_encoded::text,4)::int = primary_nationality  and visa_status not in (1,7) then 0  when  LEFT(residence_location_iso_encoded::text,4)::int in (5560,6257,6254,4850,5857) and primary_nationality in (4751,6547,5769,6347,4854,6159)  then 0 else  primary_nationality end) as primary_nationality_cleaned,\
				nationalities_list,\
				specilaities_platinum,\
				specilaities_gold,\
				specilaities_silver,\
				specilaities_bronze,\
				bcc_text_fields,\
				has_flag,\
				registration_iso,\
				user_type,\
				cv_creation_method,\
				affliate_program_id,\
				cv_no_search_hits,\
				cv_no_submits_to,\
				cv_no_reviews,\
				completness_score,\
				extract('epoch' FROM registration_date)::bigint AS registration_date,\
				bcc_json_fields,\
				referrer_source,\
				user_generic_field2,\
				user_generic_field3,\
				user_generic_field4,\
				(case (CASE WHEN months_of_experience != 999999 then CEIL(months_of_experience/11.999)  WHEN market_entry_date != 999999 then ceil(((to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date)/11.999)  ELSE 999999 END )::bigint when 0 then 1 when 1 then 1 when 2 then 2 when 3 then 3 when 4 then 3 when 5 then 3 when 6 then 4 when 7 then 4 when 8 then 4 when 9 then 4 when 10 then 4 when 999999 then 6 else 5 end) as yrs_exp_cluster_id,\
				(case (CASE WHEN months_of_exp_after_grad != 999999 then CEIL(months_of_exp_after_grad/11.999) ELSE 999999 END )::bigint when 0 then 1 when 1 then 1 when 2 then 2 when 3 then 3 when 4 then 3 when 5 then 3 when 6 then 4 when 7 then 4 when 8 then 4 when 9 then 4 when 10 then 4 when 999999 then 6 else 5 end) as yrs_exp_after_grad_cluster_id,\
				(CASE WHEN completness_score < 20 THEN 1 WHEN completness_score < 40 THEN 2 WHEN completness_score < 60 THEN 3 WHEN completness_score < 80 THEN 4 WHEN completness_score < 500 THEN 5 END ) as completness_scores,\
				(case when premium_account > 0 then 1.35 else 1 end) * (case when extract('epoch' FROM mobile_confirm_date)::bigint > 0 then 1.15 else 1 end) * (case when email_bouncing_p = true then 0.01 else 1 end) * (CASE WHEN (completness_score > 99) THEN 1.5 WHEN (completness_score > 80) THEN (1+completness_score/250)  WHEN (completness_score > 50) THEN (1+completness_score/400) WHEN (completness_score > 25) THEN 0.9 ELSE 0.5 END) * (CASE WHEN (last_login_date > NOW()-INTERVAL '2629800 SECOND')    THEN 1.3 WHEN (last_login_date > NOW()-INTERVAL '7889400 SECOND')    THEN 1.23 WHEN (last_login_date > NOW()-INTERVAL '15778800 SECOND')   THEN 1.17  WHEN (last_login_date > NOW()-INTERVAL '31557600  SECOND')  THEN 1.12 WHEN (last_login_date > NOW()-INTERVAL '63115200  SECOND')  THEN 1.06 ELSE 1 END) * (CASE WHEN (date_indexed > NOW()-INTERVAL '2629800 SECOND')    THEN 1.5 WHEN (date_indexed > NOW()-INTERVAL '7889400 SECOND')    THEN 1.4 WHEN (date_indexed > NOW()-INTERVAL '15778800 SECOND')   THEN 1.3  WHEN (date_indexed > NOW()-INTERVAL '31557600  SECOND')  THEN 1.15 WHEN (date_indexed > NOW()-INTERVAL '63115200  SECOND')  THEN 1.13 ELSE 1 END)::float as cv_search_ranker,\
				(case when premium_account > 0 then 1.35 else 1 end) * (case when extract('epoch' FROM mobile_confirm_date)::bigint > 0 then 1.15 else 1 end) * (case when email_bouncing_p = true then 0.01 else 1 end) * (CASE WHEN (completness_score > 99) THEN 1.5 WHEN (completness_score > 80) THEN (1+completness_score/250)  WHEN (completness_score > 50) THEN (1+completness_score/400) WHEN (completness_score > 25) THEN 0.9 ELSE 0.5 END) * (CASE WHEN (last_login_date > NOW()-INTERVAL '2629800 SECOND')    THEN 1.3 WHEN (last_login_date > NOW()-INTERVAL '7889400 SECOND')    THEN 1.23 WHEN (last_login_date > NOW()-INTERVAL '15778800 SECOND')   THEN 1.17  WHEN (last_login_date > NOW()-INTERVAL '31557600  SECOND')  THEN 1.12 WHEN (last_login_date > NOW()-INTERVAL '63115200  SECOND')  THEN 1.06 ELSE 1 END) * (CASE WHEN (cv_builder_date_modified > NOW()-INTERVAL '2629800 SECOND')    THEN 1.5 WHEN (cv_builder_date_modified > NOW()-INTERVAL '7889400 SECOND')    THEN 1.4 WHEN (cv_builder_date_modified > NOW()-INTERVAL '15778800 SECOND')   THEN 1.3  WHEN (cv_builder_date_modified > NOW()-INTERVAL '31557600  SECOND')  THEN 1.15 WHEN (cv_builder_date_modified > NOW()-INTERVAL '63115200  SECOND')  THEN 1.13 ELSE 1 END)::float as byt_cv_search_ranker,\
				(CASE WHEN (is_primary = TRUE and profile_id > 0) THEN 1 ELSE 0 END) as user_public_profile_enable,\
				(case when email_bouncing_p = true then 0.01 else 1 end) * (1000*(1+0.2*(CASE WHEN has_photo = TRUE THEN 1 ELSE 0 END))) as people_ranker,\
				(CASE WHEN (sections_fields IS NULL OR sections_fields = ' ')   THEN 'tar per con edu exp'  ELSE sections_fields  END) as sections_fields,\
				extract('epoch' FROM cv_completion_date)::bigint AS cv_completion_date,\
				extract('epoch' FROM last_login_date)::bigint AS last_login_date,\
				(CASE WHEN (user_state IS NULL OR user_state = ' ')  THEN 'mini' ELSE user_state END) as user_state,\
				email_enc,\
				email_domain,\
				dependents,\
				cell_phone_enc,\
				home_phone_enc,\
				work_phone_enc,\
				cell_phone,\
				bounce_count,\
				last_salary_value,\
				receive_emails_list,\
				last_exp_emp as last_exp_emp_full,\
				last_exp_emp_crc32 as last_exp_emp_crc32_full,\
				user_lang_preference,\
				premium_account,\
				user_tests,\
				user_courses,\
				hobbies,\
				hopping,\
				gaps,\
				res_visa_status,\
				extract('epoch' FROM mobile_confirm_date)::bigint AS mobile_confirm_date,\
				viewer_ids,\
				extract('epoch' FROM first_bch_deg_date)::bigint AS first_bch_deg_date,\
				gsm,\
				last_gsc_id,\
				previous_gsc_id,\
				all_gsc_ids,\
				all_gsc_ids_txt,\
				last_gst_id,\
				previous_gst_id,\
				all_gst_ids,\
				other_gst_id,\
				target_gst_ids,\
				all_gst_ids_text,\
				highest_degree,\
				disabilities,\
				months_of_exp_after_grad,\
				cv_custom_json,\
				sessions_count,\
				photo_url,\
				unemployed,\
				orginal_nationality,\
				extract('epoch' FROM cv_builder_date_modified)::bigint AS cv_builder_date_modified,\
				trainings,\
				certificates,\
				training_institutes,\
				last_gsi_id,\
				previous_gsi_id,\
				all_gsi_ids,\
				target_jb_roles,\
				all_gsi_ids_txt,\
				1 as index_weight,\
				'ANYKEYWORD' as any_keyword,\
				last_exp_comp_size,\
                		extract('epoch' FROM updated_contact_date)::bigint AS updated_contact_date,\
				extract('epoch' FROM last_exp_start_date)::bigint AS last_exp_start_date\
			FROM \
				cv_index_10 \
			WHERE \
				insertion_date <  (SELECT lst_main_index_start_time FROM spx_delta_separator WHERE index_id = 110 LIMIT 1) \
				 AND cv_id>=$start AND cv_id<=$end

	sql_range_step	=25000
	sql_attr_uint		=cv_id
	sql_field_string		=last_exp_emp
	sql_field_string		=previous_exp_emp
	sql_field_string		=last_exp_title
	sql_attr_uint		=last_exp_title_crc32
	sql_field_string		=previous_exp_title
	sql_attr_uint		=previous_exp_title_crc32
	sql_attr_uint		=last_exp_emp_crc32
	sql_attr_uint		=previous_exp_emp_crc32
	sql_attr_uint		=total_months_of_experience
	sql_attr_multi		=bigint industeries_roles_years from field industeries_roles_years
	sql_attr_multi		=bigint present_industeries_roles_years from field present_industeries_roles_years
	sql_attr_uint		=last_jb_industry
	sql_attr_uint		=last_jb_role
	sql_attr_multi		=bigint exp_roles_list from field exp_roles_list
	sql_attr_multi		=bigint exp_industries_list from field exp_industries_list
	sql_attr_multi		=uint experiences_iso_encoded_list from field experiences_iso_encoded_list
	sql_attr_uint		=last_experience_iso_encoded
	sql_field_string		=target_jb_title
	sql_attr_multi		=uint emplyment_type_list from field emplyment_type_list
	sql_attr_multi		=uint emplyment_status_list from field emplyment_status_list
	sql_attr_multi		=uint target_job_locations_list from field target_job_locations_list
	sql_attr_multi		=uint target_job_industries_list from field target_job_industries_list
	sql_attr_uint		=notice_period
	sql_attr_uint		=trgt_job_salary
	sql_attr_uint		=salary_range_cluster_list
	sql_attr_uint		=career_level
	sql_attr_uint           =career_level_sorted
	sql_attr_uint           =months_of_experience_sorted
	sql_attr_uint		=residence_location_iso_encoded
	sql_attr_uint		=residence_country_iso_encoded
	sql_attr_uint		=gender
	sql_attr_uint		=date_of_birth
	sql_attr_uint		=marital_status
	sql_attr_uint		=graduation_date
	sql_attr_uint		=visa_status
	sql_attr_multi		=uint car_license_countries_list_encoded from field car_license_countries_list_encoded
	sql_attr_multi		=uint edu_degree_list from field edu_degree_list
	sql_attr_multi		=uint edu_iso_encoded_list from field edu_iso_encoded_list
	sql_attr_multi		=uint edu_majors_crc32_list from field edu_majors_crc32_list
	sql_attr_multi		=uint edu_institute_crc32_list from field edu_institute_crc32_list
	sql_attr_uint		=last_edu_degree
	sql_attr_multi		=uint language_skills_levels_encoded_list from field language_skills_levels_encoded_list
	sql_attr_uint		=cv_stage
	sql_attr_uint		=locale
	sql_attr_uint		=bcc_id
	sql_attr_uint		=user_id
	sql_attr_uint		=gpa
	sql_attr_uint		=gpa_cluster
	sql_attr_timestamp		=date_indexed
	sql_attr_uint		=parent_bcc_id
	sql_attr_bool		=has_attachment
	sql_attr_bool		=has_photo
	sql_attr_bool		=has_video
	sql_attr_bool		=has_recommendation
	sql_field_string		=first_name
	sql_field_string		=middle_name
	sql_field_string		=last_name
	sql_field_string		=profile_name
	sql_attr_uint		=profile_id
	sql_attr_uint		=referrer_source_id
	sql_attr_multi		=uint specilaities_list from field specilaities_list
	sql_attr_multi		=bigint specilaities_points from field specilaities_points
	sql_attr_uint		=special_needs
	sql_attr_bool		=is_primary
	sql_attr_bool		=email_bouncing_p
	sql_attr_timestamp		=creation_date
	sql_attr_bool		=is_confidential
	sql_field_string		=last_name_ar
	sql_field_string		=last_name_la
	sql_field_string		=first_name_ar
	sql_field_string		=first_name_la
	sql_attr_uint		=primary_nationality
	sql_attr_uint		=primary_nationality_cleaned
	sql_attr_multi          =uint nationalities_list from field nationalities_list
	sql_attr_uint		=registration_iso
	sql_attr_uint		=user_type
	sql_attr_uint		=cv_creation_method
	sql_attr_uint		=affliate_program_id
	sql_attr_uint		=cv_no_search_hits
	sql_attr_uint		=cv_no_submits_to
	sql_attr_uint		=cv_no_reviews
	sql_attr_uint		=completness_score
	sql_attr_timestamp		=registration_date
	sql_attr_multi		=bigint bcc_json_fields from field bcc_json_fields
	sql_attr_uint		=yrs_exp_cluster_id
	sql_attr_uint		=yrs_exp_after_grad_cluster_id
	sql_attr_uint		=completness_scores
	sql_attr_float		=cv_search_ranker
	sql_attr_float		=byt_cv_search_ranker
	sql_attr_uint		=user_public_profile_enable
	sql_attr_uint		=people_ranker
	sql_attr_timestamp		=cv_completion_date
	sql_attr_timestamp		=last_login_date
	sql_field_string		=user_state
	sql_field_string		=email_enc
	sql_field_string		=email_domain
	sql_attr_uint		=dependents
	sql_field_string		=cell_phone_enc
	sql_field_string		=home_phone_enc
	sql_field_string		=work_phone_enc
	sql_field_string		=cell_phone
	sql_attr_uint		=bounce_count
	sql_attr_uint		=last_salary_value
	sql_field_string		=last_exp_emp_full
	sql_attr_uint		=last_exp_emp_crc32_full
	sql_attr_uint		=user_lang_preference
	sql_attr_uint		=premium_account
	sql_attr_multi		=uint user_tests from field user_tests
	sql_attr_multi		=uint user_courses from field user_courses
	sql_attr_uint		=hopping
	sql_attr_uint		=gaps
	sql_attr_uint		=res_visa_status
	sql_attr_timestamp		=mobile_confirm_date
	sql_attr_timestamp		=first_bch_deg_date
	sql_attr_multi		=uint gsm from field gsm
	sql_attr_uint		=last_gsc_id
	sql_attr_uint		=previous_gsc_id
	sql_attr_multi		=uint all_gsc_ids from field all_gsc_ids
	sql_attr_multi		=uint last_gst_id from field last_gst_id
	sql_attr_multi		=uint previous_gst_id from field previous_gst_id
	sql_attr_multi		=uint all_gst_ids from field all_gst_ids
	sql_attr_multi		=uint other_gst_id from field other_gst_id
	sql_attr_multi		=uint target_gst_ids from field target_gst_ids
	sql_attr_uint		=highest_degree
	sql_attr_multi		=uint disabilities from field disabilities
	sql_attr_uint		=months_of_exp_after_grad
	sql_attr_json		=cv_custom_json
	sql_attr_uint		=sessions_count
	sql_field_string		=photo_url
	sql_attr_bool		=unemployed
	sql_attr_uint		=orginal_nationality
	sql_attr_timestamp		=cv_builder_date_modified
	sql_attr_uint		=last_gsi_id
	sql_attr_uint		=previous_gsi_id
	sql_attr_multi		=uint all_gsi_ids from field all_gsi_ids
	sql_attr_multi		=uint target_jb_roles from field target_jb_roles
	sql_attr_uint       =last_exp_comp_size
    	sql_attr_timestamp  =updated_contact_date
	sql_attr_timestamp  =last_exp_start_date
	sql_attr_uint		=index_weight
	sql_attr_multi		=uint folder_id from ranged-query;  SELECT cv_id, folder_id FROM byt_employer_basket_10 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_employer_basket_10 WHERE cv_id between 64000000 and 64999999
	sql_attr_multi		=uint tag_id from ranged-query;  SELECT cv_id, tag_id FROM byt_item_tags_10 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_item_tags_10 WHERE cv_id between 64000000 and 64999999
	sql_attr_multi		=uint note_group_id from ranged-query;  SELECT cv_id, group_id FROM byt_comments_10 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_comments_10 WHERE cv_id between 64000000 and 64999999
}

		index cvMainIndexStemmed_10_4
		{
			type			= plain
			source 			= cvMainIndexStemmed_10_4_src
			path 			= /home/sphinx/sphinx/var/data/cvMainIndexStemmed_10_4
			morphology   = stem_en,stem_ar
			wordforms  = /home/sphinx/sphinx/var/data/wordforms.txt
			dict=keywords
			index_sp  = 1
			index_zones		= b_*, is_agency, special_needs, referrer_source
			stopwords		= en,ar
			exceptions		= /home/sphinx/sphinx/var/data/exceptions.txt
			min_word_len		= 1
			charset_table		= non_cjk
			index_exact_words	= 1
			
			ngram_len		= 1
			#ngram_chars		=  non_cjk
			html_strip				= 1
			preopen				= 1
		}		
		


source cvMainIndex_10_5_src {
	type		=pgsql
	sql_host	=host
	sql_user	=user
	sql_pass	=pass
	sql_db		=database
	sql_port	=9988

	sql_query_pre	=SET client_encoding TO 'UTF8'
	sql_query_pre	= SET NAMES 'UTF8'
	sql_ranged_throttle	=1000
	sql_query_range	= SELECT MIN(cv_id),MAX(cv_id) FROM cv_index_10 WHERE cv_id between 65000000 and 65999999
	sql_query	=SELECT \
				cv_id as id,\
				cv_id,\
				experiences_titles,\
				experiences_description,\
				experiences_employers,\
				last_exp_desc,\
				(CASE WHEN is_confidential = 'f' THEN last_exp_emp ELSE NULL END) as last_exp_emp,\
				(CASE WHEN is_confidential = 'f' THEN previous_exp_emp ELSE NULL END) as previous_exp_emp,\
				last_exp_title,\
				last_exp_title_crc32,\
				previous_exp_title,\
				previous_exp_title_crc32,\
				(CASE WHEN is_confidential = 'f' THEN last_exp_emp_crc32 ELSE 0 END) as last_exp_emp_crc32,\
				(CASE WHEN is_confidential = 'f' THEN previous_exp_emp_crc32 ELSE 0 END) as previous_exp_emp_crc32,\
				(CASE WHEN months_of_experience != 999999 then months_of_experience  WHEN market_entry_date != 999999 then (to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date  ELSE 999999 END ) as total_months_of_experience,\
				industeries_roles_years,\
				present_industeries_roles_years,\
				last_jb_industry,\
				last_jb_role,\
				exp_roles_list,\
				exp_industries_list,\
				experiences_iso_encoded_list,\
				last_experience_iso_encoded,\
				target_jb_title,\
				emplyment_type_list,\
				emplyment_status_list,\
				target_job_locations_list,\
				target_job_industries_list,\
				notice_period,\
				trgt_job_salary,\
				(CASE WHEN trgt_job_salary < 0 then 0  WHEN trgt_job_salary = 0 then 1  WHEN trgt_job_salary < 500 THEN 2  WHEN trgt_job_salary <= 1000 THEN 3  WHEN trgt_job_salary <= 1500 THEN 4  WHEN trgt_job_salary <= 2000 THEN 5  WHEN trgt_job_salary <= 3000 THEN 6  WHEN trgt_job_salary <= 5000 THEN 7  WHEN trgt_job_salary <= 8000 THEN 8  WHEN trgt_job_salary <= 12000 THEN 9  WHEN trgt_job_salary <= 16000 THEN 10  WHEN trgt_job_salary <= 20000 THEN 11  WHEN trgt_job_salary <= 30000 THEN 12  WHEN trgt_job_salary <= 50000 THEN 13  ELSE 14  END) as salary_range_cluster_list,\
				career_level,\
				(CASE WHEN career_level = 6 THEN 2001 WHEN career_level < 6 THEN (career_level+1000)*2 ELSE career_level END) as career_level_sorted,\
				(CASE WHEN months_of_experience != 999999 then months_of_experience  WHEN market_entry_date != 999999 then (to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date  ELSE 0 END ) as months_of_experience_sorted,\
				objective_txt,\
				residence_location_iso_encoded,\
				LEFT(residence_location_iso_encoded::text,4)::int as residence_country_iso_encoded,\
				gender,\
				date_of_birth,\
				marital_status,\
				graduation_date,\
				visa_status,\
				car_license_countries_list_encoded,\
				edu_degree_list,\
				edu_iso_encoded_list,\
				edu_txt,\
				edu_major,\
				edu_majors_crc32_list,\
				lst_edu_major,\
				edu_institute,\
				edu_institute_crc32_list,\
				lst_edu_institute,\
				last_edu_degree,\
				skills_txt,\
				language_skills_levels_encoded_list,\
				cv_stage,\
				locale,\
				bcc_id,\
				generic_txt,\
				user_id,\
				gpa,\
				(CASE when gpa >= 99999 then 5 when gpa >= 8000 then 4 when gpa >= 6000 then 3 when gpa >= 4000 then 2 when gpa >= 2000 then 1 when gpa >= 0 then 0 end) as gpa_cluster,\
				extract('epoch' FROM date_indexed)::bigint AS date_indexed,\
				parent_bcc_id,\
				has_attachment,\
				has_photo,\
				has_video,\
				has_recommendation,\
				first_name,\
				middle_name,\
				last_name,\
				profile_name,\
				profile_id,\
				(case when referrer_source_id is null then 99999 else referrer_source_id end ) as referrer_source_id,\
				specilaities_list,\
				specilaities_text,\
				specilaities_points,\
				user_generic_field1,\
				 COALESCE(special_needs,99999) AS special_needs,\
				is_primary,\
				email_bouncing_p,\
				extract('epoch' FROM creation_date)::bigint AS creation_date,\
				is_confidential,\
				last_name_ar,\
				last_name_la,\
				first_name_ar,\
				first_name_la,\
				first_name_la || ' ' || last_name_la as full_name_la,\
				first_name_ar || ' ' || last_name_ar as full_name_ar,\
				primary_nationality,\
				(case when LEFT(residence_location_iso_encoded::text,4)::int = primary_nationality  and visa_status not in (1,7) then 0  when  LEFT(residence_location_iso_encoded::text,4)::int in (5560,6257,6254,4850,5857) and primary_nationality in (4751,6547,5769,6347,4854,6159)  then 0 else  primary_nationality end) as primary_nationality_cleaned,\
				nationalities_list,\
				specilaities_platinum,\
				specilaities_gold,\
				specilaities_silver,\
				specilaities_bronze,\
				bcc_text_fields,\
				has_flag,\
				registration_iso,\
				user_type,\
				cv_creation_method,\
				affliate_program_id,\
				cv_no_search_hits,\
				cv_no_submits_to,\
				cv_no_reviews,\
				completness_score,\
				extract('epoch' FROM registration_date)::bigint AS registration_date,\
				bcc_json_fields,\
				referrer_source,\
				user_generic_field2,\
				user_generic_field3,\
				user_generic_field4,\
				(case (CASE WHEN months_of_experience != 999999 then CEIL(months_of_experience/11.999)  WHEN market_entry_date != 999999 then ceil(((to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date)/11.999)  ELSE 999999 END )::bigint when 0 then 1 when 1 then 1 when 2 then 2 when 3 then 3 when 4 then 3 when 5 then 3 when 6 then 4 when 7 then 4 when 8 then 4 when 9 then 4 when 10 then 4 when 999999 then 6 else 5 end) as yrs_exp_cluster_id,\
				(case (CASE WHEN months_of_exp_after_grad != 999999 then CEIL(months_of_exp_after_grad/11.999) ELSE 999999 END )::bigint when 0 then 1 when 1 then 1 when 2 then 2 when 3 then 3 when 4 then 3 when 5 then 3 when 6 then 4 when 7 then 4 when 8 then 4 when 9 then 4 when 10 then 4 when 999999 then 6 else 5 end) as yrs_exp_after_grad_cluster_id,\
				(CASE WHEN completness_score < 20 THEN 1 WHEN completness_score < 40 THEN 2 WHEN completness_score < 60 THEN 3 WHEN completness_score < 80 THEN 4 WHEN completness_score < 500 THEN 5 END ) as completness_scores,\
				(case when premium_account > 0 then 1.35 else 1 end) * (case when extract('epoch' FROM mobile_confirm_date)::bigint > 0 then 1.15 else 1 end) * (case when email_bouncing_p = true then 0.01 else 1 end) * (CASE WHEN (completness_score > 99) THEN 1.5 WHEN (completness_score > 80) THEN (1+completness_score/250)  WHEN (completness_score > 50) THEN (1+completness_score/400) WHEN (completness_score > 25) THEN 0.9 ELSE 0.5 END) * (CASE WHEN (last_login_date > NOW()-INTERVAL '2629800 SECOND')    THEN 1.3 WHEN (last_login_date > NOW()-INTERVAL '7889400 SECOND')    THEN 1.23 WHEN (last_login_date > NOW()-INTERVAL '15778800 SECOND')   THEN 1.17  WHEN (last_login_date > NOW()-INTERVAL '31557600  SECOND')  THEN 1.12 WHEN (last_login_date > NOW()-INTERVAL '63115200  SECOND')  THEN 1.06 ELSE 1 END) * (CASE WHEN (date_indexed > NOW()-INTERVAL '2629800 SECOND')    THEN 1.5 WHEN (date_indexed > NOW()-INTERVAL '7889400 SECOND')    THEN 1.4 WHEN (date_indexed > NOW()-INTERVAL '15778800 SECOND')   THEN 1.3  WHEN (date_indexed > NOW()-INTERVAL '31557600  SECOND')  THEN 1.15 WHEN (date_indexed > NOW()-INTERVAL '63115200  SECOND')  THEN 1.13 ELSE 1 END)::float as cv_search_ranker,\
				(case when premium_account > 0 then 1.35 else 1 end) * (case when extract('epoch' FROM mobile_confirm_date)::bigint > 0 then 1.15 else 1 end) * (case when email_bouncing_p = true then 0.01 else 1 end) * (CASE WHEN (completness_score > 99) THEN 1.5 WHEN (completness_score > 80) THEN (1+completness_score/250)  WHEN (completness_score > 50) THEN (1+completness_score/400) WHEN (completness_score > 25) THEN 0.9 ELSE 0.5 END) * (CASE WHEN (last_login_date > NOW()-INTERVAL '2629800 SECOND')    THEN 1.3 WHEN (last_login_date > NOW()-INTERVAL '7889400 SECOND')    THEN 1.23 WHEN (last_login_date > NOW()-INTERVAL '15778800 SECOND')   THEN 1.17  WHEN (last_login_date > NOW()-INTERVAL '31557600  SECOND')  THEN 1.12 WHEN (last_login_date > NOW()-INTERVAL '63115200  SECOND')  THEN 1.06 ELSE 1 END) * (CASE WHEN (cv_builder_date_modified > NOW()-INTERVAL '2629800 SECOND')    THEN 1.5 WHEN (cv_builder_date_modified > NOW()-INTERVAL '7889400 SECOND')    THEN 1.4 WHEN (cv_builder_date_modified > NOW()-INTERVAL '15778800 SECOND')   THEN 1.3  WHEN (cv_builder_date_modified > NOW()-INTERVAL '31557600  SECOND')  THEN 1.15 WHEN (cv_builder_date_modified > NOW()-INTERVAL '63115200  SECOND')  THEN 1.13 ELSE 1 END)::float as byt_cv_search_ranker,\
				(CASE WHEN (is_primary = TRUE and profile_id > 0) THEN 1 ELSE 0 END) as user_public_profile_enable,\
				(case when email_bouncing_p = true then 0.01 else 1 end) * (1000*(1+0.2*(CASE WHEN has_photo = TRUE THEN 1 ELSE 0 END))) as people_ranker,\
				(CASE WHEN (sections_fields IS NULL OR sections_fields = ' ')   THEN 'tar per con edu exp'  ELSE sections_fields  END) as sections_fields,\
				extract('epoch' FROM cv_completion_date)::bigint AS cv_completion_date,\
				extract('epoch' FROM last_login_date)::bigint AS last_login_date,\
				(CASE WHEN (user_state IS NULL OR user_state = ' ')  THEN 'mini' ELSE user_state END) as user_state,\
				email_enc,\
				email_domain,\
				dependents,\
				cell_phone_enc,\
				home_phone_enc,\
				work_phone_enc,\
				cell_phone,\
				bounce_count,\
				last_salary_value,\
				receive_emails_list,\
				last_exp_emp as last_exp_emp_full,\
				last_exp_emp_crc32 as last_exp_emp_crc32_full,\
				user_lang_preference,\
				premium_account,\
				user_tests,\
				user_courses,\
				hobbies,\
				hopping,\
				gaps,\
				res_visa_status,\
				extract('epoch' FROM mobile_confirm_date)::bigint AS mobile_confirm_date,\
				viewer_ids,\
				extract('epoch' FROM first_bch_deg_date)::bigint AS first_bch_deg_date,\
				gsm,\
				last_gsc_id,\
				previous_gsc_id,\
				all_gsc_ids,\
				all_gsc_ids_txt,\
				last_gst_id,\
				previous_gst_id,\
				all_gst_ids,\
				other_gst_id,\
				target_gst_ids,\
				all_gst_ids_text,\
				highest_degree,\
				disabilities,\
				months_of_exp_after_grad,\
				cv_custom_json,\
				sessions_count,\
				photo_url,\
				unemployed,\
				orginal_nationality,\
				extract('epoch' FROM cv_builder_date_modified)::bigint AS cv_builder_date_modified,\
				trainings,\
				certificates,\
				training_institutes,\
				last_gsi_id,\
				previous_gsi_id,\
				all_gsi_ids,\
				target_jb_roles,\
				all_gsi_ids_txt,\
				3 as index_weight,\
				'ANYKEYWORD' as any_keyword,\
				last_exp_comp_size,\
                		extract('epoch' FROM updated_contact_date)::bigint AS updated_contact_date,\
				extract('epoch' FROM last_exp_start_date)::bigint AS last_exp_start_date\
			FROM \
				cv_index_10 \
			WHERE \
				insertion_date <  (SELECT lst_main_index_start_time FROM spx_delta_separator WHERE index_id = 110 LIMIT 1) \
				 AND cv_id>=$start AND cv_id<=$end

	sql_range_step	=25000
	sql_attr_uint		=cv_id
	sql_field_string		=last_exp_emp
	sql_field_string		=previous_exp_emp
	sql_field_string		=last_exp_title
	sql_attr_uint		=last_exp_title_crc32
	sql_field_string		=previous_exp_title
	sql_attr_uint		=previous_exp_title_crc32
	sql_attr_uint		=last_exp_emp_crc32
	sql_attr_uint		=previous_exp_emp_crc32
	sql_attr_uint		=total_months_of_experience
	sql_attr_multi		=bigint industeries_roles_years from field industeries_roles_years
	sql_attr_multi		=bigint present_industeries_roles_years from field present_industeries_roles_years
	sql_attr_uint		=last_jb_industry
	sql_attr_uint		=last_jb_role
	sql_attr_multi		=bigint exp_roles_list from field exp_roles_list
	sql_attr_multi		=bigint exp_industries_list from field exp_industries_list
	sql_attr_multi		=uint experiences_iso_encoded_list from field experiences_iso_encoded_list
	sql_attr_uint		=last_experience_iso_encoded
	sql_field_string		=target_jb_title
	sql_attr_multi		=uint emplyment_type_list from field emplyment_type_list
	sql_attr_multi		=uint emplyment_status_list from field emplyment_status_list
	sql_attr_multi		=uint target_job_locations_list from field target_job_locations_list
	sql_attr_multi		=uint target_job_industries_list from field target_job_industries_list
	sql_attr_uint		=notice_period
	sql_attr_uint		=trgt_job_salary
	sql_attr_uint		=salary_range_cluster_list
	sql_attr_uint		=career_level
        sql_attr_uint   	=career_level_sorted
        sql_attr_uint	        =months_of_experience_sorted
	sql_attr_uint		=residence_location_iso_encoded
	sql_attr_uint		=residence_country_iso_encoded
	sql_attr_uint		=gender
	sql_attr_uint		=date_of_birth
	sql_attr_uint		=marital_status
	sql_attr_uint		=graduation_date
	sql_attr_uint		=visa_status
	sql_attr_multi		=uint car_license_countries_list_encoded from field car_license_countries_list_encoded
	sql_attr_multi		=uint edu_degree_list from field edu_degree_list
	sql_attr_multi		=uint edu_iso_encoded_list from field edu_iso_encoded_list
	sql_attr_multi		=uint edu_majors_crc32_list from field edu_majors_crc32_list
	sql_attr_multi		=uint edu_institute_crc32_list from field edu_institute_crc32_list
	sql_attr_uint		=last_edu_degree
	sql_attr_multi		=uint language_skills_levels_encoded_list from field language_skills_levels_encoded_list
	sql_attr_uint		=cv_stage
	sql_attr_uint		=locale
	sql_attr_uint		=bcc_id
	sql_attr_uint		=user_id
	sql_attr_uint		=gpa
	sql_attr_uint		=gpa_cluster
	sql_attr_timestamp		=date_indexed
	sql_attr_uint		=parent_bcc_id
	sql_attr_bool		=has_attachment
	sql_attr_bool		=has_photo
	sql_attr_bool		=has_video
	sql_attr_bool		=has_recommendation
	sql_field_string		=first_name
	sql_field_string		=middle_name
	sql_field_string		=last_name
	sql_field_string		=profile_name
	sql_attr_uint		=profile_id
	sql_attr_uint		=referrer_source_id
	sql_attr_multi		=uint specilaities_list from field specilaities_list
	sql_attr_multi		=bigint specilaities_points from field specilaities_points
	sql_attr_uint		=special_needs
	sql_attr_bool		=is_primary
	sql_attr_bool		=email_bouncing_p
	sql_attr_timestamp		=creation_date
	sql_attr_bool		=is_confidential
	sql_field_string		=last_name_ar
	sql_field_string		=last_name_la
	sql_field_string		=first_name_ar
	sql_field_string		=first_name_la
	sql_attr_uint		=primary_nationality
	sql_attr_uint		=primary_nationality_cleaned
	sql_attr_multi          =uint nationalities_list from field nationalities_list
	sql_attr_uint		=registration_iso
	sql_attr_uint		=user_type
	sql_attr_uint		=cv_creation_method
	sql_attr_uint		=affliate_program_id
	sql_attr_uint		=cv_no_search_hits
	sql_attr_uint		=cv_no_submits_to
	sql_attr_uint		=cv_no_reviews
	sql_attr_uint		=completness_score
	sql_attr_timestamp		=registration_date
	sql_attr_multi		=bigint bcc_json_fields from field bcc_json_fields
	sql_attr_uint		=yrs_exp_cluster_id
	sql_attr_uint		=yrs_exp_after_grad_cluster_id
	sql_attr_uint		=completness_scores
	sql_attr_float		=cv_search_ranker
	sql_attr_float		=byt_cv_search_ranker
	sql_attr_uint		=user_public_profile_enable
	sql_attr_uint		=people_ranker
	sql_attr_timestamp		=cv_completion_date
	sql_attr_timestamp		=last_login_date
	sql_field_string		=user_state
	sql_field_string		=email_enc
	sql_field_string		=email_domain
	sql_attr_uint		=dependents
	sql_field_string		=cell_phone_enc
	sql_field_string		=home_phone_enc
	sql_field_string		=work_phone_enc
	sql_field_string		=cell_phone
	sql_attr_uint		=bounce_count
	sql_attr_uint		=last_salary_value
	sql_field_string		=last_exp_emp_full
	sql_attr_uint		=last_exp_emp_crc32_full
	sql_attr_uint		=user_lang_preference
	sql_attr_uint		=premium_account
	sql_attr_multi		=uint user_tests from field user_tests
	sql_attr_multi		=uint user_courses from field user_courses
	sql_attr_uint		=hopping
	sql_attr_uint		=gaps
	sql_attr_uint		=res_visa_status
	sql_attr_timestamp		=mobile_confirm_date
	sql_attr_timestamp		=first_bch_deg_date
	sql_attr_multi		=uint gsm from field gsm
	sql_attr_uint		=last_gsc_id
	sql_attr_uint		=previous_gsc_id
	sql_attr_multi		=uint all_gsc_ids from field all_gsc_ids
	sql_attr_multi		=uint last_gst_id from field last_gst_id
	sql_attr_multi		=uint previous_gst_id from field previous_gst_id
	sql_attr_multi		=uint all_gst_ids from field all_gst_ids
	sql_attr_multi		=uint other_gst_id from field other_gst_id
	sql_attr_multi		=uint target_gst_ids from field target_gst_ids
	sql_attr_uint		=highest_degree
	sql_attr_multi		=uint disabilities from field disabilities
	sql_attr_uint		=months_of_exp_after_grad
	sql_attr_json		=cv_custom_json
	sql_attr_uint		=sessions_count
	sql_field_string		=photo_url
	sql_attr_bool		=unemployed
	sql_attr_uint		=orginal_nationality
	sql_attr_timestamp		=cv_builder_date_modified
	sql_attr_uint		=last_gsi_id
	sql_attr_uint		=previous_gsi_id
	sql_attr_multi		=uint all_gsi_ids from field all_gsi_ids
	sql_attr_multi		=uint target_jb_roles from field target_jb_roles
    	sql_attr_uint       =last_exp_comp_size
   	sql_attr_timestamp  =updated_contact_date
	sql_attr_timestamp  =last_exp_start_date
	sql_attr_uint		=index_weight
	sql_attr_multi		=uint folder_id from ranged-query;  SELECT cv_id, folder_id FROM byt_employer_basket_10 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_employer_basket_10 WHERE cv_id between 65000000 and 65999999
	sql_attr_multi		=uint tag_id from ranged-query;  SELECT cv_id, tag_id FROM byt_item_tags_10 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_item_tags_10 WHERE cv_id between 65000000 and 65999999
	sql_attr_multi		=uint note_group_id from ranged-query;  SELECT cv_id, group_id FROM byt_comments_10 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_comments_10 WHERE cv_id between 65000000 and 65999999
}

		index cvMainIndex_10_5
		{
			type			= plain
			source 			= cvMainIndex_10_5_src
			path 			= /home/sphinx/sphinx/var/data/cvMainIndex_10_5
			morphology   = none
			dict=keywords
			index_sp  = 1
			index_zones		= b_*, is_agency, special_needs, referrer_source
			stopwords		= en,ar
			exceptions		= /home/sphinx/sphinx/var/data/exceptions.txt
			min_word_len		= 1
			charset_table		= non_cjk
			ngram_len		= 1
			#ngram_chars		=  non_cjk
			inplace_enable		= 0
			html_strip				= 1
			preopen				= 1
		}		

	source cvMainIndexStemmed_10_5_src {
	type		=pgsql
	sql_host	=host
	sql_user	=user
	sql_pass	=pass
	sql_db		=database
	sql_port	=9988

	sql_query_pre	=SET client_encoding TO 'UTF8'
	sql_query_pre	= SET NAMES 'UTF8'
	sql_ranged_throttle	=1000
	sql_query_range	= SELECT MIN(cv_id),MAX(cv_id) FROM cv_index_10 WHERE cv_id between 65000000 and 65999999
	sql_query	=SELECT \
				cv_id as id,\
				cv_id,\
				experiences_titles,\
				experiences_description,\
				experiences_employers,\
				last_exp_desc,\
				(CASE WHEN is_confidential = 'f' THEN last_exp_emp ELSE NULL END) as last_exp_emp,\
				(CASE WHEN is_confidential = 'f' THEN previous_exp_emp ELSE NULL END) as previous_exp_emp,\
				last_exp_title,\
				last_exp_title_crc32,\
				previous_exp_title,\
				previous_exp_title_crc32,\
				(CASE WHEN is_confidential = 'f' THEN last_exp_emp_crc32 ELSE 0 END) as last_exp_emp_crc32,\
				(CASE WHEN is_confidential = 'f' THEN previous_exp_emp_crc32 ELSE 0 END) as previous_exp_emp_crc32,\
				(CASE WHEN months_of_experience != 999999 then months_of_experience  WHEN market_entry_date != 999999 then (to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date  ELSE 999999 END ) as total_months_of_experience,\
				industeries_roles_years,\
				present_industeries_roles_years,\
				last_jb_industry,\
				last_jb_role,\
				exp_roles_list,\
				exp_industries_list,\
				experiences_iso_encoded_list,\
				last_experience_iso_encoded,\
				target_jb_title,\
				emplyment_type_list,\
				emplyment_status_list,\
				target_job_locations_list,\
				target_job_industries_list,\
				notice_period,\
				trgt_job_salary,\
				(CASE WHEN trgt_job_salary < 0 then 0  WHEN trgt_job_salary = 0 then 1  WHEN trgt_job_salary < 500 THEN 2  WHEN trgt_job_salary <= 1000 THEN 3  WHEN trgt_job_salary <= 1500 THEN 4  WHEN trgt_job_salary <= 2000 THEN 5  WHEN trgt_job_salary <= 3000 THEN 6  WHEN trgt_job_salary <= 5000 THEN 7  WHEN trgt_job_salary <= 8000 THEN 8  WHEN trgt_job_salary <= 12000 THEN 9  WHEN trgt_job_salary <= 16000 THEN 10  WHEN trgt_job_salary <= 20000 THEN 11  WHEN trgt_job_salary <= 30000 THEN 12  WHEN trgt_job_salary <= 50000 THEN 13  ELSE 14  END) as salary_range_cluster_list,\
				career_level,\
				(CASE WHEN career_level = 6 THEN 2001 WHEN career_level < 6 THEN (career_level+1000)*2 ELSE career_level END) as career_level_sorted,\
				(CASE WHEN months_of_experience != 999999 then months_of_experience  WHEN market_entry_date != 999999 then (to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date  ELSE 0 END ) as months_of_experience_sorted,\
				objective_txt,\
				residence_location_iso_encoded,\
				LEFT(residence_location_iso_encoded::text,4)::int as residence_country_iso_encoded,\
				gender,\
				date_of_birth,\
				marital_status,\
				graduation_date,\
				visa_status,\
				car_license_countries_list_encoded,\
				edu_degree_list,\
				edu_iso_encoded_list,\
				edu_txt,\
				edu_major,\
				edu_majors_crc32_list,\
				lst_edu_major,\
				edu_institute,\
				edu_institute_crc32_list,\
				lst_edu_institute,\
				last_edu_degree,\
				skills_txt,\
				language_skills_levels_encoded_list,\
				cv_stage,\
				locale,\
				bcc_id,\
				generic_txt,\
				user_id,\
				gpa,\
				(CASE when gpa >= 99999 then 5 when gpa >= 8000 then 4 when gpa >= 6000 then 3 when gpa >= 4000 then 2 when gpa >= 2000 then 1 when gpa >= 0 then 0 end) as gpa_cluster,\
				extract('epoch' FROM date_indexed)::bigint AS date_indexed,\
				parent_bcc_id,\
				has_attachment,\
				has_photo,\
				has_video,\
				has_recommendation,\
				first_name,\
				middle_name,\
				last_name,\
				profile_name,\
				profile_id,\
				(case when referrer_source_id is null then 99999 else referrer_source_id end ) as referrer_source_id,\
				specilaities_list,\
				specilaities_text,\
				specilaities_points,\
				user_generic_field1,\
				 COALESCE(special_needs,99999) AS special_needs,\
				is_primary,\
				email_bouncing_p,\
				extract('epoch' FROM creation_date)::bigint AS creation_date,\
				is_confidential,\
				last_name_ar,\
				last_name_la,\
				first_name_ar,\
				first_name_la,\
				first_name_la || ' ' || last_name_la as full_name_la,\
				first_name_ar || ' ' || last_name_ar as full_name_ar,\
				primary_nationality,\
				(case when LEFT(residence_location_iso_encoded::text,4)::int = primary_nationality  and visa_status not in (1,7) then 0  when  LEFT(residence_location_iso_encoded::text,4)::int in (5560,6257,6254,4850,5857) and primary_nationality in (4751,6547,5769,6347,4854,6159)  then 0 else  primary_nationality end) as primary_nationality_cleaned,\
				nationalities_list,\
				specilaities_platinum,\
				specilaities_gold,\
				specilaities_silver,\
				specilaities_bronze,\
				bcc_text_fields,\
				has_flag,\
				registration_iso,\
				user_type,\
				cv_creation_method,\
				affliate_program_id,\
				cv_no_search_hits,\
				cv_no_submits_to,\
				cv_no_reviews,\
				completness_score,\
				extract('epoch' FROM registration_date)::bigint AS registration_date,\
				bcc_json_fields,\
				referrer_source,\
				user_generic_field2,\
				user_generic_field3,\
				user_generic_field4,\
				(case (CASE WHEN months_of_experience != 999999 then CEIL(months_of_experience/11.999)  WHEN market_entry_date != 999999 then ceil(((to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date)/11.999)  ELSE 999999 END )::bigint when 0 then 1 when 1 then 1 when 2 then 2 when 3 then 3 when 4 then 3 when 5 then 3 when 6 then 4 when 7 then 4 when 8 then 4 when 9 then 4 when 10 then 4 when 999999 then 6 else 5 end) as yrs_exp_cluster_id,\
				(case (CASE WHEN months_of_exp_after_grad != 999999 then CEIL(months_of_exp_after_grad/11.999) ELSE 999999 END )::bigint when 0 then 1 when 1 then 1 when 2 then 2 when 3 then 3 when 4 then 3 when 5 then 3 when 6 then 4 when 7 then 4 when 8 then 4 when 9 then 4 when 10 then 4 when 999999 then 6 else 5 end) as yrs_exp_after_grad_cluster_id,\
				(CASE WHEN completness_score < 20 THEN 1 WHEN completness_score < 40 THEN 2 WHEN completness_score < 60 THEN 3 WHEN completness_score < 80 THEN 4 WHEN completness_score < 500 THEN 5 END ) as completness_scores,\
				(case when premium_account > 0 then 1.35 else 1 end) * (case when extract('epoch' FROM mobile_confirm_date)::bigint > 0 then 1.15 else 1 end) * (case when email_bouncing_p = true then 0.01 else 1 end) * (CASE WHEN (completness_score > 99) THEN 1.5 WHEN (completness_score > 80) THEN (1+completness_score/250)  WHEN (completness_score > 50) THEN (1+completness_score/400) WHEN (completness_score > 25) THEN 0.9 ELSE 0.5 END) * (CASE WHEN (last_login_date > NOW()-INTERVAL '2629800 SECOND')    THEN 1.3 WHEN (last_login_date > NOW()-INTERVAL '7889400 SECOND')    THEN 1.23 WHEN (last_login_date > NOW()-INTERVAL '15778800 SECOND')   THEN 1.17  WHEN (last_login_date > NOW()-INTERVAL '31557600  SECOND')  THEN 1.12 WHEN (last_login_date > NOW()-INTERVAL '63115200  SECOND')  THEN 1.06 ELSE 1 END) * (CASE WHEN (date_indexed > NOW()-INTERVAL '2629800 SECOND')    THEN 1.5 WHEN (date_indexed > NOW()-INTERVAL '7889400 SECOND')    THEN 1.4 WHEN (date_indexed > NOW()-INTERVAL '15778800 SECOND')   THEN 1.3  WHEN (date_indexed > NOW()-INTERVAL '31557600  SECOND')  THEN 1.15 WHEN (date_indexed > NOW()-INTERVAL '63115200  SECOND')  THEN 1.13 ELSE 1 END)::float as cv_search_ranker,\
				(case when premium_account > 0 then 1.35 else 1 end) * (case when extract('epoch' FROM mobile_confirm_date)::bigint > 0 then 1.15 else 1 end) * (case when email_bouncing_p = true then 0.01 else 1 end) * (CASE WHEN (completness_score > 99) THEN 1.5 WHEN (completness_score > 80) THEN (1+completness_score/250)  WHEN (completness_score > 50) THEN (1+completness_score/400) WHEN (completness_score > 25) THEN 0.9 ELSE 0.5 END) * (CASE WHEN (last_login_date > NOW()-INTERVAL '2629800 SECOND')    THEN 1.3 WHEN (last_login_date > NOW()-INTERVAL '7889400 SECOND')    THEN 1.23 WHEN (last_login_date > NOW()-INTERVAL '15778800 SECOND')   THEN 1.17  WHEN (last_login_date > NOW()-INTERVAL '31557600  SECOND')  THEN 1.12 WHEN (last_login_date > NOW()-INTERVAL '63115200  SECOND')  THEN 1.06 ELSE 1 END) * (CASE WHEN (cv_builder_date_modified > NOW()-INTERVAL '2629800 SECOND')    THEN 1.5 WHEN (cv_builder_date_modified > NOW()-INTERVAL '7889400 SECOND')    THEN 1.4 WHEN (cv_builder_date_modified > NOW()-INTERVAL '15778800 SECOND')   THEN 1.3  WHEN (cv_builder_date_modified > NOW()-INTERVAL '31557600  SECOND')  THEN 1.15 WHEN (cv_builder_date_modified > NOW()-INTERVAL '63115200  SECOND')  THEN 1.13 ELSE 1 END)::float as byt_cv_search_ranker,\
				(CASE WHEN (is_primary = TRUE and profile_id > 0) THEN 1 ELSE 0 END) as user_public_profile_enable,\
				(case when email_bouncing_p = true then 0.01 else 1 end) * (1000*(1+0.2*(CASE WHEN has_photo = TRUE THEN 1 ELSE 0 END))) as people_ranker,\
				(CASE WHEN (sections_fields IS NULL OR sections_fields = ' ')   THEN 'tar per con edu exp'  ELSE sections_fields  END) as sections_fields,\
				extract('epoch' FROM cv_completion_date)::bigint AS cv_completion_date,\
				extract('epoch' FROM last_login_date)::bigint AS last_login_date,\
				(CASE WHEN (user_state IS NULL OR user_state = ' ')  THEN 'mini' ELSE user_state END) as user_state,\
				email_enc,\
				email_domain,\
				dependents,\
				cell_phone_enc,\
				home_phone_enc,\
				work_phone_enc,\
				cell_phone,\
				bounce_count,\
				last_salary_value,\
				receive_emails_list,\
				last_exp_emp as last_exp_emp_full,\
				last_exp_emp_crc32 as last_exp_emp_crc32_full,\
				user_lang_preference,\
				premium_account,\
				user_tests,\
				user_courses,\
				hobbies,\
				hopping,\
				gaps,\
				res_visa_status,\
				extract('epoch' FROM mobile_confirm_date)::bigint AS mobile_confirm_date,\
				viewer_ids,\
				extract('epoch' FROM first_bch_deg_date)::bigint AS first_bch_deg_date,\
				gsm,\
				last_gsc_id,\
				previous_gsc_id,\
				all_gsc_ids,\
				all_gsc_ids_txt,\
				last_gst_id,\
				previous_gst_id,\
				all_gst_ids,\
				other_gst_id,\
				target_gst_ids,\
				all_gst_ids_text,\
				highest_degree,\
				disabilities,\
				months_of_exp_after_grad,\
				cv_custom_json,\
				sessions_count,\
				photo_url,\
				unemployed,\
				orginal_nationality,\
				extract('epoch' FROM cv_builder_date_modified)::bigint AS cv_builder_date_modified,\
				trainings,\
				certificates,\
				training_institutes,\
				last_gsi_id,\
				previous_gsi_id,\
				all_gsi_ids,\
				target_jb_roles,\
				all_gsi_ids_txt,\
				1 as index_weight,\
				'ANYKEYWORD' as any_keyword,\
				last_exp_comp_size,\
                		extract('epoch' FROM updated_contact_date)::bigint AS updated_contact_date,\
				extract('epoch' FROM last_exp_start_date)::bigint AS last_exp_start_date\
			FROM \
				cv_index_10 \
			WHERE \
				insertion_date <  (SELECT lst_main_index_start_time FROM spx_delta_separator WHERE index_id = 110 LIMIT 1) \
				 AND cv_id>=$start AND cv_id<=$end

	sql_range_step	=25000
	sql_attr_uint		=cv_id
	sql_field_string		=last_exp_emp
	sql_field_string		=previous_exp_emp
	sql_field_string		=last_exp_title
	sql_attr_uint		=last_exp_title_crc32
	sql_field_string		=previous_exp_title
	sql_attr_uint		=previous_exp_title_crc32
	sql_attr_uint		=last_exp_emp_crc32
	sql_attr_uint		=previous_exp_emp_crc32
	sql_attr_uint		=total_months_of_experience
	sql_attr_multi		=bigint industeries_roles_years from field industeries_roles_years
	sql_attr_multi		=bigint present_industeries_roles_years from field present_industeries_roles_years
	sql_attr_uint		=last_jb_industry
	sql_attr_uint		=last_jb_role
	sql_attr_multi		=bigint exp_roles_list from field exp_roles_list
	sql_attr_multi		=bigint exp_industries_list from field exp_industries_list
	sql_attr_multi		=uint experiences_iso_encoded_list from field experiences_iso_encoded_list
	sql_attr_uint		=last_experience_iso_encoded
	sql_field_string		=target_jb_title
	sql_attr_multi		=uint emplyment_type_list from field emplyment_type_list
	sql_attr_multi		=uint emplyment_status_list from field emplyment_status_list
	sql_attr_multi		=uint target_job_locations_list from field target_job_locations_list
	sql_attr_multi		=uint target_job_industries_list from field target_job_industries_list
	sql_attr_uint		=notice_period
	sql_attr_uint		=trgt_job_salary
	sql_attr_uint		=salary_range_cluster_list
	sql_attr_uint		=career_level
	sql_attr_uint           =career_level_sorted
	sql_attr_uint           =months_of_experience_sorted
	sql_attr_uint		=residence_location_iso_encoded
	sql_attr_uint		=residence_country_iso_encoded
	sql_attr_uint		=gender
	sql_attr_uint		=date_of_birth
	sql_attr_uint		=marital_status
	sql_attr_uint		=graduation_date
	sql_attr_uint		=visa_status
	sql_attr_multi		=uint car_license_countries_list_encoded from field car_license_countries_list_encoded
	sql_attr_multi		=uint edu_degree_list from field edu_degree_list
	sql_attr_multi		=uint edu_iso_encoded_list from field edu_iso_encoded_list
	sql_attr_multi		=uint edu_majors_crc32_list from field edu_majors_crc32_list
	sql_attr_multi		=uint edu_institute_crc32_list from field edu_institute_crc32_list
	sql_attr_uint		=last_edu_degree
	sql_attr_multi		=uint language_skills_levels_encoded_list from field language_skills_levels_encoded_list
	sql_attr_uint		=cv_stage
	sql_attr_uint		=locale
	sql_attr_uint		=bcc_id
	sql_attr_uint		=user_id
	sql_attr_uint		=gpa
	sql_attr_uint		=gpa_cluster
	sql_attr_timestamp		=date_indexed
	sql_attr_uint		=parent_bcc_id
	sql_attr_bool		=has_attachment
	sql_attr_bool		=has_photo
	sql_attr_bool		=has_video
	sql_attr_bool		=has_recommendation
	sql_field_string		=first_name
	sql_field_string		=middle_name
	sql_field_string		=last_name
	sql_field_string		=profile_name
	sql_attr_uint		=profile_id
	sql_attr_uint		=referrer_source_id
	sql_attr_multi		=uint specilaities_list from field specilaities_list
	sql_attr_multi		=bigint specilaities_points from field specilaities_points
	sql_attr_uint		=special_needs
	sql_attr_bool		=is_primary
	sql_attr_bool		=email_bouncing_p
	sql_attr_timestamp		=creation_date
	sql_attr_bool		=is_confidential
	sql_field_string		=last_name_ar
	sql_field_string		=last_name_la
	sql_field_string		=first_name_ar
	sql_field_string		=first_name_la
	sql_attr_uint		=primary_nationality
	sql_attr_uint		=primary_nationality_cleaned
	sql_attr_multi          =uint nationalities_list from field nationalities_list
	sql_attr_uint		=registration_iso
	sql_attr_uint		=user_type
	sql_attr_uint		=cv_creation_method
	sql_attr_uint		=affliate_program_id
	sql_attr_uint		=cv_no_search_hits
	sql_attr_uint		=cv_no_submits_to
	sql_attr_uint		=cv_no_reviews
	sql_attr_uint		=completness_score
	sql_attr_timestamp		=registration_date
	sql_attr_multi		=bigint bcc_json_fields from field bcc_json_fields
	sql_attr_uint		=yrs_exp_cluster_id
	sql_attr_uint		=yrs_exp_after_grad_cluster_id
	sql_attr_uint		=completness_scores
	sql_attr_float		=cv_search_ranker
	sql_attr_float		=byt_cv_search_ranker
	sql_attr_uint		=user_public_profile_enable
	sql_attr_uint		=people_ranker
	sql_attr_timestamp		=cv_completion_date
	sql_attr_timestamp		=last_login_date
	sql_field_string		=user_state
	sql_field_string		=email_enc
	sql_field_string		=email_domain
	sql_attr_uint		=dependents
	sql_field_string		=cell_phone_enc
	sql_field_string		=home_phone_enc
	sql_field_string		=work_phone_enc
	sql_field_string		=cell_phone
	sql_attr_uint		=bounce_count
	sql_attr_uint		=last_salary_value
	sql_field_string		=last_exp_emp_full
	sql_attr_uint		=last_exp_emp_crc32_full
	sql_attr_uint		=user_lang_preference
	sql_attr_uint		=premium_account
	sql_attr_multi		=uint user_tests from field user_tests
	sql_attr_multi		=uint user_courses from field user_courses
	sql_attr_uint		=hopping
	sql_attr_uint		=gaps
	sql_attr_uint		=res_visa_status
	sql_attr_timestamp		=mobile_confirm_date
	sql_attr_timestamp		=first_bch_deg_date
	sql_attr_multi		=uint gsm from field gsm
	sql_attr_uint		=last_gsc_id
	sql_attr_uint		=previous_gsc_id
	sql_attr_multi		=uint all_gsc_ids from field all_gsc_ids
	sql_attr_multi		=uint last_gst_id from field last_gst_id
	sql_attr_multi		=uint previous_gst_id from field previous_gst_id
	sql_attr_multi		=uint all_gst_ids from field all_gst_ids
	sql_attr_multi		=uint other_gst_id from field other_gst_id
	sql_attr_multi		=uint target_gst_ids from field target_gst_ids
	sql_attr_uint		=highest_degree
	sql_attr_multi		=uint disabilities from field disabilities
	sql_attr_uint		=months_of_exp_after_grad
	sql_attr_json		=cv_custom_json
	sql_attr_uint		=sessions_count
	sql_field_string		=photo_url
	sql_attr_bool		=unemployed
	sql_attr_uint		=orginal_nationality
	sql_attr_timestamp		=cv_builder_date_modified
	sql_attr_uint		=last_gsi_id
	sql_attr_uint		=previous_gsi_id
	sql_attr_multi		=uint all_gsi_ids from field all_gsi_ids
	sql_attr_multi		=uint target_jb_roles from field target_jb_roles
	sql_attr_uint       =last_exp_comp_size
    	sql_attr_timestamp  =updated_contact_date
	sql_attr_timestamp  =last_exp_start_date
	sql_attr_uint		=index_weight
	sql_attr_multi		=uint folder_id from ranged-query;  SELECT cv_id, folder_id FROM byt_employer_basket_10 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_employer_basket_10 WHERE cv_id between 65000000 and 65999999
	sql_attr_multi		=uint tag_id from ranged-query;  SELECT cv_id, tag_id FROM byt_item_tags_10 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_item_tags_10 WHERE cv_id between 65000000 and 65999999
	sql_attr_multi		=uint note_group_id from ranged-query;  SELECT cv_id, group_id FROM byt_comments_10 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_comments_10 WHERE cv_id between 65000000 and 65999999
}

		index cvMainIndexStemmed_10_5
		{
			type			= plain
			source 			= cvMainIndexStemmed_10_5_src
			path 			= /home/sphinx/sphinx/var/data/cvMainIndexStemmed_10_5
			morphology   = stem_en,stem_ar
			wordforms  = /home/sphinx/sphinx/var/data/wordforms.txt
			dict=keywords
			index_sp  = 1
			index_zones		= b_*, is_agency, special_needs, referrer_source
			stopwords		= en,ar
			exceptions		= /home/sphinx/sphinx/var/data/exceptions.txt
			min_word_len		= 1
			charset_table		= non_cjk
			index_exact_words	= 1
			
			ngram_len		= 1
			#ngram_chars		=  non_cjk
			html_strip				= 1
			preopen				= 1
		}		
		


source cvMainIndex_11_0_src {
	type		=pgsql
	sql_host	=host
	sql_user	=user
	sql_pass	=pass
	sql_db		=database
	sql_port	=9988

	sql_query_pre	=SET client_encoding TO 'UTF8'
	sql_query_pre	= SET NAMES 'UTF8'
	sql_ranged_throttle	=1000
	sql_query_range	= SELECT MIN(cv_id),MAX(cv_id) FROM cv_index_11 WHERE cv_id between 66000000 and 66999999
	sql_query	=SELECT \
				cv_id as id,\
				cv_id,\
				experiences_titles,\
				experiences_description,\
				experiences_employers,\
				last_exp_desc,\
				(CASE WHEN is_confidential = 'f' THEN last_exp_emp ELSE NULL END) as last_exp_emp,\
				(CASE WHEN is_confidential = 'f' THEN previous_exp_emp ELSE NULL END) as previous_exp_emp,\
				last_exp_title,\
				last_exp_title_crc32,\
				previous_exp_title,\
				previous_exp_title_crc32,\
				(CASE WHEN is_confidential = 'f' THEN last_exp_emp_crc32 ELSE 0 END) as last_exp_emp_crc32,\
				(CASE WHEN is_confidential = 'f' THEN previous_exp_emp_crc32 ELSE 0 END) as previous_exp_emp_crc32,\
				(CASE WHEN months_of_experience != 999999 then months_of_experience  WHEN market_entry_date != 999999 then (to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date  ELSE 999999 END ) as total_months_of_experience,\
				industeries_roles_years,\
				present_industeries_roles_years,\
				last_jb_industry,\
				last_jb_role,\
				exp_roles_list,\
				exp_industries_list,\
				experiences_iso_encoded_list,\
				last_experience_iso_encoded,\
				target_jb_title,\
				emplyment_type_list,\
				emplyment_status_list,\
				target_job_locations_list,\
				target_job_industries_list,\
				notice_period,\
				trgt_job_salary,\
				(CASE WHEN trgt_job_salary < 0 then 0  WHEN trgt_job_salary = 0 then 1  WHEN trgt_job_salary < 500 THEN 2  WHEN trgt_job_salary <= 1000 THEN 3  WHEN trgt_job_salary <= 1500 THEN 4  WHEN trgt_job_salary <= 2000 THEN 5  WHEN trgt_job_salary <= 3000 THEN 6  WHEN trgt_job_salary <= 5000 THEN 7  WHEN trgt_job_salary <= 8000 THEN 8  WHEN trgt_job_salary <= 12000 THEN 9  WHEN trgt_job_salary <= 16000 THEN 10  WHEN trgt_job_salary <= 20000 THEN 11  WHEN trgt_job_salary <= 30000 THEN 12  WHEN trgt_job_salary <= 50000 THEN 13  ELSE 14  END) as salary_range_cluster_list,\
				career_level,\
				(CASE WHEN career_level = 6 THEN 2001 WHEN career_level < 6 THEN (career_level+1000)*2 ELSE career_level END) as career_level_sorted,\
				(CASE WHEN months_of_experience != 999999 then months_of_experience  WHEN market_entry_date != 999999 then (to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date  ELSE 0 END ) as months_of_experience_sorted,\
				objective_txt,\
				residence_location_iso_encoded,\
				LEFT(residence_location_iso_encoded::text,4)::int as residence_country_iso_encoded,\
				gender,\
				date_of_birth,\
				marital_status,\
				graduation_date,\
				visa_status,\
				car_license_countries_list_encoded,\
				edu_degree_list,\
				edu_iso_encoded_list,\
				edu_txt,\
				edu_major,\
				edu_majors_crc32_list,\
				lst_edu_major,\
				edu_institute,\
				edu_institute_crc32_list,\
				lst_edu_institute,\
				last_edu_degree,\
				skills_txt,\
				language_skills_levels_encoded_list,\
				cv_stage,\
				locale,\
				bcc_id,\
				generic_txt,\
				user_id,\
				gpa,\
				(CASE when gpa >= 99999 then 5 when gpa >= 8000 then 4 when gpa >= 6000 then 3 when gpa >= 4000 then 2 when gpa >= 2000 then 1 when gpa >= 0 then 0 end) as gpa_cluster,\
				extract('epoch' FROM date_indexed)::bigint AS date_indexed,\
				parent_bcc_id,\
				has_attachment,\
				has_photo,\
				has_video,\
				has_recommendation,\
				first_name,\
				middle_name,\
				last_name,\
				profile_name,\
				profile_id,\
				(case when referrer_source_id is null then 99999 else referrer_source_id end ) as referrer_source_id,\
				specilaities_list,\
				specilaities_text,\
				specilaities_points,\
				user_generic_field1,\
				 COALESCE(special_needs,99999) AS special_needs,\
				is_primary,\
				email_bouncing_p,\
				extract('epoch' FROM creation_date)::bigint AS creation_date,\
				is_confidential,\
				last_name_ar,\
				last_name_la,\
				first_name_ar,\
				first_name_la,\
				first_name_la || ' ' || last_name_la as full_name_la,\
				first_name_ar || ' ' || last_name_ar as full_name_ar,\
				primary_nationality,\
				(case when LEFT(residence_location_iso_encoded::text,4)::int = primary_nationality  and visa_status not in (1,7) then 0  when  LEFT(residence_location_iso_encoded::text,4)::int in (5560,6257,6254,4850,5857) and primary_nationality in (4751,6547,5769,6347,4854,6159)  then 0 else  primary_nationality end) as primary_nationality_cleaned,\
				nationalities_list,\
				specilaities_platinum,\
				specilaities_gold,\
				specilaities_silver,\
				specilaities_bronze,\
				bcc_text_fields,\
				has_flag,\
				registration_iso,\
				user_type,\
				cv_creation_method,\
				affliate_program_id,\
				cv_no_search_hits,\
				cv_no_submits_to,\
				cv_no_reviews,\
				completness_score,\
				extract('epoch' FROM registration_date)::bigint AS registration_date,\
				bcc_json_fields,\
				referrer_source,\
				user_generic_field2,\
				user_generic_field3,\
				user_generic_field4,\
				(case (CASE WHEN months_of_experience != 999999 then CEIL(months_of_experience/11.999)  WHEN market_entry_date != 999999 then ceil(((to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date)/11.999)  ELSE 999999 END )::bigint when 0 then 1 when 1 then 1 when 2 then 2 when 3 then 3 when 4 then 3 when 5 then 3 when 6 then 4 when 7 then 4 when 8 then 4 when 9 then 4 when 10 then 4 when 999999 then 6 else 5 end) as yrs_exp_cluster_id,\
				(case (CASE WHEN months_of_exp_after_grad != 999999 then CEIL(months_of_exp_after_grad/11.999) ELSE 999999 END )::bigint when 0 then 1 when 1 then 1 when 2 then 2 when 3 then 3 when 4 then 3 when 5 then 3 when 6 then 4 when 7 then 4 when 8 then 4 when 9 then 4 when 10 then 4 when 999999 then 6 else 5 end) as yrs_exp_after_grad_cluster_id,\
				(CASE WHEN completness_score < 20 THEN 1 WHEN completness_score < 40 THEN 2 WHEN completness_score < 60 THEN 3 WHEN completness_score < 80 THEN 4 WHEN completness_score < 500 THEN 5 END ) as completness_scores,\
				(case when premium_account > 0 then 1.35 else 1 end) * (case when extract('epoch' FROM mobile_confirm_date)::bigint > 0 then 1.15 else 1 end) * (case when email_bouncing_p = true then 0.01 else 1 end) * (CASE WHEN (completness_score > 99) THEN 1.5 WHEN (completness_score > 80) THEN (1+completness_score/250)  WHEN (completness_score > 50) THEN (1+completness_score/400) WHEN (completness_score > 25) THEN 0.9 ELSE 0.5 END) * (CASE WHEN (last_login_date > NOW()-INTERVAL '2629800 SECOND')    THEN 1.3 WHEN (last_login_date > NOW()-INTERVAL '7889400 SECOND')    THEN 1.23 WHEN (last_login_date > NOW()-INTERVAL '15778800 SECOND')   THEN 1.17  WHEN (last_login_date > NOW()-INTERVAL '31557600  SECOND')  THEN 1.12 WHEN (last_login_date > NOW()-INTERVAL '63115200  SECOND')  THEN 1.06 ELSE 1 END) * (CASE WHEN (date_indexed > NOW()-INTERVAL '2629800 SECOND')    THEN 1.5 WHEN (date_indexed > NOW()-INTERVAL '7889400 SECOND')    THEN 1.4 WHEN (date_indexed > NOW()-INTERVAL '15778800 SECOND')   THEN 1.3  WHEN (date_indexed > NOW()-INTERVAL '31557600  SECOND')  THEN 1.15 WHEN (date_indexed > NOW()-INTERVAL '63115200  SECOND')  THEN 1.13 ELSE 1 END)::float as cv_search_ranker,\
				(case when premium_account > 0 then 1.35 else 1 end) * (case when extract('epoch' FROM mobile_confirm_date)::bigint > 0 then 1.15 else 1 end) * (case when email_bouncing_p = true then 0.01 else 1 end) * (CASE WHEN (completness_score > 99) THEN 1.5 WHEN (completness_score > 80) THEN (1+completness_score/250)  WHEN (completness_score > 50) THEN (1+completness_score/400) WHEN (completness_score > 25) THEN 0.9 ELSE 0.5 END) * (CASE WHEN (last_login_date > NOW()-INTERVAL '2629800 SECOND')    THEN 1.3 WHEN (last_login_date > NOW()-INTERVAL '7889400 SECOND')    THEN 1.23 WHEN (last_login_date > NOW()-INTERVAL '15778800 SECOND')   THEN 1.17  WHEN (last_login_date > NOW()-INTERVAL '31557600  SECOND')  THEN 1.12 WHEN (last_login_date > NOW()-INTERVAL '63115200  SECOND')  THEN 1.06 ELSE 1 END) * (CASE WHEN (cv_builder_date_modified > NOW()-INTERVAL '2629800 SECOND')    THEN 1.5 WHEN (cv_builder_date_modified > NOW()-INTERVAL '7889400 SECOND')    THEN 1.4 WHEN (cv_builder_date_modified > NOW()-INTERVAL '15778800 SECOND')   THEN 1.3  WHEN (cv_builder_date_modified > NOW()-INTERVAL '31557600  SECOND')  THEN 1.15 WHEN (cv_builder_date_modified > NOW()-INTERVAL '63115200  SECOND')  THEN 1.13 ELSE 1 END)::float as byt_cv_search_ranker,\
				(CASE WHEN (is_primary = TRUE and profile_id > 0) THEN 1 ELSE 0 END) as user_public_profile_enable,\
				(case when email_bouncing_p = true then 0.01 else 1 end) * (1000*(1+0.2*(CASE WHEN has_photo = TRUE THEN 1 ELSE 0 END))) as people_ranker,\
				(CASE WHEN (sections_fields IS NULL OR sections_fields = ' ')   THEN 'tar per con edu exp'  ELSE sections_fields  END) as sections_fields,\
				extract('epoch' FROM cv_completion_date)::bigint AS cv_completion_date,\
				extract('epoch' FROM last_login_date)::bigint AS last_login_date,\
				(CASE WHEN (user_state IS NULL OR user_state = ' ')  THEN 'mini' ELSE user_state END) as user_state,\
				email_enc,\
				email_domain,\
				dependents,\
				cell_phone_enc,\
				home_phone_enc,\
				work_phone_enc,\
				cell_phone,\
				bounce_count,\
				last_salary_value,\
				receive_emails_list,\
				last_exp_emp as last_exp_emp_full,\
				last_exp_emp_crc32 as last_exp_emp_crc32_full,\
				user_lang_preference,\
				premium_account,\
				user_tests,\
				user_courses,\
				hobbies,\
				hopping,\
				gaps,\
				res_visa_status,\
				extract('epoch' FROM mobile_confirm_date)::bigint AS mobile_confirm_date,\
				viewer_ids,\
				extract('epoch' FROM first_bch_deg_date)::bigint AS first_bch_deg_date,\
				gsm,\
				last_gsc_id,\
				previous_gsc_id,\
				all_gsc_ids,\
				all_gsc_ids_txt,\
				last_gst_id,\
				previous_gst_id,\
				all_gst_ids,\
				other_gst_id,\
				target_gst_ids,\
				all_gst_ids_text,\
				highest_degree,\
				disabilities,\
				months_of_exp_after_grad,\
				cv_custom_json,\
				sessions_count,\
				photo_url,\
				unemployed,\
				orginal_nationality,\
				extract('epoch' FROM cv_builder_date_modified)::bigint AS cv_builder_date_modified,\
				trainings,\
				certificates,\
				training_institutes,\
				last_gsi_id,\
				previous_gsi_id,\
				all_gsi_ids,\
				target_jb_roles,\
				all_gsi_ids_txt,\
				3 as index_weight,\
				'ANYKEYWORD' as any_keyword,\
				last_exp_comp_size,\
                		extract('epoch' FROM updated_contact_date)::bigint AS updated_contact_date,\
				extract('epoch' FROM last_exp_start_date)::bigint AS last_exp_start_date\
			FROM \
				cv_index_11 \
			WHERE \
				insertion_date <  (SELECT lst_main_index_start_time FROM spx_delta_separator WHERE index_id = 111 LIMIT 1) \
				 AND cv_id>=$start AND cv_id<=$end

	sql_range_step	=25000
	sql_attr_uint		=cv_id
	sql_field_string		=last_exp_emp
	sql_field_string		=previous_exp_emp
	sql_field_string		=last_exp_title
	sql_attr_uint		=last_exp_title_crc32
	sql_field_string		=previous_exp_title
	sql_attr_uint		=previous_exp_title_crc32
	sql_attr_uint		=last_exp_emp_crc32
	sql_attr_uint		=previous_exp_emp_crc32
	sql_attr_uint		=total_months_of_experience
	sql_attr_multi		=bigint industeries_roles_years from field industeries_roles_years
	sql_attr_multi		=bigint present_industeries_roles_years from field present_industeries_roles_years
	sql_attr_uint		=last_jb_industry
	sql_attr_uint		=last_jb_role
	sql_attr_multi		=bigint exp_roles_list from field exp_roles_list
	sql_attr_multi		=bigint exp_industries_list from field exp_industries_list
	sql_attr_multi		=uint experiences_iso_encoded_list from field experiences_iso_encoded_list
	sql_attr_uint		=last_experience_iso_encoded
	sql_field_string		=target_jb_title
	sql_attr_multi		=uint emplyment_type_list from field emplyment_type_list
	sql_attr_multi		=uint emplyment_status_list from field emplyment_status_list
	sql_attr_multi		=uint target_job_locations_list from field target_job_locations_list
	sql_attr_multi		=uint target_job_industries_list from field target_job_industries_list
	sql_attr_uint		=notice_period
	sql_attr_uint		=trgt_job_salary
	sql_attr_uint		=salary_range_cluster_list
	sql_attr_uint		=career_level
        sql_attr_uint   	=career_level_sorted
        sql_attr_uint	        =months_of_experience_sorted
	sql_attr_uint		=residence_location_iso_encoded
	sql_attr_uint		=residence_country_iso_encoded
	sql_attr_uint		=gender
	sql_attr_uint		=date_of_birth
	sql_attr_uint		=marital_status
	sql_attr_uint		=graduation_date
	sql_attr_uint		=visa_status
	sql_attr_multi		=uint car_license_countries_list_encoded from field car_license_countries_list_encoded
	sql_attr_multi		=uint edu_degree_list from field edu_degree_list
	sql_attr_multi		=uint edu_iso_encoded_list from field edu_iso_encoded_list
	sql_attr_multi		=uint edu_majors_crc32_list from field edu_majors_crc32_list
	sql_attr_multi		=uint edu_institute_crc32_list from field edu_institute_crc32_list
	sql_attr_uint		=last_edu_degree
	sql_attr_multi		=uint language_skills_levels_encoded_list from field language_skills_levels_encoded_list
	sql_attr_uint		=cv_stage
	sql_attr_uint		=locale
	sql_attr_uint		=bcc_id
	sql_attr_uint		=user_id
	sql_attr_uint		=gpa
	sql_attr_uint		=gpa_cluster
	sql_attr_timestamp		=date_indexed
	sql_attr_uint		=parent_bcc_id
	sql_attr_bool		=has_attachment
	sql_attr_bool		=has_photo
	sql_attr_bool		=has_video
	sql_attr_bool		=has_recommendation
	sql_field_string		=first_name
	sql_field_string		=middle_name
	sql_field_string		=last_name
	sql_field_string		=profile_name
	sql_attr_uint		=profile_id
	sql_attr_uint		=referrer_source_id
	sql_attr_multi		=uint specilaities_list from field specilaities_list
	sql_attr_multi		=bigint specilaities_points from field specilaities_points
	sql_attr_uint		=special_needs
	sql_attr_bool		=is_primary
	sql_attr_bool		=email_bouncing_p
	sql_attr_timestamp		=creation_date
	sql_attr_bool		=is_confidential
	sql_field_string		=last_name_ar
	sql_field_string		=last_name_la
	sql_field_string		=first_name_ar
	sql_field_string		=first_name_la
	sql_attr_uint		=primary_nationality
	sql_attr_uint		=primary_nationality_cleaned
	sql_attr_multi          =uint nationalities_list from field nationalities_list
	sql_attr_uint		=registration_iso
	sql_attr_uint		=user_type
	sql_attr_uint		=cv_creation_method
	sql_attr_uint		=affliate_program_id
	sql_attr_uint		=cv_no_search_hits
	sql_attr_uint		=cv_no_submits_to
	sql_attr_uint		=cv_no_reviews
	sql_attr_uint		=completness_score
	sql_attr_timestamp		=registration_date
	sql_attr_multi		=bigint bcc_json_fields from field bcc_json_fields
	sql_attr_uint		=yrs_exp_cluster_id
	sql_attr_uint		=yrs_exp_after_grad_cluster_id
	sql_attr_uint		=completness_scores
	sql_attr_float		=cv_search_ranker
	sql_attr_float		=byt_cv_search_ranker
	sql_attr_uint		=user_public_profile_enable
	sql_attr_uint		=people_ranker
	sql_attr_timestamp		=cv_completion_date
	sql_attr_timestamp		=last_login_date
	sql_field_string		=user_state
	sql_field_string		=email_enc
	sql_field_string		=email_domain
	sql_attr_uint		=dependents
	sql_field_string		=cell_phone_enc
	sql_field_string		=home_phone_enc
	sql_field_string		=work_phone_enc
	sql_field_string		=cell_phone
	sql_attr_uint		=bounce_count
	sql_attr_uint		=last_salary_value
	sql_field_string		=last_exp_emp_full
	sql_attr_uint		=last_exp_emp_crc32_full
	sql_attr_uint		=user_lang_preference
	sql_attr_uint		=premium_account
	sql_attr_multi		=uint user_tests from field user_tests
	sql_attr_multi		=uint user_courses from field user_courses
	sql_attr_uint		=hopping
	sql_attr_uint		=gaps
	sql_attr_uint		=res_visa_status
	sql_attr_timestamp		=mobile_confirm_date
	sql_attr_timestamp		=first_bch_deg_date
	sql_attr_multi		=uint gsm from field gsm
	sql_attr_uint		=last_gsc_id
	sql_attr_uint		=previous_gsc_id
	sql_attr_multi		=uint all_gsc_ids from field all_gsc_ids
	sql_attr_multi		=uint last_gst_id from field last_gst_id
	sql_attr_multi		=uint previous_gst_id from field previous_gst_id
	sql_attr_multi		=uint all_gst_ids from field all_gst_ids
	sql_attr_multi		=uint other_gst_id from field other_gst_id
	sql_attr_multi		=uint target_gst_ids from field target_gst_ids
	sql_attr_uint		=highest_degree
	sql_attr_multi		=uint disabilities from field disabilities
	sql_attr_uint		=months_of_exp_after_grad
	sql_attr_json		=cv_custom_json
	sql_attr_uint		=sessions_count
	sql_field_string		=photo_url
	sql_attr_bool		=unemployed
	sql_attr_uint		=orginal_nationality
	sql_attr_timestamp		=cv_builder_date_modified
	sql_attr_uint		=last_gsi_id
	sql_attr_uint		=previous_gsi_id
	sql_attr_multi		=uint all_gsi_ids from field all_gsi_ids
	sql_attr_multi		=uint target_jb_roles from field target_jb_roles
    	sql_attr_uint       =last_exp_comp_size
   	sql_attr_timestamp  =updated_contact_date
	sql_attr_timestamp  =last_exp_start_date
	sql_attr_uint		=index_weight
	sql_attr_multi		=uint folder_id from ranged-query;  SELECT cv_id, folder_id FROM byt_employer_basket_11 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_employer_basket_11 WHERE cv_id between 66000000 and 66999999
	sql_attr_multi		=uint tag_id from ranged-query;  SELECT cv_id, tag_id FROM byt_item_tags_11 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_item_tags_11 WHERE cv_id between 66000000 and 66999999
	sql_attr_multi		=uint note_group_id from ranged-query;  SELECT cv_id, group_id FROM byt_comments_11 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_comments_11 WHERE cv_id between 66000000 and 66999999
}

		index cvMainIndex_11_0
		{
			type			= plain
			source 			= cvMainIndex_11_0_src
			path 			= /home/sphinx/sphinx/var/data/cvMainIndex_11_0
			morphology   = none
			dict=keywords
			index_sp  = 1
			index_zones		= b_*, is_agency, special_needs, referrer_source
			stopwords		= en,ar
			exceptions		= /home/sphinx/sphinx/var/data/exceptions.txt
			min_word_len		= 1
			charset_table		= non_cjk
			ngram_len		= 1
			#ngram_chars		=  non_cjk
			inplace_enable		= 0
			html_strip				= 1
			preopen				= 1
		}		

	source cvMainIndexStemmed_11_0_src {
	type		=pgsql
	sql_host	=host
	sql_user	=user
	sql_pass	=pass
	sql_db		=database
	sql_port	=9988

	sql_query_pre	=SET client_encoding TO 'UTF8'
	sql_query_pre	= SET NAMES 'UTF8'
	sql_ranged_throttle	=1000
	sql_query_range	= SELECT MIN(cv_id),MAX(cv_id) FROM cv_index_11 WHERE cv_id between 66000000 and 66999999
	sql_query	=SELECT \
				cv_id as id,\
				cv_id,\
				experiences_titles,\
				experiences_description,\
				experiences_employers,\
				last_exp_desc,\
				(CASE WHEN is_confidential = 'f' THEN last_exp_emp ELSE NULL END) as last_exp_emp,\
				(CASE WHEN is_confidential = 'f' THEN previous_exp_emp ELSE NULL END) as previous_exp_emp,\
				last_exp_title,\
				last_exp_title_crc32,\
				previous_exp_title,\
				previous_exp_title_crc32,\
				(CASE WHEN is_confidential = 'f' THEN last_exp_emp_crc32 ELSE 0 END) as last_exp_emp_crc32,\
				(CASE WHEN is_confidential = 'f' THEN previous_exp_emp_crc32 ELSE 0 END) as previous_exp_emp_crc32,\
				(CASE WHEN months_of_experience != 999999 then months_of_experience  WHEN market_entry_date != 999999 then (to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date  ELSE 999999 END ) as total_months_of_experience,\
				industeries_roles_years,\
				present_industeries_roles_years,\
				last_jb_industry,\
				last_jb_role,\
				exp_roles_list,\
				exp_industries_list,\
				experiences_iso_encoded_list,\
				last_experience_iso_encoded,\
				target_jb_title,\
				emplyment_type_list,\
				emplyment_status_list,\
				target_job_locations_list,\
				target_job_industries_list,\
				notice_period,\
				trgt_job_salary,\
				(CASE WHEN trgt_job_salary < 0 then 0  WHEN trgt_job_salary = 0 then 1  WHEN trgt_job_salary < 500 THEN 2  WHEN trgt_job_salary <= 1000 THEN 3  WHEN trgt_job_salary <= 1500 THEN 4  WHEN trgt_job_salary <= 2000 THEN 5  WHEN trgt_job_salary <= 3000 THEN 6  WHEN trgt_job_salary <= 5000 THEN 7  WHEN trgt_job_salary <= 8000 THEN 8  WHEN trgt_job_salary <= 12000 THEN 9  WHEN trgt_job_salary <= 16000 THEN 10  WHEN trgt_job_salary <= 20000 THEN 11  WHEN trgt_job_salary <= 30000 THEN 12  WHEN trgt_job_salary <= 50000 THEN 13  ELSE 14  END) as salary_range_cluster_list,\
				career_level,\
				(CASE WHEN career_level = 6 THEN 2001 WHEN career_level < 6 THEN (career_level+1000)*2 ELSE career_level END) as career_level_sorted,\
				(CASE WHEN months_of_experience != 999999 then months_of_experience  WHEN market_entry_date != 999999 then (to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date  ELSE 0 END ) as months_of_experience_sorted,\
				objective_txt,\
				residence_location_iso_encoded,\
				LEFT(residence_location_iso_encoded::text,4)::int as residence_country_iso_encoded,\
				gender,\
				date_of_birth,\
				marital_status,\
				graduation_date,\
				visa_status,\
				car_license_countries_list_encoded,\
				edu_degree_list,\
				edu_iso_encoded_list,\
				edu_txt,\
				edu_major,\
				edu_majors_crc32_list,\
				lst_edu_major,\
				edu_institute,\
				edu_institute_crc32_list,\
				lst_edu_institute,\
				last_edu_degree,\
				skills_txt,\
				language_skills_levels_encoded_list,\
				cv_stage,\
				locale,\
				bcc_id,\
				generic_txt,\
				user_id,\
				gpa,\
				(CASE when gpa >= 99999 then 5 when gpa >= 8000 then 4 when gpa >= 6000 then 3 when gpa >= 4000 then 2 when gpa >= 2000 then 1 when gpa >= 0 then 0 end) as gpa_cluster,\
				extract('epoch' FROM date_indexed)::bigint AS date_indexed,\
				parent_bcc_id,\
				has_attachment,\
				has_photo,\
				has_video,\
				has_recommendation,\
				first_name,\
				middle_name,\
				last_name,\
				profile_name,\
				profile_id,\
				(case when referrer_source_id is null then 99999 else referrer_source_id end ) as referrer_source_id,\
				specilaities_list,\
				specilaities_text,\
				specilaities_points,\
				user_generic_field1,\
				 COALESCE(special_needs,99999) AS special_needs,\
				is_primary,\
				email_bouncing_p,\
				extract('epoch' FROM creation_date)::bigint AS creation_date,\
				is_confidential,\
				last_name_ar,\
				last_name_la,\
				first_name_ar,\
				first_name_la,\
				first_name_la || ' ' || last_name_la as full_name_la,\
				first_name_ar || ' ' || last_name_ar as full_name_ar,\
				primary_nationality,\
				(case when LEFT(residence_location_iso_encoded::text,4)::int = primary_nationality  and visa_status not in (1,7) then 0  when  LEFT(residence_location_iso_encoded::text,4)::int in (5560,6257,6254,4850,5857) and primary_nationality in (4751,6547,5769,6347,4854,6159)  then 0 else  primary_nationality end) as primary_nationality_cleaned,\
				nationalities_list,\
				specilaities_platinum,\
				specilaities_gold,\
				specilaities_silver,\
				specilaities_bronze,\
				bcc_text_fields,\
				has_flag,\
				registration_iso,\
				user_type,\
				cv_creation_method,\
				affliate_program_id,\
				cv_no_search_hits,\
				cv_no_submits_to,\
				cv_no_reviews,\
				completness_score,\
				extract('epoch' FROM registration_date)::bigint AS registration_date,\
				bcc_json_fields,\
				referrer_source,\
				user_generic_field2,\
				user_generic_field3,\
				user_generic_field4,\
				(case (CASE WHEN months_of_experience != 999999 then CEIL(months_of_experience/11.999)  WHEN market_entry_date != 999999 then ceil(((to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date)/11.999)  ELSE 999999 END )::bigint when 0 then 1 when 1 then 1 when 2 then 2 when 3 then 3 when 4 then 3 when 5 then 3 when 6 then 4 when 7 then 4 when 8 then 4 when 9 then 4 when 10 then 4 when 999999 then 6 else 5 end) as yrs_exp_cluster_id,\
				(case (CASE WHEN months_of_exp_after_grad != 999999 then CEIL(months_of_exp_after_grad/11.999) ELSE 999999 END )::bigint when 0 then 1 when 1 then 1 when 2 then 2 when 3 then 3 when 4 then 3 when 5 then 3 when 6 then 4 when 7 then 4 when 8 then 4 when 9 then 4 when 10 then 4 when 999999 then 6 else 5 end) as yrs_exp_after_grad_cluster_id,\
				(CASE WHEN completness_score < 20 THEN 1 WHEN completness_score < 40 THEN 2 WHEN completness_score < 60 THEN 3 WHEN completness_score < 80 THEN 4 WHEN completness_score < 500 THEN 5 END ) as completness_scores,\
				(case when premium_account > 0 then 1.35 else 1 end) * (case when extract('epoch' FROM mobile_confirm_date)::bigint > 0 then 1.15 else 1 end) * (case when email_bouncing_p = true then 0.01 else 1 end) * (CASE WHEN (completness_score > 99) THEN 1.5 WHEN (completness_score > 80) THEN (1+completness_score/250)  WHEN (completness_score > 50) THEN (1+completness_score/400) WHEN (completness_score > 25) THEN 0.9 ELSE 0.5 END) * (CASE WHEN (last_login_date > NOW()-INTERVAL '2629800 SECOND')    THEN 1.3 WHEN (last_login_date > NOW()-INTERVAL '7889400 SECOND')    THEN 1.23 WHEN (last_login_date > NOW()-INTERVAL '15778800 SECOND')   THEN 1.17  WHEN (last_login_date > NOW()-INTERVAL '31557600  SECOND')  THEN 1.12 WHEN (last_login_date > NOW()-INTERVAL '63115200  SECOND')  THEN 1.06 ELSE 1 END) * (CASE WHEN (date_indexed > NOW()-INTERVAL '2629800 SECOND')    THEN 1.5 WHEN (date_indexed > NOW()-INTERVAL '7889400 SECOND')    THEN 1.4 WHEN (date_indexed > NOW()-INTERVAL '15778800 SECOND')   THEN 1.3  WHEN (date_indexed > NOW()-INTERVAL '31557600  SECOND')  THEN 1.15 WHEN (date_indexed > NOW()-INTERVAL '63115200  SECOND')  THEN 1.13 ELSE 1 END)::float as cv_search_ranker,\
				(case when premium_account > 0 then 1.35 else 1 end) * (case when extract('epoch' FROM mobile_confirm_date)::bigint > 0 then 1.15 else 1 end) * (case when email_bouncing_p = true then 0.01 else 1 end) * (CASE WHEN (completness_score > 99) THEN 1.5 WHEN (completness_score > 80) THEN (1+completness_score/250)  WHEN (completness_score > 50) THEN (1+completness_score/400) WHEN (completness_score > 25) THEN 0.9 ELSE 0.5 END) * (CASE WHEN (last_login_date > NOW()-INTERVAL '2629800 SECOND')    THEN 1.3 WHEN (last_login_date > NOW()-INTERVAL '7889400 SECOND')    THEN 1.23 WHEN (last_login_date > NOW()-INTERVAL '15778800 SECOND')   THEN 1.17  WHEN (last_login_date > NOW()-INTERVAL '31557600  SECOND')  THEN 1.12 WHEN (last_login_date > NOW()-INTERVAL '63115200  SECOND')  THEN 1.06 ELSE 1 END) * (CASE WHEN (cv_builder_date_modified > NOW()-INTERVAL '2629800 SECOND')    THEN 1.5 WHEN (cv_builder_date_modified > NOW()-INTERVAL '7889400 SECOND')    THEN 1.4 WHEN (cv_builder_date_modified > NOW()-INTERVAL '15778800 SECOND')   THEN 1.3  WHEN (cv_builder_date_modified > NOW()-INTERVAL '31557600  SECOND')  THEN 1.15 WHEN (cv_builder_date_modified > NOW()-INTERVAL '63115200  SECOND')  THEN 1.13 ELSE 1 END)::float as byt_cv_search_ranker,\
				(CASE WHEN (is_primary = TRUE and profile_id > 0) THEN 1 ELSE 0 END) as user_public_profile_enable,\
				(case when email_bouncing_p = true then 0.01 else 1 end) * (1000*(1+0.2*(CASE WHEN has_photo = TRUE THEN 1 ELSE 0 END))) as people_ranker,\
				(CASE WHEN (sections_fields IS NULL OR sections_fields = ' ')   THEN 'tar per con edu exp'  ELSE sections_fields  END) as sections_fields,\
				extract('epoch' FROM cv_completion_date)::bigint AS cv_completion_date,\
				extract('epoch' FROM last_login_date)::bigint AS last_login_date,\
				(CASE WHEN (user_state IS NULL OR user_state = ' ')  THEN 'mini' ELSE user_state END) as user_state,\
				email_enc,\
				email_domain,\
				dependents,\
				cell_phone_enc,\
				home_phone_enc,\
				work_phone_enc,\
				cell_phone,\
				bounce_count,\
				last_salary_value,\
				receive_emails_list,\
				last_exp_emp as last_exp_emp_full,\
				last_exp_emp_crc32 as last_exp_emp_crc32_full,\
				user_lang_preference,\
				premium_account,\
				user_tests,\
				user_courses,\
				hobbies,\
				hopping,\
				gaps,\
				res_visa_status,\
				extract('epoch' FROM mobile_confirm_date)::bigint AS mobile_confirm_date,\
				viewer_ids,\
				extract('epoch' FROM first_bch_deg_date)::bigint AS first_bch_deg_date,\
				gsm,\
				last_gsc_id,\
				previous_gsc_id,\
				all_gsc_ids,\
				all_gsc_ids_txt,\
				last_gst_id,\
				previous_gst_id,\
				all_gst_ids,\
				other_gst_id,\
				target_gst_ids,\
				all_gst_ids_text,\
				highest_degree,\
				disabilities,\
				months_of_exp_after_grad,\
				cv_custom_json,\
				sessions_count,\
				photo_url,\
				unemployed,\
				orginal_nationality,\
				extract('epoch' FROM cv_builder_date_modified)::bigint AS cv_builder_date_modified,\
				trainings,\
				certificates,\
				training_institutes,\
				last_gsi_id,\
				previous_gsi_id,\
				all_gsi_ids,\
				target_jb_roles,\
				all_gsi_ids_txt,\
				1 as index_weight,\
				'ANYKEYWORD' as any_keyword,\
				last_exp_comp_size,\
                		extract('epoch' FROM updated_contact_date)::bigint AS updated_contact_date,\
				extract('epoch' FROM last_exp_start_date)::bigint AS last_exp_start_date\
			FROM \
				cv_index_11 \
			WHERE \
				insertion_date <  (SELECT lst_main_index_start_time FROM spx_delta_separator WHERE index_id = 111 LIMIT 1) \
				 AND cv_id>=$start AND cv_id<=$end

	sql_range_step	=25000
	sql_attr_uint		=cv_id
	sql_field_string		=last_exp_emp
	sql_field_string		=previous_exp_emp
	sql_field_string		=last_exp_title
	sql_attr_uint		=last_exp_title_crc32
	sql_field_string		=previous_exp_title
	sql_attr_uint		=previous_exp_title_crc32
	sql_attr_uint		=last_exp_emp_crc32
	sql_attr_uint		=previous_exp_emp_crc32
	sql_attr_uint		=total_months_of_experience
	sql_attr_multi		=bigint industeries_roles_years from field industeries_roles_years
	sql_attr_multi		=bigint present_industeries_roles_years from field present_industeries_roles_years
	sql_attr_uint		=last_jb_industry
	sql_attr_uint		=last_jb_role
	sql_attr_multi		=bigint exp_roles_list from field exp_roles_list
	sql_attr_multi		=bigint exp_industries_list from field exp_industries_list
	sql_attr_multi		=uint experiences_iso_encoded_list from field experiences_iso_encoded_list
	sql_attr_uint		=last_experience_iso_encoded
	sql_field_string		=target_jb_title
	sql_attr_multi		=uint emplyment_type_list from field emplyment_type_list
	sql_attr_multi		=uint emplyment_status_list from field emplyment_status_list
	sql_attr_multi		=uint target_job_locations_list from field target_job_locations_list
	sql_attr_multi		=uint target_job_industries_list from field target_job_industries_list
	sql_attr_uint		=notice_period
	sql_attr_uint		=trgt_job_salary
	sql_attr_uint		=salary_range_cluster_list
	sql_attr_uint		=career_level
	sql_attr_uint           =career_level_sorted
	sql_attr_uint           =months_of_experience_sorted
	sql_attr_uint		=residence_location_iso_encoded
	sql_attr_uint		=residence_country_iso_encoded
	sql_attr_uint		=gender
	sql_attr_uint		=date_of_birth
	sql_attr_uint		=marital_status
	sql_attr_uint		=graduation_date
	sql_attr_uint		=visa_status
	sql_attr_multi		=uint car_license_countries_list_encoded from field car_license_countries_list_encoded
	sql_attr_multi		=uint edu_degree_list from field edu_degree_list
	sql_attr_multi		=uint edu_iso_encoded_list from field edu_iso_encoded_list
	sql_attr_multi		=uint edu_majors_crc32_list from field edu_majors_crc32_list
	sql_attr_multi		=uint edu_institute_crc32_list from field edu_institute_crc32_list
	sql_attr_uint		=last_edu_degree
	sql_attr_multi		=uint language_skills_levels_encoded_list from field language_skills_levels_encoded_list
	sql_attr_uint		=cv_stage
	sql_attr_uint		=locale
	sql_attr_uint		=bcc_id
	sql_attr_uint		=user_id
	sql_attr_uint		=gpa
	sql_attr_uint		=gpa_cluster
	sql_attr_timestamp		=date_indexed
	sql_attr_uint		=parent_bcc_id
	sql_attr_bool		=has_attachment
	sql_attr_bool		=has_photo
	sql_attr_bool		=has_video
	sql_attr_bool		=has_recommendation
	sql_field_string		=first_name
	sql_field_string		=middle_name
	sql_field_string		=last_name
	sql_field_string		=profile_name
	sql_attr_uint		=profile_id
	sql_attr_uint		=referrer_source_id
	sql_attr_multi		=uint specilaities_list from field specilaities_list
	sql_attr_multi		=bigint specilaities_points from field specilaities_points
	sql_attr_uint		=special_needs
	sql_attr_bool		=is_primary
	sql_attr_bool		=email_bouncing_p
	sql_attr_timestamp		=creation_date
	sql_attr_bool		=is_confidential
	sql_field_string		=last_name_ar
	sql_field_string		=last_name_la
	sql_field_string		=first_name_ar
	sql_field_string		=first_name_la
	sql_attr_uint		=primary_nationality
	sql_attr_uint		=primary_nationality_cleaned
	sql_attr_multi          =uint nationalities_list from field nationalities_list
	sql_attr_uint		=registration_iso
	sql_attr_uint		=user_type
	sql_attr_uint		=cv_creation_method
	sql_attr_uint		=affliate_program_id
	sql_attr_uint		=cv_no_search_hits
	sql_attr_uint		=cv_no_submits_to
	sql_attr_uint		=cv_no_reviews
	sql_attr_uint		=completness_score
	sql_attr_timestamp		=registration_date
	sql_attr_multi		=bigint bcc_json_fields from field bcc_json_fields
	sql_attr_uint		=yrs_exp_cluster_id
	sql_attr_uint		=yrs_exp_after_grad_cluster_id
	sql_attr_uint		=completness_scores
	sql_attr_float		=cv_search_ranker
	sql_attr_float		=byt_cv_search_ranker
	sql_attr_uint		=user_public_profile_enable
	sql_attr_uint		=people_ranker
	sql_attr_timestamp		=cv_completion_date
	sql_attr_timestamp		=last_login_date
	sql_field_string		=user_state
	sql_field_string		=email_enc
	sql_field_string		=email_domain
	sql_attr_uint		=dependents
	sql_field_string		=cell_phone_enc
	sql_field_string		=home_phone_enc
	sql_field_string		=work_phone_enc
	sql_field_string		=cell_phone
	sql_attr_uint		=bounce_count
	sql_attr_uint		=last_salary_value
	sql_field_string		=last_exp_emp_full
	sql_attr_uint		=last_exp_emp_crc32_full
	sql_attr_uint		=user_lang_preference
	sql_attr_uint		=premium_account
	sql_attr_multi		=uint user_tests from field user_tests
	sql_attr_multi		=uint user_courses from field user_courses
	sql_attr_uint		=hopping
	sql_attr_uint		=gaps
	sql_attr_uint		=res_visa_status
	sql_attr_timestamp		=mobile_confirm_date
	sql_attr_timestamp		=first_bch_deg_date
	sql_attr_multi		=uint gsm from field gsm
	sql_attr_uint		=last_gsc_id
	sql_attr_uint		=previous_gsc_id
	sql_attr_multi		=uint all_gsc_ids from field all_gsc_ids
	sql_attr_multi		=uint last_gst_id from field last_gst_id
	sql_attr_multi		=uint previous_gst_id from field previous_gst_id
	sql_attr_multi		=uint all_gst_ids from field all_gst_ids
	sql_attr_multi		=uint other_gst_id from field other_gst_id
	sql_attr_multi		=uint target_gst_ids from field target_gst_ids
	sql_attr_uint		=highest_degree
	sql_attr_multi		=uint disabilities from field disabilities
	sql_attr_uint		=months_of_exp_after_grad
	sql_attr_json		=cv_custom_json
	sql_attr_uint		=sessions_count
	sql_field_string		=photo_url
	sql_attr_bool		=unemployed
	sql_attr_uint		=orginal_nationality
	sql_attr_timestamp		=cv_builder_date_modified
	sql_attr_uint		=last_gsi_id
	sql_attr_uint		=previous_gsi_id
	sql_attr_multi		=uint all_gsi_ids from field all_gsi_ids
	sql_attr_multi		=uint target_jb_roles from field target_jb_roles
	sql_attr_uint       =last_exp_comp_size
    	sql_attr_timestamp  =updated_contact_date
	sql_attr_timestamp  =last_exp_start_date
	sql_attr_uint		=index_weight
	sql_attr_multi		=uint folder_id from ranged-query;  SELECT cv_id, folder_id FROM byt_employer_basket_11 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_employer_basket_11 WHERE cv_id between 66000000 and 66999999
	sql_attr_multi		=uint tag_id from ranged-query;  SELECT cv_id, tag_id FROM byt_item_tags_11 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_item_tags_11 WHERE cv_id between 66000000 and 66999999
	sql_attr_multi		=uint note_group_id from ranged-query;  SELECT cv_id, group_id FROM byt_comments_11 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_comments_11 WHERE cv_id between 66000000 and 66999999
}

		index cvMainIndexStemmed_11_0
		{
			type			= plain
			source 			= cvMainIndexStemmed_11_0_src
			path 			= /home/sphinx/sphinx/var/data/cvMainIndexStemmed_11_0
			morphology   = stem_en,stem_ar
			wordforms  = /home/sphinx/sphinx/var/data/wordforms.txt
			dict=keywords
			index_sp  = 1
			index_zones		= b_*, is_agency, special_needs, referrer_source
			stopwords		= en,ar
			exceptions		= /home/sphinx/sphinx/var/data/exceptions.txt
			min_word_len		= 1
			charset_table		= non_cjk
			index_exact_words	= 1
			
			ngram_len		= 1
			#ngram_chars		=  non_cjk
			html_strip				= 1
			preopen				= 1
		}		
		


source cvMainIndex_11_1_src {
	type		=pgsql
	sql_host	=host
	sql_user	=user
	sql_pass	=pass
	sql_db		=database
	sql_port	=9988

	sql_query_pre	=SET client_encoding TO 'UTF8'
	sql_query_pre	= SET NAMES 'UTF8'
	sql_ranged_throttle	=1000
	sql_query_range	= SELECT MIN(cv_id),MAX(cv_id) FROM cv_index_11 WHERE cv_id between 67000000 and 67999999
	sql_query	=SELECT \
				cv_id as id,\
				cv_id,\
				experiences_titles,\
				experiences_description,\
				experiences_employers,\
				last_exp_desc,\
				(CASE WHEN is_confidential = 'f' THEN last_exp_emp ELSE NULL END) as last_exp_emp,\
				(CASE WHEN is_confidential = 'f' THEN previous_exp_emp ELSE NULL END) as previous_exp_emp,\
				last_exp_title,\
				last_exp_title_crc32,\
				previous_exp_title,\
				previous_exp_title_crc32,\
				(CASE WHEN is_confidential = 'f' THEN last_exp_emp_crc32 ELSE 0 END) as last_exp_emp_crc32,\
				(CASE WHEN is_confidential = 'f' THEN previous_exp_emp_crc32 ELSE 0 END) as previous_exp_emp_crc32,\
				(CASE WHEN months_of_experience != 999999 then months_of_experience  WHEN market_entry_date != 999999 then (to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date  ELSE 999999 END ) as total_months_of_experience,\
				industeries_roles_years,\
				present_industeries_roles_years,\
				last_jb_industry,\
				last_jb_role,\
				exp_roles_list,\
				exp_industries_list,\
				experiences_iso_encoded_list,\
				last_experience_iso_encoded,\
				target_jb_title,\
				emplyment_type_list,\
				emplyment_status_list,\
				target_job_locations_list,\
				target_job_industries_list,\
				notice_period,\
				trgt_job_salary,\
				(CASE WHEN trgt_job_salary < 0 then 0  WHEN trgt_job_salary = 0 then 1  WHEN trgt_job_salary < 500 THEN 2  WHEN trgt_job_salary <= 1000 THEN 3  WHEN trgt_job_salary <= 1500 THEN 4  WHEN trgt_job_salary <= 2000 THEN 5  WHEN trgt_job_salary <= 3000 THEN 6  WHEN trgt_job_salary <= 5000 THEN 7  WHEN trgt_job_salary <= 8000 THEN 8  WHEN trgt_job_salary <= 12000 THEN 9  WHEN trgt_job_salary <= 16000 THEN 10  WHEN trgt_job_salary <= 20000 THEN 11  WHEN trgt_job_salary <= 30000 THEN 12  WHEN trgt_job_salary <= 50000 THEN 13  ELSE 14  END) as salary_range_cluster_list,\
				career_level,\
				(CASE WHEN career_level = 6 THEN 2001 WHEN career_level < 6 THEN (career_level+1000)*2 ELSE career_level END) as career_level_sorted,\
				(CASE WHEN months_of_experience != 999999 then months_of_experience  WHEN market_entry_date != 999999 then (to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date  ELSE 0 END ) as months_of_experience_sorted,\
				objective_txt,\
				residence_location_iso_encoded,\
				LEFT(residence_location_iso_encoded::text,4)::int as residence_country_iso_encoded,\
				gender,\
				date_of_birth,\
				marital_status,\
				graduation_date,\
				visa_status,\
				car_license_countries_list_encoded,\
				edu_degree_list,\
				edu_iso_encoded_list,\
				edu_txt,\
				edu_major,\
				edu_majors_crc32_list,\
				lst_edu_major,\
				edu_institute,\
				edu_institute_crc32_list,\
				lst_edu_institute,\
				last_edu_degree,\
				skills_txt,\
				language_skills_levels_encoded_list,\
				cv_stage,\
				locale,\
				bcc_id,\
				generic_txt,\
				user_id,\
				gpa,\
				(CASE when gpa >= 99999 then 5 when gpa >= 8000 then 4 when gpa >= 6000 then 3 when gpa >= 4000 then 2 when gpa >= 2000 then 1 when gpa >= 0 then 0 end) as gpa_cluster,\
				extract('epoch' FROM date_indexed)::bigint AS date_indexed,\
				parent_bcc_id,\
				has_attachment,\
				has_photo,\
				has_video,\
				has_recommendation,\
				first_name,\
				middle_name,\
				last_name,\
				profile_name,\
				profile_id,\
				(case when referrer_source_id is null then 99999 else referrer_source_id end ) as referrer_source_id,\
				specilaities_list,\
				specilaities_text,\
				specilaities_points,\
				user_generic_field1,\
				 COALESCE(special_needs,99999) AS special_needs,\
				is_primary,\
				email_bouncing_p,\
				extract('epoch' FROM creation_date)::bigint AS creation_date,\
				is_confidential,\
				last_name_ar,\
				last_name_la,\
				first_name_ar,\
				first_name_la,\
				first_name_la || ' ' || last_name_la as full_name_la,\
				first_name_ar || ' ' || last_name_ar as full_name_ar,\
				primary_nationality,\
				(case when LEFT(residence_location_iso_encoded::text,4)::int = primary_nationality  and visa_status not in (1,7) then 0  when  LEFT(residence_location_iso_encoded::text,4)::int in (5560,6257,6254,4850,5857) and primary_nationality in (4751,6547,5769,6347,4854,6159)  then 0 else  primary_nationality end) as primary_nationality_cleaned,\
				nationalities_list,\
				specilaities_platinum,\
				specilaities_gold,\
				specilaities_silver,\
				specilaities_bronze,\
				bcc_text_fields,\
				has_flag,\
				registration_iso,\
				user_type,\
				cv_creation_method,\
				affliate_program_id,\
				cv_no_search_hits,\
				cv_no_submits_to,\
				cv_no_reviews,\
				completness_score,\
				extract('epoch' FROM registration_date)::bigint AS registration_date,\
				bcc_json_fields,\
				referrer_source,\
				user_generic_field2,\
				user_generic_field3,\
				user_generic_field4,\
				(case (CASE WHEN months_of_experience != 999999 then CEIL(months_of_experience/11.999)  WHEN market_entry_date != 999999 then ceil(((to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date)/11.999)  ELSE 999999 END )::bigint when 0 then 1 when 1 then 1 when 2 then 2 when 3 then 3 when 4 then 3 when 5 then 3 when 6 then 4 when 7 then 4 when 8 then 4 when 9 then 4 when 10 then 4 when 999999 then 6 else 5 end) as yrs_exp_cluster_id,\
				(case (CASE WHEN months_of_exp_after_grad != 999999 then CEIL(months_of_exp_after_grad/11.999) ELSE 999999 END )::bigint when 0 then 1 when 1 then 1 when 2 then 2 when 3 then 3 when 4 then 3 when 5 then 3 when 6 then 4 when 7 then 4 when 8 then 4 when 9 then 4 when 10 then 4 when 999999 then 6 else 5 end) as yrs_exp_after_grad_cluster_id,\
				(CASE WHEN completness_score < 20 THEN 1 WHEN completness_score < 40 THEN 2 WHEN completness_score < 60 THEN 3 WHEN completness_score < 80 THEN 4 WHEN completness_score < 500 THEN 5 END ) as completness_scores,\
				(case when premium_account > 0 then 1.35 else 1 end) * (case when extract('epoch' FROM mobile_confirm_date)::bigint > 0 then 1.15 else 1 end) * (case when email_bouncing_p = true then 0.01 else 1 end) * (CASE WHEN (completness_score > 99) THEN 1.5 WHEN (completness_score > 80) THEN (1+completness_score/250)  WHEN (completness_score > 50) THEN (1+completness_score/400) WHEN (completness_score > 25) THEN 0.9 ELSE 0.5 END) * (CASE WHEN (last_login_date > NOW()-INTERVAL '2629800 SECOND')    THEN 1.3 WHEN (last_login_date > NOW()-INTERVAL '7889400 SECOND')    THEN 1.23 WHEN (last_login_date > NOW()-INTERVAL '15778800 SECOND')   THEN 1.17  WHEN (last_login_date > NOW()-INTERVAL '31557600  SECOND')  THEN 1.12 WHEN (last_login_date > NOW()-INTERVAL '63115200  SECOND')  THEN 1.06 ELSE 1 END) * (CASE WHEN (date_indexed > NOW()-INTERVAL '2629800 SECOND')    THEN 1.5 WHEN (date_indexed > NOW()-INTERVAL '7889400 SECOND')    THEN 1.4 WHEN (date_indexed > NOW()-INTERVAL '15778800 SECOND')   THEN 1.3  WHEN (date_indexed > NOW()-INTERVAL '31557600  SECOND')  THEN 1.15 WHEN (date_indexed > NOW()-INTERVAL '63115200  SECOND')  THEN 1.13 ELSE 1 END)::float as cv_search_ranker,\
				(case when premium_account > 0 then 1.35 else 1 end) * (case when extract('epoch' FROM mobile_confirm_date)::bigint > 0 then 1.15 else 1 end) * (case when email_bouncing_p = true then 0.01 else 1 end) * (CASE WHEN (completness_score > 99) THEN 1.5 WHEN (completness_score > 80) THEN (1+completness_score/250)  WHEN (completness_score > 50) THEN (1+completness_score/400) WHEN (completness_score > 25) THEN 0.9 ELSE 0.5 END) * (CASE WHEN (last_login_date > NOW()-INTERVAL '2629800 SECOND')    THEN 1.3 WHEN (last_login_date > NOW()-INTERVAL '7889400 SECOND')    THEN 1.23 WHEN (last_login_date > NOW()-INTERVAL '15778800 SECOND')   THEN 1.17  WHEN (last_login_date > NOW()-INTERVAL '31557600  SECOND')  THEN 1.12 WHEN (last_login_date > NOW()-INTERVAL '63115200  SECOND')  THEN 1.06 ELSE 1 END) * (CASE WHEN (cv_builder_date_modified > NOW()-INTERVAL '2629800 SECOND')    THEN 1.5 WHEN (cv_builder_date_modified > NOW()-INTERVAL '7889400 SECOND')    THEN 1.4 WHEN (cv_builder_date_modified > NOW()-INTERVAL '15778800 SECOND')   THEN 1.3  WHEN (cv_builder_date_modified > NOW()-INTERVAL '31557600  SECOND')  THEN 1.15 WHEN (cv_builder_date_modified > NOW()-INTERVAL '63115200  SECOND')  THEN 1.13 ELSE 1 END)::float as byt_cv_search_ranker,\
				(CASE WHEN (is_primary = TRUE and profile_id > 0) THEN 1 ELSE 0 END) as user_public_profile_enable,\
				(case when email_bouncing_p = true then 0.01 else 1 end) * (1000*(1+0.2*(CASE WHEN has_photo = TRUE THEN 1 ELSE 0 END))) as people_ranker,\
				(CASE WHEN (sections_fields IS NULL OR sections_fields = ' ')   THEN 'tar per con edu exp'  ELSE sections_fields  END) as sections_fields,\
				extract('epoch' FROM cv_completion_date)::bigint AS cv_completion_date,\
				extract('epoch' FROM last_login_date)::bigint AS last_login_date,\
				(CASE WHEN (user_state IS NULL OR user_state = ' ')  THEN 'mini' ELSE user_state END) as user_state,\
				email_enc,\
				email_domain,\
				dependents,\
				cell_phone_enc,\
				home_phone_enc,\
				work_phone_enc,\
				cell_phone,\
				bounce_count,\
				last_salary_value,\
				receive_emails_list,\
				last_exp_emp as last_exp_emp_full,\
				last_exp_emp_crc32 as last_exp_emp_crc32_full,\
				user_lang_preference,\
				premium_account,\
				user_tests,\
				user_courses,\
				hobbies,\
				hopping,\
				gaps,\
				res_visa_status,\
				extract('epoch' FROM mobile_confirm_date)::bigint AS mobile_confirm_date,\
				viewer_ids,\
				extract('epoch' FROM first_bch_deg_date)::bigint AS first_bch_deg_date,\
				gsm,\
				last_gsc_id,\
				previous_gsc_id,\
				all_gsc_ids,\
				all_gsc_ids_txt,\
				last_gst_id,\
				previous_gst_id,\
				all_gst_ids,\
				other_gst_id,\
				target_gst_ids,\
				all_gst_ids_text,\
				highest_degree,\
				disabilities,\
				months_of_exp_after_grad,\
				cv_custom_json,\
				sessions_count,\
				photo_url,\
				unemployed,\
				orginal_nationality,\
				extract('epoch' FROM cv_builder_date_modified)::bigint AS cv_builder_date_modified,\
				trainings,\
				certificates,\
				training_institutes,\
				last_gsi_id,\
				previous_gsi_id,\
				all_gsi_ids,\
				target_jb_roles,\
				all_gsi_ids_txt,\
				3 as index_weight,\
				'ANYKEYWORD' as any_keyword,\
				last_exp_comp_size,\
                		extract('epoch' FROM updated_contact_date)::bigint AS updated_contact_date,\
				extract('epoch' FROM last_exp_start_date)::bigint AS last_exp_start_date\
			FROM \
				cv_index_11 \
			WHERE \
				insertion_date <  (SELECT lst_main_index_start_time FROM spx_delta_separator WHERE index_id = 111 LIMIT 1) \
				 AND cv_id>=$start AND cv_id<=$end

	sql_range_step	=25000
	sql_attr_uint		=cv_id
	sql_field_string		=last_exp_emp
	sql_field_string		=previous_exp_emp
	sql_field_string		=last_exp_title
	sql_attr_uint		=last_exp_title_crc32
	sql_field_string		=previous_exp_title
	sql_attr_uint		=previous_exp_title_crc32
	sql_attr_uint		=last_exp_emp_crc32
	sql_attr_uint		=previous_exp_emp_crc32
	sql_attr_uint		=total_months_of_experience
	sql_attr_multi		=bigint industeries_roles_years from field industeries_roles_years
	sql_attr_multi		=bigint present_industeries_roles_years from field present_industeries_roles_years
	sql_attr_uint		=last_jb_industry
	sql_attr_uint		=last_jb_role
	sql_attr_multi		=bigint exp_roles_list from field exp_roles_list
	sql_attr_multi		=bigint exp_industries_list from field exp_industries_list
	sql_attr_multi		=uint experiences_iso_encoded_list from field experiences_iso_encoded_list
	sql_attr_uint		=last_experience_iso_encoded
	sql_field_string		=target_jb_title
	sql_attr_multi		=uint emplyment_type_list from field emplyment_type_list
	sql_attr_multi		=uint emplyment_status_list from field emplyment_status_list
	sql_attr_multi		=uint target_job_locations_list from field target_job_locations_list
	sql_attr_multi		=uint target_job_industries_list from field target_job_industries_list
	sql_attr_uint		=notice_period
	sql_attr_uint		=trgt_job_salary
	sql_attr_uint		=salary_range_cluster_list
	sql_attr_uint		=career_level
        sql_attr_uint   	=career_level_sorted
        sql_attr_uint	        =months_of_experience_sorted
	sql_attr_uint		=residence_location_iso_encoded
	sql_attr_uint		=residence_country_iso_encoded
	sql_attr_uint		=gender
	sql_attr_uint		=date_of_birth
	sql_attr_uint		=marital_status
	sql_attr_uint		=graduation_date
	sql_attr_uint		=visa_status
	sql_attr_multi		=uint car_license_countries_list_encoded from field car_license_countries_list_encoded
	sql_attr_multi		=uint edu_degree_list from field edu_degree_list
	sql_attr_multi		=uint edu_iso_encoded_list from field edu_iso_encoded_list
	sql_attr_multi		=uint edu_majors_crc32_list from field edu_majors_crc32_list
	sql_attr_multi		=uint edu_institute_crc32_list from field edu_institute_crc32_list
	sql_attr_uint		=last_edu_degree
	sql_attr_multi		=uint language_skills_levels_encoded_list from field language_skills_levels_encoded_list
	sql_attr_uint		=cv_stage
	sql_attr_uint		=locale
	sql_attr_uint		=bcc_id
	sql_attr_uint		=user_id
	sql_attr_uint		=gpa
	sql_attr_uint		=gpa_cluster
	sql_attr_timestamp		=date_indexed
	sql_attr_uint		=parent_bcc_id
	sql_attr_bool		=has_attachment
	sql_attr_bool		=has_photo
	sql_attr_bool		=has_video
	sql_attr_bool		=has_recommendation
	sql_field_string		=first_name
	sql_field_string		=middle_name
	sql_field_string		=last_name
	sql_field_string		=profile_name
	sql_attr_uint		=profile_id
	sql_attr_uint		=referrer_source_id
	sql_attr_multi		=uint specilaities_list from field specilaities_list
	sql_attr_multi		=bigint specilaities_points from field specilaities_points
	sql_attr_uint		=special_needs
	sql_attr_bool		=is_primary
	sql_attr_bool		=email_bouncing_p
	sql_attr_timestamp		=creation_date
	sql_attr_bool		=is_confidential
	sql_field_string		=last_name_ar
	sql_field_string		=last_name_la
	sql_field_string		=first_name_ar
	sql_field_string		=first_name_la
	sql_attr_uint		=primary_nationality
	sql_attr_uint		=primary_nationality_cleaned
	sql_attr_multi          =uint nationalities_list from field nationalities_list
	sql_attr_uint		=registration_iso
	sql_attr_uint		=user_type
	sql_attr_uint		=cv_creation_method
	sql_attr_uint		=affliate_program_id
	sql_attr_uint		=cv_no_search_hits
	sql_attr_uint		=cv_no_submits_to
	sql_attr_uint		=cv_no_reviews
	sql_attr_uint		=completness_score
	sql_attr_timestamp		=registration_date
	sql_attr_multi		=bigint bcc_json_fields from field bcc_json_fields
	sql_attr_uint		=yrs_exp_cluster_id
	sql_attr_uint		=yrs_exp_after_grad_cluster_id
	sql_attr_uint		=completness_scores
	sql_attr_float		=cv_search_ranker
	sql_attr_float		=byt_cv_search_ranker
	sql_attr_uint		=user_public_profile_enable
	sql_attr_uint		=people_ranker
	sql_attr_timestamp		=cv_completion_date
	sql_attr_timestamp		=last_login_date
	sql_field_string		=user_state
	sql_field_string		=email_enc
	sql_field_string		=email_domain
	sql_attr_uint		=dependents
	sql_field_string		=cell_phone_enc
	sql_field_string		=home_phone_enc
	sql_field_string		=work_phone_enc
	sql_field_string		=cell_phone
	sql_attr_uint		=bounce_count
	sql_attr_uint		=last_salary_value
	sql_field_string		=last_exp_emp_full
	sql_attr_uint		=last_exp_emp_crc32_full
	sql_attr_uint		=user_lang_preference
	sql_attr_uint		=premium_account
	sql_attr_multi		=uint user_tests from field user_tests
	sql_attr_multi		=uint user_courses from field user_courses
	sql_attr_uint		=hopping
	sql_attr_uint		=gaps
	sql_attr_uint		=res_visa_status
	sql_attr_timestamp		=mobile_confirm_date
	sql_attr_timestamp		=first_bch_deg_date
	sql_attr_multi		=uint gsm from field gsm
	sql_attr_uint		=last_gsc_id
	sql_attr_uint		=previous_gsc_id
	sql_attr_multi		=uint all_gsc_ids from field all_gsc_ids
	sql_attr_multi		=uint last_gst_id from field last_gst_id
	sql_attr_multi		=uint previous_gst_id from field previous_gst_id
	sql_attr_multi		=uint all_gst_ids from field all_gst_ids
	sql_attr_multi		=uint other_gst_id from field other_gst_id
	sql_attr_multi		=uint target_gst_ids from field target_gst_ids
	sql_attr_uint		=highest_degree
	sql_attr_multi		=uint disabilities from field disabilities
	sql_attr_uint		=months_of_exp_after_grad
	sql_attr_json		=cv_custom_json
	sql_attr_uint		=sessions_count
	sql_field_string		=photo_url
	sql_attr_bool		=unemployed
	sql_attr_uint		=orginal_nationality
	sql_attr_timestamp		=cv_builder_date_modified
	sql_attr_uint		=last_gsi_id
	sql_attr_uint		=previous_gsi_id
	sql_attr_multi		=uint all_gsi_ids from field all_gsi_ids
	sql_attr_multi		=uint target_jb_roles from field target_jb_roles
    	sql_attr_uint       =last_exp_comp_size
   	sql_attr_timestamp  =updated_contact_date
	sql_attr_timestamp  =last_exp_start_date
	sql_attr_uint		=index_weight
	sql_attr_multi		=uint folder_id from ranged-query;  SELECT cv_id, folder_id FROM byt_employer_basket_11 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_employer_basket_11 WHERE cv_id between 67000000 and 67999999
	sql_attr_multi		=uint tag_id from ranged-query;  SELECT cv_id, tag_id FROM byt_item_tags_11 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_item_tags_11 WHERE cv_id between 67000000 and 67999999
	sql_attr_multi		=uint note_group_id from ranged-query;  SELECT cv_id, group_id FROM byt_comments_11 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_comments_11 WHERE cv_id between 67000000 and 67999999
}

		index cvMainIndex_11_1
		{
			type			= plain
			source 			= cvMainIndex_11_1_src
			path 			= /home/sphinx/sphinx/var/data/cvMainIndex_11_1
			morphology   = none
			dict=keywords
			index_sp  = 1
			index_zones		= b_*, is_agency, special_needs, referrer_source
			stopwords		= en,ar
			exceptions		= /home/sphinx/sphinx/var/data/exceptions.txt
			min_word_len		= 1
			charset_table		= non_cjk
			ngram_len		= 1
			#ngram_chars		=  non_cjk
			inplace_enable		= 0
			html_strip				= 1
			preopen				= 1
		}		

	source cvMainIndexStemmed_11_1_src {
	type		=pgsql
	sql_host	=host
	sql_user	=user
	sql_pass	=pass
	sql_db		=database
	sql_port	=9988

	sql_query_pre	=SET client_encoding TO 'UTF8'
	sql_query_pre	= SET NAMES 'UTF8'
	sql_ranged_throttle	=1000
	sql_query_range	= SELECT MIN(cv_id),MAX(cv_id) FROM cv_index_11 WHERE cv_id between 67000000 and 67999999
	sql_query	=SELECT \
				cv_id as id,\
				cv_id,\
				experiences_titles,\
				experiences_description,\
				experiences_employers,\
				last_exp_desc,\
				(CASE WHEN is_confidential = 'f' THEN last_exp_emp ELSE NULL END) as last_exp_emp,\
				(CASE WHEN is_confidential = 'f' THEN previous_exp_emp ELSE NULL END) as previous_exp_emp,\
				last_exp_title,\
				last_exp_title_crc32,\
				previous_exp_title,\
				previous_exp_title_crc32,\
				(CASE WHEN is_confidential = 'f' THEN last_exp_emp_crc32 ELSE 0 END) as last_exp_emp_crc32,\
				(CASE WHEN is_confidential = 'f' THEN previous_exp_emp_crc32 ELSE 0 END) as previous_exp_emp_crc32,\
				(CASE WHEN months_of_experience != 999999 then months_of_experience  WHEN market_entry_date != 999999 then (to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date  ELSE 999999 END ) as total_months_of_experience,\
				industeries_roles_years,\
				present_industeries_roles_years,\
				last_jb_industry,\
				last_jb_role,\
				exp_roles_list,\
				exp_industries_list,\
				experiences_iso_encoded_list,\
				last_experience_iso_encoded,\
				target_jb_title,\
				emplyment_type_list,\
				emplyment_status_list,\
				target_job_locations_list,\
				target_job_industries_list,\
				notice_period,\
				trgt_job_salary,\
				(CASE WHEN trgt_job_salary < 0 then 0  WHEN trgt_job_salary = 0 then 1  WHEN trgt_job_salary < 500 THEN 2  WHEN trgt_job_salary <= 1000 THEN 3  WHEN trgt_job_salary <= 1500 THEN 4  WHEN trgt_job_salary <= 2000 THEN 5  WHEN trgt_job_salary <= 3000 THEN 6  WHEN trgt_job_salary <= 5000 THEN 7  WHEN trgt_job_salary <= 8000 THEN 8  WHEN trgt_job_salary <= 12000 THEN 9  WHEN trgt_job_salary <= 16000 THEN 10  WHEN trgt_job_salary <= 20000 THEN 11  WHEN trgt_job_salary <= 30000 THEN 12  WHEN trgt_job_salary <= 50000 THEN 13  ELSE 14  END) as salary_range_cluster_list,\
				career_level,\
				(CASE WHEN career_level = 6 THEN 2001 WHEN career_level < 6 THEN (career_level+1000)*2 ELSE career_level END) as career_level_sorted,\
				(CASE WHEN months_of_experience != 999999 then months_of_experience  WHEN market_entry_date != 999999 then (to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date  ELSE 0 END ) as months_of_experience_sorted,\
				objective_txt,\
				residence_location_iso_encoded,\
				LEFT(residence_location_iso_encoded::text,4)::int as residence_country_iso_encoded,\
				gender,\
				date_of_birth,\
				marital_status,\
				graduation_date,\
				visa_status,\
				car_license_countries_list_encoded,\
				edu_degree_list,\
				edu_iso_encoded_list,\
				edu_txt,\
				edu_major,\
				edu_majors_crc32_list,\
				lst_edu_major,\
				edu_institute,\
				edu_institute_crc32_list,\
				lst_edu_institute,\
				last_edu_degree,\
				skills_txt,\
				language_skills_levels_encoded_list,\
				cv_stage,\
				locale,\
				bcc_id,\
				generic_txt,\
				user_id,\
				gpa,\
				(CASE when gpa >= 99999 then 5 when gpa >= 8000 then 4 when gpa >= 6000 then 3 when gpa >= 4000 then 2 when gpa >= 2000 then 1 when gpa >= 0 then 0 end) as gpa_cluster,\
				extract('epoch' FROM date_indexed)::bigint AS date_indexed,\
				parent_bcc_id,\
				has_attachment,\
				has_photo,\
				has_video,\
				has_recommendation,\
				first_name,\
				middle_name,\
				last_name,\
				profile_name,\
				profile_id,\
				(case when referrer_source_id is null then 99999 else referrer_source_id end ) as referrer_source_id,\
				specilaities_list,\
				specilaities_text,\
				specilaities_points,\
				user_generic_field1,\
				 COALESCE(special_needs,99999) AS special_needs,\
				is_primary,\
				email_bouncing_p,\
				extract('epoch' FROM creation_date)::bigint AS creation_date,\
				is_confidential,\
				last_name_ar,\
				last_name_la,\
				first_name_ar,\
				first_name_la,\
				first_name_la || ' ' || last_name_la as full_name_la,\
				first_name_ar || ' ' || last_name_ar as full_name_ar,\
				primary_nationality,\
				(case when LEFT(residence_location_iso_encoded::text,4)::int = primary_nationality  and visa_status not in (1,7) then 0  when  LEFT(residence_location_iso_encoded::text,4)::int in (5560,6257,6254,4850,5857) and primary_nationality in (4751,6547,5769,6347,4854,6159)  then 0 else  primary_nationality end) as primary_nationality_cleaned,\
				nationalities_list,\
				specilaities_platinum,\
				specilaities_gold,\
				specilaities_silver,\
				specilaities_bronze,\
				bcc_text_fields,\
				has_flag,\
				registration_iso,\
				user_type,\
				cv_creation_method,\
				affliate_program_id,\
				cv_no_search_hits,\
				cv_no_submits_to,\
				cv_no_reviews,\
				completness_score,\
				extract('epoch' FROM registration_date)::bigint AS registration_date,\
				bcc_json_fields,\
				referrer_source,\
				user_generic_field2,\
				user_generic_field3,\
				user_generic_field4,\
				(case (CASE WHEN months_of_experience != 999999 then CEIL(months_of_experience/11.999)  WHEN market_entry_date != 999999 then ceil(((to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date)/11.999)  ELSE 999999 END )::bigint when 0 then 1 when 1 then 1 when 2 then 2 when 3 then 3 when 4 then 3 when 5 then 3 when 6 then 4 when 7 then 4 when 8 then 4 when 9 then 4 when 10 then 4 when 999999 then 6 else 5 end) as yrs_exp_cluster_id,\
				(case (CASE WHEN months_of_exp_after_grad != 999999 then CEIL(months_of_exp_after_grad/11.999) ELSE 999999 END )::bigint when 0 then 1 when 1 then 1 when 2 then 2 when 3 then 3 when 4 then 3 when 5 then 3 when 6 then 4 when 7 then 4 when 8 then 4 when 9 then 4 when 10 then 4 when 999999 then 6 else 5 end) as yrs_exp_after_grad_cluster_id,\
				(CASE WHEN completness_score < 20 THEN 1 WHEN completness_score < 40 THEN 2 WHEN completness_score < 60 THEN 3 WHEN completness_score < 80 THEN 4 WHEN completness_score < 500 THEN 5 END ) as completness_scores,\
				(case when premium_account > 0 then 1.35 else 1 end) * (case when extract('epoch' FROM mobile_confirm_date)::bigint > 0 then 1.15 else 1 end) * (case when email_bouncing_p = true then 0.01 else 1 end) * (CASE WHEN (completness_score > 99) THEN 1.5 WHEN (completness_score > 80) THEN (1+completness_score/250)  WHEN (completness_score > 50) THEN (1+completness_score/400) WHEN (completness_score > 25) THEN 0.9 ELSE 0.5 END) * (CASE WHEN (last_login_date > NOW()-INTERVAL '2629800 SECOND')    THEN 1.3 WHEN (last_login_date > NOW()-INTERVAL '7889400 SECOND')    THEN 1.23 WHEN (last_login_date > NOW()-INTERVAL '15778800 SECOND')   THEN 1.17  WHEN (last_login_date > NOW()-INTERVAL '31557600  SECOND')  THEN 1.12 WHEN (last_login_date > NOW()-INTERVAL '63115200  SECOND')  THEN 1.06 ELSE 1 END) * (CASE WHEN (date_indexed > NOW()-INTERVAL '2629800 SECOND')    THEN 1.5 WHEN (date_indexed > NOW()-INTERVAL '7889400 SECOND')    THEN 1.4 WHEN (date_indexed > NOW()-INTERVAL '15778800 SECOND')   THEN 1.3  WHEN (date_indexed > NOW()-INTERVAL '31557600  SECOND')  THEN 1.15 WHEN (date_indexed > NOW()-INTERVAL '63115200  SECOND')  THEN 1.13 ELSE 1 END)::float as cv_search_ranker,\
				(case when premium_account > 0 then 1.35 else 1 end) * (case when extract('epoch' FROM mobile_confirm_date)::bigint > 0 then 1.15 else 1 end) * (case when email_bouncing_p = true then 0.01 else 1 end) * (CASE WHEN (completness_score > 99) THEN 1.5 WHEN (completness_score > 80) THEN (1+completness_score/250)  WHEN (completness_score > 50) THEN (1+completness_score/400) WHEN (completness_score > 25) THEN 0.9 ELSE 0.5 END) * (CASE WHEN (last_login_date > NOW()-INTERVAL '2629800 SECOND')    THEN 1.3 WHEN (last_login_date > NOW()-INTERVAL '7889400 SECOND')    THEN 1.23 WHEN (last_login_date > NOW()-INTERVAL '15778800 SECOND')   THEN 1.17  WHEN (last_login_date > NOW()-INTERVAL '31557600  SECOND')  THEN 1.12 WHEN (last_login_date > NOW()-INTERVAL '63115200  SECOND')  THEN 1.06 ELSE 1 END) * (CASE WHEN (cv_builder_date_modified > NOW()-INTERVAL '2629800 SECOND')    THEN 1.5 WHEN (cv_builder_date_modified > NOW()-INTERVAL '7889400 SECOND')    THEN 1.4 WHEN (cv_builder_date_modified > NOW()-INTERVAL '15778800 SECOND')   THEN 1.3  WHEN (cv_builder_date_modified > NOW()-INTERVAL '31557600  SECOND')  THEN 1.15 WHEN (cv_builder_date_modified > NOW()-INTERVAL '63115200  SECOND')  THEN 1.13 ELSE 1 END)::float as byt_cv_search_ranker,\
				(CASE WHEN (is_primary = TRUE and profile_id > 0) THEN 1 ELSE 0 END) as user_public_profile_enable,\
				(case when email_bouncing_p = true then 0.01 else 1 end) * (1000*(1+0.2*(CASE WHEN has_photo = TRUE THEN 1 ELSE 0 END))) as people_ranker,\
				(CASE WHEN (sections_fields IS NULL OR sections_fields = ' ')   THEN 'tar per con edu exp'  ELSE sections_fields  END) as sections_fields,\
				extract('epoch' FROM cv_completion_date)::bigint AS cv_completion_date,\
				extract('epoch' FROM last_login_date)::bigint AS last_login_date,\
				(CASE WHEN (user_state IS NULL OR user_state = ' ')  THEN 'mini' ELSE user_state END) as user_state,\
				email_enc,\
				email_domain,\
				dependents,\
				cell_phone_enc,\
				home_phone_enc,\
				work_phone_enc,\
				cell_phone,\
				bounce_count,\
				last_salary_value,\
				receive_emails_list,\
				last_exp_emp as last_exp_emp_full,\
				last_exp_emp_crc32 as last_exp_emp_crc32_full,\
				user_lang_preference,\
				premium_account,\
				user_tests,\
				user_courses,\
				hobbies,\
				hopping,\
				gaps,\
				res_visa_status,\
				extract('epoch' FROM mobile_confirm_date)::bigint AS mobile_confirm_date,\
				viewer_ids,\
				extract('epoch' FROM first_bch_deg_date)::bigint AS first_bch_deg_date,\
				gsm,\
				last_gsc_id,\
				previous_gsc_id,\
				all_gsc_ids,\
				all_gsc_ids_txt,\
				last_gst_id,\
				previous_gst_id,\
				all_gst_ids,\
				other_gst_id,\
				target_gst_ids,\
				all_gst_ids_text,\
				highest_degree,\
				disabilities,\
				months_of_exp_after_grad,\
				cv_custom_json,\
				sessions_count,\
				photo_url,\
				unemployed,\
				orginal_nationality,\
				extract('epoch' FROM cv_builder_date_modified)::bigint AS cv_builder_date_modified,\
				trainings,\
				certificates,\
				training_institutes,\
				last_gsi_id,\
				previous_gsi_id,\
				all_gsi_ids,\
				target_jb_roles,\
				all_gsi_ids_txt,\
				1 as index_weight,\
				'ANYKEYWORD' as any_keyword,\
				last_exp_comp_size,\
                		extract('epoch' FROM updated_contact_date)::bigint AS updated_contact_date,\
				extract('epoch' FROM last_exp_start_date)::bigint AS last_exp_start_date\
			FROM \
				cv_index_11 \
			WHERE \
				insertion_date <  (SELECT lst_main_index_start_time FROM spx_delta_separator WHERE index_id = 111 LIMIT 1) \
				 AND cv_id>=$start AND cv_id<=$end

	sql_range_step	=25000
	sql_attr_uint		=cv_id
	sql_field_string		=last_exp_emp
	sql_field_string		=previous_exp_emp
	sql_field_string		=last_exp_title
	sql_attr_uint		=last_exp_title_crc32
	sql_field_string		=previous_exp_title
	sql_attr_uint		=previous_exp_title_crc32
	sql_attr_uint		=last_exp_emp_crc32
	sql_attr_uint		=previous_exp_emp_crc32
	sql_attr_uint		=total_months_of_experience
	sql_attr_multi		=bigint industeries_roles_years from field industeries_roles_years
	sql_attr_multi		=bigint present_industeries_roles_years from field present_industeries_roles_years
	sql_attr_uint		=last_jb_industry
	sql_attr_uint		=last_jb_role
	sql_attr_multi		=bigint exp_roles_list from field exp_roles_list
	sql_attr_multi		=bigint exp_industries_list from field exp_industries_list
	sql_attr_multi		=uint experiences_iso_encoded_list from field experiences_iso_encoded_list
	sql_attr_uint		=last_experience_iso_encoded
	sql_field_string		=target_jb_title
	sql_attr_multi		=uint emplyment_type_list from field emplyment_type_list
	sql_attr_multi		=uint emplyment_status_list from field emplyment_status_list
	sql_attr_multi		=uint target_job_locations_list from field target_job_locations_list
	sql_attr_multi		=uint target_job_industries_list from field target_job_industries_list
	sql_attr_uint		=notice_period
	sql_attr_uint		=trgt_job_salary
	sql_attr_uint		=salary_range_cluster_list
	sql_attr_uint		=career_level
	sql_attr_uint           =career_level_sorted
	sql_attr_uint           =months_of_experience_sorted
	sql_attr_uint		=residence_location_iso_encoded
	sql_attr_uint		=residence_country_iso_encoded
	sql_attr_uint		=gender
	sql_attr_uint		=date_of_birth
	sql_attr_uint		=marital_status
	sql_attr_uint		=graduation_date
	sql_attr_uint		=visa_status
	sql_attr_multi		=uint car_license_countries_list_encoded from field car_license_countries_list_encoded
	sql_attr_multi		=uint edu_degree_list from field edu_degree_list
	sql_attr_multi		=uint edu_iso_encoded_list from field edu_iso_encoded_list
	sql_attr_multi		=uint edu_majors_crc32_list from field edu_majors_crc32_list
	sql_attr_multi		=uint edu_institute_crc32_list from field edu_institute_crc32_list
	sql_attr_uint		=last_edu_degree
	sql_attr_multi		=uint language_skills_levels_encoded_list from field language_skills_levels_encoded_list
	sql_attr_uint		=cv_stage
	sql_attr_uint		=locale
	sql_attr_uint		=bcc_id
	sql_attr_uint		=user_id
	sql_attr_uint		=gpa
	sql_attr_uint		=gpa_cluster
	sql_attr_timestamp		=date_indexed
	sql_attr_uint		=parent_bcc_id
	sql_attr_bool		=has_attachment
	sql_attr_bool		=has_photo
	sql_attr_bool		=has_video
	sql_attr_bool		=has_recommendation
	sql_field_string		=first_name
	sql_field_string		=middle_name
	sql_field_string		=last_name
	sql_field_string		=profile_name
	sql_attr_uint		=profile_id
	sql_attr_uint		=referrer_source_id
	sql_attr_multi		=uint specilaities_list from field specilaities_list
	sql_attr_multi		=bigint specilaities_points from field specilaities_points
	sql_attr_uint		=special_needs
	sql_attr_bool		=is_primary
	sql_attr_bool		=email_bouncing_p
	sql_attr_timestamp		=creation_date
	sql_attr_bool		=is_confidential
	sql_field_string		=last_name_ar
	sql_field_string		=last_name_la
	sql_field_string		=first_name_ar
	sql_field_string		=first_name_la
	sql_attr_uint		=primary_nationality
	sql_attr_uint		=primary_nationality_cleaned
	sql_attr_multi          =uint nationalities_list from field nationalities_list
	sql_attr_uint		=registration_iso
	sql_attr_uint		=user_type
	sql_attr_uint		=cv_creation_method
	sql_attr_uint		=affliate_program_id
	sql_attr_uint		=cv_no_search_hits
	sql_attr_uint		=cv_no_submits_to
	sql_attr_uint		=cv_no_reviews
	sql_attr_uint		=completness_score
	sql_attr_timestamp		=registration_date
	sql_attr_multi		=bigint bcc_json_fields from field bcc_json_fields
	sql_attr_uint		=yrs_exp_cluster_id
	sql_attr_uint		=yrs_exp_after_grad_cluster_id
	sql_attr_uint		=completness_scores
	sql_attr_float		=cv_search_ranker
	sql_attr_float		=byt_cv_search_ranker
	sql_attr_uint		=user_public_profile_enable
	sql_attr_uint		=people_ranker
	sql_attr_timestamp		=cv_completion_date
	sql_attr_timestamp		=last_login_date
	sql_field_string		=user_state
	sql_field_string		=email_enc
	sql_field_string		=email_domain
	sql_attr_uint		=dependents
	sql_field_string		=cell_phone_enc
	sql_field_string		=home_phone_enc
	sql_field_string		=work_phone_enc
	sql_field_string		=cell_phone
	sql_attr_uint		=bounce_count
	sql_attr_uint		=last_salary_value
	sql_field_string		=last_exp_emp_full
	sql_attr_uint		=last_exp_emp_crc32_full
	sql_attr_uint		=user_lang_preference
	sql_attr_uint		=premium_account
	sql_attr_multi		=uint user_tests from field user_tests
	sql_attr_multi		=uint user_courses from field user_courses
	sql_attr_uint		=hopping
	sql_attr_uint		=gaps
	sql_attr_uint		=res_visa_status
	sql_attr_timestamp		=mobile_confirm_date
	sql_attr_timestamp		=first_bch_deg_date
	sql_attr_multi		=uint gsm from field gsm
	sql_attr_uint		=last_gsc_id
	sql_attr_uint		=previous_gsc_id
	sql_attr_multi		=uint all_gsc_ids from field all_gsc_ids
	sql_attr_multi		=uint last_gst_id from field last_gst_id
	sql_attr_multi		=uint previous_gst_id from field previous_gst_id
	sql_attr_multi		=uint all_gst_ids from field all_gst_ids
	sql_attr_multi		=uint other_gst_id from field other_gst_id
	sql_attr_multi		=uint target_gst_ids from field target_gst_ids
	sql_attr_uint		=highest_degree
	sql_attr_multi		=uint disabilities from field disabilities
	sql_attr_uint		=months_of_exp_after_grad
	sql_attr_json		=cv_custom_json
	sql_attr_uint		=sessions_count
	sql_field_string		=photo_url
	sql_attr_bool		=unemployed
	sql_attr_uint		=orginal_nationality
	sql_attr_timestamp		=cv_builder_date_modified
	sql_attr_uint		=last_gsi_id
	sql_attr_uint		=previous_gsi_id
	sql_attr_multi		=uint all_gsi_ids from field all_gsi_ids
	sql_attr_multi		=uint target_jb_roles from field target_jb_roles
	sql_attr_uint       =last_exp_comp_size
    	sql_attr_timestamp  =updated_contact_date
	sql_attr_timestamp  =last_exp_start_date
	sql_attr_uint		=index_weight
	sql_attr_multi		=uint folder_id from ranged-query;  SELECT cv_id, folder_id FROM byt_employer_basket_11 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_employer_basket_11 WHERE cv_id between 67000000 and 67999999
	sql_attr_multi		=uint tag_id from ranged-query;  SELECT cv_id, tag_id FROM byt_item_tags_11 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_item_tags_11 WHERE cv_id between 67000000 and 67999999
	sql_attr_multi		=uint note_group_id from ranged-query;  SELECT cv_id, group_id FROM byt_comments_11 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_comments_11 WHERE cv_id between 67000000 and 67999999
}

		index cvMainIndexStemmed_11_1
		{
			type			= plain
			source 			= cvMainIndexStemmed_11_1_src
			path 			= /home/sphinx/sphinx/var/data/cvMainIndexStemmed_11_1
			morphology   = stem_en,stem_ar
			wordforms  = /home/sphinx/sphinx/var/data/wordforms.txt
			dict=keywords
			index_sp  = 1
			index_zones		= b_*, is_agency, special_needs, referrer_source
			stopwords		= en,ar
			exceptions		= /home/sphinx/sphinx/var/data/exceptions.txt
			min_word_len		= 1
			charset_table		= non_cjk
			index_exact_words	= 1
			
			ngram_len		= 1
			#ngram_chars		=  non_cjk
			html_strip				= 1
			preopen				= 1
		}		
		


source cvMainIndex_11_2_src {
	type		=pgsql
	sql_host	=host
	sql_user	=user
	sql_pass	=pass
	sql_db		=database
	sql_port	=9988

	sql_query_pre	=SET client_encoding TO 'UTF8'
	sql_query_pre	= SET NAMES 'UTF8'
	sql_ranged_throttle	=1000
	sql_query_range	= SELECT MIN(cv_id),MAX(cv_id) FROM cv_index_11 WHERE cv_id between 68000000 and 68999999
	sql_query	=SELECT \
				cv_id as id,\
				cv_id,\
				experiences_titles,\
				experiences_description,\
				experiences_employers,\
				last_exp_desc,\
				(CASE WHEN is_confidential = 'f' THEN last_exp_emp ELSE NULL END) as last_exp_emp,\
				(CASE WHEN is_confidential = 'f' THEN previous_exp_emp ELSE NULL END) as previous_exp_emp,\
				last_exp_title,\
				last_exp_title_crc32,\
				previous_exp_title,\
				previous_exp_title_crc32,\
				(CASE WHEN is_confidential = 'f' THEN last_exp_emp_crc32 ELSE 0 END) as last_exp_emp_crc32,\
				(CASE WHEN is_confidential = 'f' THEN previous_exp_emp_crc32 ELSE 0 END) as previous_exp_emp_crc32,\
				(CASE WHEN months_of_experience != 999999 then months_of_experience  WHEN market_entry_date != 999999 then (to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date  ELSE 999999 END ) as total_months_of_experience,\
				industeries_roles_years,\
				present_industeries_roles_years,\
				last_jb_industry,\
				last_jb_role,\
				exp_roles_list,\
				exp_industries_list,\
				experiences_iso_encoded_list,\
				last_experience_iso_encoded,\
				target_jb_title,\
				emplyment_type_list,\
				emplyment_status_list,\
				target_job_locations_list,\
				target_job_industries_list,\
				notice_period,\
				trgt_job_salary,\
				(CASE WHEN trgt_job_salary < 0 then 0  WHEN trgt_job_salary = 0 then 1  WHEN trgt_job_salary < 500 THEN 2  WHEN trgt_job_salary <= 1000 THEN 3  WHEN trgt_job_salary <= 1500 THEN 4  WHEN trgt_job_salary <= 2000 THEN 5  WHEN trgt_job_salary <= 3000 THEN 6  WHEN trgt_job_salary <= 5000 THEN 7  WHEN trgt_job_salary <= 8000 THEN 8  WHEN trgt_job_salary <= 12000 THEN 9  WHEN trgt_job_salary <= 16000 THEN 10  WHEN trgt_job_salary <= 20000 THEN 11  WHEN trgt_job_salary <= 30000 THEN 12  WHEN trgt_job_salary <= 50000 THEN 13  ELSE 14  END) as salary_range_cluster_list,\
				career_level,\
				(CASE WHEN career_level = 6 THEN 2001 WHEN career_level < 6 THEN (career_level+1000)*2 ELSE career_level END) as career_level_sorted,\
				(CASE WHEN months_of_experience != 999999 then months_of_experience  WHEN market_entry_date != 999999 then (to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date  ELSE 0 END ) as months_of_experience_sorted,\
				objective_txt,\
				residence_location_iso_encoded,\
				LEFT(residence_location_iso_encoded::text,4)::int as residence_country_iso_encoded,\
				gender,\
				date_of_birth,\
				marital_status,\
				graduation_date,\
				visa_status,\
				car_license_countries_list_encoded,\
				edu_degree_list,\
				edu_iso_encoded_list,\
				edu_txt,\
				edu_major,\
				edu_majors_crc32_list,\
				lst_edu_major,\
				edu_institute,\
				edu_institute_crc32_list,\
				lst_edu_institute,\
				last_edu_degree,\
				skills_txt,\
				language_skills_levels_encoded_list,\
				cv_stage,\
				locale,\
				bcc_id,\
				generic_txt,\
				user_id,\
				gpa,\
				(CASE when gpa >= 99999 then 5 when gpa >= 8000 then 4 when gpa >= 6000 then 3 when gpa >= 4000 then 2 when gpa >= 2000 then 1 when gpa >= 0 then 0 end) as gpa_cluster,\
				extract('epoch' FROM date_indexed)::bigint AS date_indexed,\
				parent_bcc_id,\
				has_attachment,\
				has_photo,\
				has_video,\
				has_recommendation,\
				first_name,\
				middle_name,\
				last_name,\
				profile_name,\
				profile_id,\
				(case when referrer_source_id is null then 99999 else referrer_source_id end ) as referrer_source_id,\
				specilaities_list,\
				specilaities_text,\
				specilaities_points,\
				user_generic_field1,\
				 COALESCE(special_needs,99999) AS special_needs,\
				is_primary,\
				email_bouncing_p,\
				extract('epoch' FROM creation_date)::bigint AS creation_date,\
				is_confidential,\
				last_name_ar,\
				last_name_la,\
				first_name_ar,\
				first_name_la,\
				first_name_la || ' ' || last_name_la as full_name_la,\
				first_name_ar || ' ' || last_name_ar as full_name_ar,\
				primary_nationality,\
				(case when LEFT(residence_location_iso_encoded::text,4)::int = primary_nationality  and visa_status not in (1,7) then 0  when  LEFT(residence_location_iso_encoded::text,4)::int in (5560,6257,6254,4850,5857) and primary_nationality in (4751,6547,5769,6347,4854,6159)  then 0 else  primary_nationality end) as primary_nationality_cleaned,\
				nationalities_list,\
				specilaities_platinum,\
				specilaities_gold,\
				specilaities_silver,\
				specilaities_bronze,\
				bcc_text_fields,\
				has_flag,\
				registration_iso,\
				user_type,\
				cv_creation_method,\
				affliate_program_id,\
				cv_no_search_hits,\
				cv_no_submits_to,\
				cv_no_reviews,\
				completness_score,\
				extract('epoch' FROM registration_date)::bigint AS registration_date,\
				bcc_json_fields,\
				referrer_source,\
				user_generic_field2,\
				user_generic_field3,\
				user_generic_field4,\
				(case (CASE WHEN months_of_experience != 999999 then CEIL(months_of_experience/11.999)  WHEN market_entry_date != 999999 then ceil(((to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date)/11.999)  ELSE 999999 END )::bigint when 0 then 1 when 1 then 1 when 2 then 2 when 3 then 3 when 4 then 3 when 5 then 3 when 6 then 4 when 7 then 4 when 8 then 4 when 9 then 4 when 10 then 4 when 999999 then 6 else 5 end) as yrs_exp_cluster_id,\
				(case (CASE WHEN months_of_exp_after_grad != 999999 then CEIL(months_of_exp_after_grad/11.999) ELSE 999999 END )::bigint when 0 then 1 when 1 then 1 when 2 then 2 when 3 then 3 when 4 then 3 when 5 then 3 when 6 then 4 when 7 then 4 when 8 then 4 when 9 then 4 when 10 then 4 when 999999 then 6 else 5 end) as yrs_exp_after_grad_cluster_id,\
				(CASE WHEN completness_score < 20 THEN 1 WHEN completness_score < 40 THEN 2 WHEN completness_score < 60 THEN 3 WHEN completness_score < 80 THEN 4 WHEN completness_score < 500 THEN 5 END ) as completness_scores,\
				(case when premium_account > 0 then 1.35 else 1 end) * (case when extract('epoch' FROM mobile_confirm_date)::bigint > 0 then 1.15 else 1 end) * (case when email_bouncing_p = true then 0.01 else 1 end) * (CASE WHEN (completness_score > 99) THEN 1.5 WHEN (completness_score > 80) THEN (1+completness_score/250)  WHEN (completness_score > 50) THEN (1+completness_score/400) WHEN (completness_score > 25) THEN 0.9 ELSE 0.5 END) * (CASE WHEN (last_login_date > NOW()-INTERVAL '2629800 SECOND')    THEN 1.3 WHEN (last_login_date > NOW()-INTERVAL '7889400 SECOND')    THEN 1.23 WHEN (last_login_date > NOW()-INTERVAL '15778800 SECOND')   THEN 1.17  WHEN (last_login_date > NOW()-INTERVAL '31557600  SECOND')  THEN 1.12 WHEN (last_login_date > NOW()-INTERVAL '63115200  SECOND')  THEN 1.06 ELSE 1 END) * (CASE WHEN (date_indexed > NOW()-INTERVAL '2629800 SECOND')    THEN 1.5 WHEN (date_indexed > NOW()-INTERVAL '7889400 SECOND')    THEN 1.4 WHEN (date_indexed > NOW()-INTERVAL '15778800 SECOND')   THEN 1.3  WHEN (date_indexed > NOW()-INTERVAL '31557600  SECOND')  THEN 1.15 WHEN (date_indexed > NOW()-INTERVAL '63115200  SECOND')  THEN 1.13 ELSE 1 END)::float as cv_search_ranker,\
				(case when premium_account > 0 then 1.35 else 1 end) * (case when extract('epoch' FROM mobile_confirm_date)::bigint > 0 then 1.15 else 1 end) * (case when email_bouncing_p = true then 0.01 else 1 end) * (CASE WHEN (completness_score > 99) THEN 1.5 WHEN (completness_score > 80) THEN (1+completness_score/250)  WHEN (completness_score > 50) THEN (1+completness_score/400) WHEN (completness_score > 25) THEN 0.9 ELSE 0.5 END) * (CASE WHEN (last_login_date > NOW()-INTERVAL '2629800 SECOND')    THEN 1.3 WHEN (last_login_date > NOW()-INTERVAL '7889400 SECOND')    THEN 1.23 WHEN (last_login_date > NOW()-INTERVAL '15778800 SECOND')   THEN 1.17  WHEN (last_login_date > NOW()-INTERVAL '31557600  SECOND')  THEN 1.12 WHEN (last_login_date > NOW()-INTERVAL '63115200  SECOND')  THEN 1.06 ELSE 1 END) * (CASE WHEN (cv_builder_date_modified > NOW()-INTERVAL '2629800 SECOND')    THEN 1.5 WHEN (cv_builder_date_modified > NOW()-INTERVAL '7889400 SECOND')    THEN 1.4 WHEN (cv_builder_date_modified > NOW()-INTERVAL '15778800 SECOND')   THEN 1.3  WHEN (cv_builder_date_modified > NOW()-INTERVAL '31557600  SECOND')  THEN 1.15 WHEN (cv_builder_date_modified > NOW()-INTERVAL '63115200  SECOND')  THEN 1.13 ELSE 1 END)::float as byt_cv_search_ranker,\
				(CASE WHEN (is_primary = TRUE and profile_id > 0) THEN 1 ELSE 0 END) as user_public_profile_enable,\
				(case when email_bouncing_p = true then 0.01 else 1 end) * (1000*(1+0.2*(CASE WHEN has_photo = TRUE THEN 1 ELSE 0 END))) as people_ranker,\
				(CASE WHEN (sections_fields IS NULL OR sections_fields = ' ')   THEN 'tar per con edu exp'  ELSE sections_fields  END) as sections_fields,\
				extract('epoch' FROM cv_completion_date)::bigint AS cv_completion_date,\
				extract('epoch' FROM last_login_date)::bigint AS last_login_date,\
				(CASE WHEN (user_state IS NULL OR user_state = ' ')  THEN 'mini' ELSE user_state END) as user_state,\
				email_enc,\
				email_domain,\
				dependents,\
				cell_phone_enc,\
				home_phone_enc,\
				work_phone_enc,\
				cell_phone,\
				bounce_count,\
				last_salary_value,\
				receive_emails_list,\
				last_exp_emp as last_exp_emp_full,\
				last_exp_emp_crc32 as last_exp_emp_crc32_full,\
				user_lang_preference,\
				premium_account,\
				user_tests,\
				user_courses,\
				hobbies,\
				hopping,\
				gaps,\
				res_visa_status,\
				extract('epoch' FROM mobile_confirm_date)::bigint AS mobile_confirm_date,\
				viewer_ids,\
				extract('epoch' FROM first_bch_deg_date)::bigint AS first_bch_deg_date,\
				gsm,\
				last_gsc_id,\
				previous_gsc_id,\
				all_gsc_ids,\
				all_gsc_ids_txt,\
				last_gst_id,\
				previous_gst_id,\
				all_gst_ids,\
				other_gst_id,\
				target_gst_ids,\
				all_gst_ids_text,\
				highest_degree,\
				disabilities,\
				months_of_exp_after_grad,\
				cv_custom_json,\
				sessions_count,\
				photo_url,\
				unemployed,\
				orginal_nationality,\
				extract('epoch' FROM cv_builder_date_modified)::bigint AS cv_builder_date_modified,\
				trainings,\
				certificates,\
				training_institutes,\
				last_gsi_id,\
				previous_gsi_id,\
				all_gsi_ids,\
				target_jb_roles,\
				all_gsi_ids_txt,\
				3 as index_weight,\
				'ANYKEYWORD' as any_keyword,\
				last_exp_comp_size,\
                		extract('epoch' FROM updated_contact_date)::bigint AS updated_contact_date,\
				extract('epoch' FROM last_exp_start_date)::bigint AS last_exp_start_date\
			FROM \
				cv_index_11 \
			WHERE \
				insertion_date <  (SELECT lst_main_index_start_time FROM spx_delta_separator WHERE index_id = 111 LIMIT 1) \
				 AND cv_id>=$start AND cv_id<=$end

	sql_range_step	=25000
	sql_attr_uint		=cv_id
	sql_field_string		=last_exp_emp
	sql_field_string		=previous_exp_emp
	sql_field_string		=last_exp_title
	sql_attr_uint		=last_exp_title_crc32
	sql_field_string		=previous_exp_title
	sql_attr_uint		=previous_exp_title_crc32
	sql_attr_uint		=last_exp_emp_crc32
	sql_attr_uint		=previous_exp_emp_crc32
	sql_attr_uint		=total_months_of_experience
	sql_attr_multi		=bigint industeries_roles_years from field industeries_roles_years
	sql_attr_multi		=bigint present_industeries_roles_years from field present_industeries_roles_years
	sql_attr_uint		=last_jb_industry
	sql_attr_uint		=last_jb_role
	sql_attr_multi		=bigint exp_roles_list from field exp_roles_list
	sql_attr_multi		=bigint exp_industries_list from field exp_industries_list
	sql_attr_multi		=uint experiences_iso_encoded_list from field experiences_iso_encoded_list
	sql_attr_uint		=last_experience_iso_encoded
	sql_field_string		=target_jb_title
	sql_attr_multi		=uint emplyment_type_list from field emplyment_type_list
	sql_attr_multi		=uint emplyment_status_list from field emplyment_status_list
	sql_attr_multi		=uint target_job_locations_list from field target_job_locations_list
	sql_attr_multi		=uint target_job_industries_list from field target_job_industries_list
	sql_attr_uint		=notice_period
	sql_attr_uint		=trgt_job_salary
	sql_attr_uint		=salary_range_cluster_list
	sql_attr_uint		=career_level
        sql_attr_uint   	=career_level_sorted
        sql_attr_uint	        =months_of_experience_sorted
	sql_attr_uint		=residence_location_iso_encoded
	sql_attr_uint		=residence_country_iso_encoded
	sql_attr_uint		=gender
	sql_attr_uint		=date_of_birth
	sql_attr_uint		=marital_status
	sql_attr_uint		=graduation_date
	sql_attr_uint		=visa_status
	sql_attr_multi		=uint car_license_countries_list_encoded from field car_license_countries_list_encoded
	sql_attr_multi		=uint edu_degree_list from field edu_degree_list
	sql_attr_multi		=uint edu_iso_encoded_list from field edu_iso_encoded_list
	sql_attr_multi		=uint edu_majors_crc32_list from field edu_majors_crc32_list
	sql_attr_multi		=uint edu_institute_crc32_list from field edu_institute_crc32_list
	sql_attr_uint		=last_edu_degree
	sql_attr_multi		=uint language_skills_levels_encoded_list from field language_skills_levels_encoded_list
	sql_attr_uint		=cv_stage
	sql_attr_uint		=locale
	sql_attr_uint		=bcc_id
	sql_attr_uint		=user_id
	sql_attr_uint		=gpa
	sql_attr_uint		=gpa_cluster
	sql_attr_timestamp		=date_indexed
	sql_attr_uint		=parent_bcc_id
	sql_attr_bool		=has_attachment
	sql_attr_bool		=has_photo
	sql_attr_bool		=has_video
	sql_attr_bool		=has_recommendation
	sql_field_string		=first_name
	sql_field_string		=middle_name
	sql_field_string		=last_name
	sql_field_string		=profile_name
	sql_attr_uint		=profile_id
	sql_attr_uint		=referrer_source_id
	sql_attr_multi		=uint specilaities_list from field specilaities_list
	sql_attr_multi		=bigint specilaities_points from field specilaities_points
	sql_attr_uint		=special_needs
	sql_attr_bool		=is_primary
	sql_attr_bool		=email_bouncing_p
	sql_attr_timestamp		=creation_date
	sql_attr_bool		=is_confidential
	sql_field_string		=last_name_ar
	sql_field_string		=last_name_la
	sql_field_string		=first_name_ar
	sql_field_string		=first_name_la
	sql_attr_uint		=primary_nationality
	sql_attr_uint		=primary_nationality_cleaned
	sql_attr_multi          =uint nationalities_list from field nationalities_list
	sql_attr_uint		=registration_iso
	sql_attr_uint		=user_type
	sql_attr_uint		=cv_creation_method
	sql_attr_uint		=affliate_program_id
	sql_attr_uint		=cv_no_search_hits
	sql_attr_uint		=cv_no_submits_to
	sql_attr_uint		=cv_no_reviews
	sql_attr_uint		=completness_score
	sql_attr_timestamp		=registration_date
	sql_attr_multi		=bigint bcc_json_fields from field bcc_json_fields
	sql_attr_uint		=yrs_exp_cluster_id
	sql_attr_uint		=yrs_exp_after_grad_cluster_id
	sql_attr_uint		=completness_scores
	sql_attr_float		=cv_search_ranker
	sql_attr_float		=byt_cv_search_ranker
	sql_attr_uint		=user_public_profile_enable
	sql_attr_uint		=people_ranker
	sql_attr_timestamp		=cv_completion_date
	sql_attr_timestamp		=last_login_date
	sql_field_string		=user_state
	sql_field_string		=email_enc
	sql_field_string		=email_domain
	sql_attr_uint		=dependents
	sql_field_string		=cell_phone_enc
	sql_field_string		=home_phone_enc
	sql_field_string		=work_phone_enc
	sql_field_string		=cell_phone
	sql_attr_uint		=bounce_count
	sql_attr_uint		=last_salary_value
	sql_field_string		=last_exp_emp_full
	sql_attr_uint		=last_exp_emp_crc32_full
	sql_attr_uint		=user_lang_preference
	sql_attr_uint		=premium_account
	sql_attr_multi		=uint user_tests from field user_tests
	sql_attr_multi		=uint user_courses from field user_courses
	sql_attr_uint		=hopping
	sql_attr_uint		=gaps
	sql_attr_uint		=res_visa_status
	sql_attr_timestamp		=mobile_confirm_date
	sql_attr_timestamp		=first_bch_deg_date
	sql_attr_multi		=uint gsm from field gsm
	sql_attr_uint		=last_gsc_id
	sql_attr_uint		=previous_gsc_id
	sql_attr_multi		=uint all_gsc_ids from field all_gsc_ids
	sql_attr_multi		=uint last_gst_id from field last_gst_id
	sql_attr_multi		=uint previous_gst_id from field previous_gst_id
	sql_attr_multi		=uint all_gst_ids from field all_gst_ids
	sql_attr_multi		=uint other_gst_id from field other_gst_id
	sql_attr_multi		=uint target_gst_ids from field target_gst_ids
	sql_attr_uint		=highest_degree
	sql_attr_multi		=uint disabilities from field disabilities
	sql_attr_uint		=months_of_exp_after_grad
	sql_attr_json		=cv_custom_json
	sql_attr_uint		=sessions_count
	sql_field_string		=photo_url
	sql_attr_bool		=unemployed
	sql_attr_uint		=orginal_nationality
	sql_attr_timestamp		=cv_builder_date_modified
	sql_attr_uint		=last_gsi_id
	sql_attr_uint		=previous_gsi_id
	sql_attr_multi		=uint all_gsi_ids from field all_gsi_ids
	sql_attr_multi		=uint target_jb_roles from field target_jb_roles
    	sql_attr_uint       =last_exp_comp_size
   	sql_attr_timestamp  =updated_contact_date
	sql_attr_timestamp  =last_exp_start_date
	sql_attr_uint		=index_weight
	sql_attr_multi		=uint folder_id from ranged-query;  SELECT cv_id, folder_id FROM byt_employer_basket_11 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_employer_basket_11 WHERE cv_id between 68000000 and 68999999
	sql_attr_multi		=uint tag_id from ranged-query;  SELECT cv_id, tag_id FROM byt_item_tags_11 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_item_tags_11 WHERE cv_id between 68000000 and 68999999
	sql_attr_multi		=uint note_group_id from ranged-query;  SELECT cv_id, group_id FROM byt_comments_11 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_comments_11 WHERE cv_id between 68000000 and 68999999
}

		index cvMainIndex_11_2
		{
			type			= plain
			source 			= cvMainIndex_11_2_src
			path 			= /home/sphinx/sphinx/var/data/cvMainIndex_11_2
			morphology   = none
			dict=keywords
			index_sp  = 1
			index_zones		= b_*, is_agency, special_needs, referrer_source
			stopwords		= en,ar
			exceptions		= /home/sphinx/sphinx/var/data/exceptions.txt
			min_word_len		= 1
			charset_table		= non_cjk
			ngram_len		= 1
			#ngram_chars		=  non_cjk
			inplace_enable		= 0
			html_strip				= 1
			preopen				= 1
		}		

	source cvMainIndexStemmed_11_2_src {
	type		=pgsql
	sql_host	=host
	sql_user	=user
	sql_pass	=pass
	sql_db		=database
	sql_port	=9988

	sql_query_pre	=SET client_encoding TO 'UTF8'
	sql_query_pre	= SET NAMES 'UTF8'
	sql_ranged_throttle	=1000
	sql_query_range	= SELECT MIN(cv_id),MAX(cv_id) FROM cv_index_11 WHERE cv_id between 68000000 and 68999999
	sql_query	=SELECT \
				cv_id as id,\
				cv_id,\
				experiences_titles,\
				experiences_description,\
				experiences_employers,\
				last_exp_desc,\
				(CASE WHEN is_confidential = 'f' THEN last_exp_emp ELSE NULL END) as last_exp_emp,\
				(CASE WHEN is_confidential = 'f' THEN previous_exp_emp ELSE NULL END) as previous_exp_emp,\
				last_exp_title,\
				last_exp_title_crc32,\
				previous_exp_title,\
				previous_exp_title_crc32,\
				(CASE WHEN is_confidential = 'f' THEN last_exp_emp_crc32 ELSE 0 END) as last_exp_emp_crc32,\
				(CASE WHEN is_confidential = 'f' THEN previous_exp_emp_crc32 ELSE 0 END) as previous_exp_emp_crc32,\
				(CASE WHEN months_of_experience != 999999 then months_of_experience  WHEN market_entry_date != 999999 then (to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date  ELSE 999999 END ) as total_months_of_experience,\
				industeries_roles_years,\
				present_industeries_roles_years,\
				last_jb_industry,\
				last_jb_role,\
				exp_roles_list,\
				exp_industries_list,\
				experiences_iso_encoded_list,\
				last_experience_iso_encoded,\
				target_jb_title,\
				emplyment_type_list,\
				emplyment_status_list,\
				target_job_locations_list,\
				target_job_industries_list,\
				notice_period,\
				trgt_job_salary,\
				(CASE WHEN trgt_job_salary < 0 then 0  WHEN trgt_job_salary = 0 then 1  WHEN trgt_job_salary < 500 THEN 2  WHEN trgt_job_salary <= 1000 THEN 3  WHEN trgt_job_salary <= 1500 THEN 4  WHEN trgt_job_salary <= 2000 THEN 5  WHEN trgt_job_salary <= 3000 THEN 6  WHEN trgt_job_salary <= 5000 THEN 7  WHEN trgt_job_salary <= 8000 THEN 8  WHEN trgt_job_salary <= 12000 THEN 9  WHEN trgt_job_salary <= 16000 THEN 10  WHEN trgt_job_salary <= 20000 THEN 11  WHEN trgt_job_salary <= 30000 THEN 12  WHEN trgt_job_salary <= 50000 THEN 13  ELSE 14  END) as salary_range_cluster_list,\
				career_level,\
				(CASE WHEN career_level = 6 THEN 2001 WHEN career_level < 6 THEN (career_level+1000)*2 ELSE career_level END) as career_level_sorted,\
				(CASE WHEN months_of_experience != 999999 then months_of_experience  WHEN market_entry_date != 999999 then (to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date  ELSE 0 END ) as months_of_experience_sorted,\
				objective_txt,\
				residence_location_iso_encoded,\
				LEFT(residence_location_iso_encoded::text,4)::int as residence_country_iso_encoded,\
				gender,\
				date_of_birth,\
				marital_status,\
				graduation_date,\
				visa_status,\
				car_license_countries_list_encoded,\
				edu_degree_list,\
				edu_iso_encoded_list,\
				edu_txt,\
				edu_major,\
				edu_majors_crc32_list,\
				lst_edu_major,\
				edu_institute,\
				edu_institute_crc32_list,\
				lst_edu_institute,\
				last_edu_degree,\
				skills_txt,\
				language_skills_levels_encoded_list,\
				cv_stage,\
				locale,\
				bcc_id,\
				generic_txt,\
				user_id,\
				gpa,\
				(CASE when gpa >= 99999 then 5 when gpa >= 8000 then 4 when gpa >= 6000 then 3 when gpa >= 4000 then 2 when gpa >= 2000 then 1 when gpa >= 0 then 0 end) as gpa_cluster,\
				extract('epoch' FROM date_indexed)::bigint AS date_indexed,\
				parent_bcc_id,\
				has_attachment,\
				has_photo,\
				has_video,\
				has_recommendation,\
				first_name,\
				middle_name,\
				last_name,\
				profile_name,\
				profile_id,\
				(case when referrer_source_id is null then 99999 else referrer_source_id end ) as referrer_source_id,\
				specilaities_list,\
				specilaities_text,\
				specilaities_points,\
				user_generic_field1,\
				 COALESCE(special_needs,99999) AS special_needs,\
				is_primary,\
				email_bouncing_p,\
				extract('epoch' FROM creation_date)::bigint AS creation_date,\
				is_confidential,\
				last_name_ar,\
				last_name_la,\
				first_name_ar,\
				first_name_la,\
				first_name_la || ' ' || last_name_la as full_name_la,\
				first_name_ar || ' ' || last_name_ar as full_name_ar,\
				primary_nationality,\
				(case when LEFT(residence_location_iso_encoded::text,4)::int = primary_nationality  and visa_status not in (1,7) then 0  when  LEFT(residence_location_iso_encoded::text,4)::int in (5560,6257,6254,4850,5857) and primary_nationality in (4751,6547,5769,6347,4854,6159)  then 0 else  primary_nationality end) as primary_nationality_cleaned,\
				nationalities_list,\
				specilaities_platinum,\
				specilaities_gold,\
				specilaities_silver,\
				specilaities_bronze,\
				bcc_text_fields,\
				has_flag,\
				registration_iso,\
				user_type,\
				cv_creation_method,\
				affliate_program_id,\
				cv_no_search_hits,\
				cv_no_submits_to,\
				cv_no_reviews,\
				completness_score,\
				extract('epoch' FROM registration_date)::bigint AS registration_date,\
				bcc_json_fields,\
				referrer_source,\
				user_generic_field2,\
				user_generic_field3,\
				user_generic_field4,\
				(case (CASE WHEN months_of_experience != 999999 then CEIL(months_of_experience/11.999)  WHEN market_entry_date != 999999 then ceil(((to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date)/11.999)  ELSE 999999 END )::bigint when 0 then 1 when 1 then 1 when 2 then 2 when 3 then 3 when 4 then 3 when 5 then 3 when 6 then 4 when 7 then 4 when 8 then 4 when 9 then 4 when 10 then 4 when 999999 then 6 else 5 end) as yrs_exp_cluster_id,\
				(case (CASE WHEN months_of_exp_after_grad != 999999 then CEIL(months_of_exp_after_grad/11.999) ELSE 999999 END )::bigint when 0 then 1 when 1 then 1 when 2 then 2 when 3 then 3 when 4 then 3 when 5 then 3 when 6 then 4 when 7 then 4 when 8 then 4 when 9 then 4 when 10 then 4 when 999999 then 6 else 5 end) as yrs_exp_after_grad_cluster_id,\
				(CASE WHEN completness_score < 20 THEN 1 WHEN completness_score < 40 THEN 2 WHEN completness_score < 60 THEN 3 WHEN completness_score < 80 THEN 4 WHEN completness_score < 500 THEN 5 END ) as completness_scores,\
				(case when premium_account > 0 then 1.35 else 1 end) * (case when extract('epoch' FROM mobile_confirm_date)::bigint > 0 then 1.15 else 1 end) * (case when email_bouncing_p = true then 0.01 else 1 end) * (CASE WHEN (completness_score > 99) THEN 1.5 WHEN (completness_score > 80) THEN (1+completness_score/250)  WHEN (completness_score > 50) THEN (1+completness_score/400) WHEN (completness_score > 25) THEN 0.9 ELSE 0.5 END) * (CASE WHEN (last_login_date > NOW()-INTERVAL '2629800 SECOND')    THEN 1.3 WHEN (last_login_date > NOW()-INTERVAL '7889400 SECOND')    THEN 1.23 WHEN (last_login_date > NOW()-INTERVAL '15778800 SECOND')   THEN 1.17  WHEN (last_login_date > NOW()-INTERVAL '31557600  SECOND')  THEN 1.12 WHEN (last_login_date > NOW()-INTERVAL '63115200  SECOND')  THEN 1.06 ELSE 1 END) * (CASE WHEN (date_indexed > NOW()-INTERVAL '2629800 SECOND')    THEN 1.5 WHEN (date_indexed > NOW()-INTERVAL '7889400 SECOND')    THEN 1.4 WHEN (date_indexed > NOW()-INTERVAL '15778800 SECOND')   THEN 1.3  WHEN (date_indexed > NOW()-INTERVAL '31557600  SECOND')  THEN 1.15 WHEN (date_indexed > NOW()-INTERVAL '63115200  SECOND')  THEN 1.13 ELSE 1 END)::float as cv_search_ranker,\
				(case when premium_account > 0 then 1.35 else 1 end) * (case when extract('epoch' FROM mobile_confirm_date)::bigint > 0 then 1.15 else 1 end) * (case when email_bouncing_p = true then 0.01 else 1 end) * (CASE WHEN (completness_score > 99) THEN 1.5 WHEN (completness_score > 80) THEN (1+completness_score/250)  WHEN (completness_score > 50) THEN (1+completness_score/400) WHEN (completness_score > 25) THEN 0.9 ELSE 0.5 END) * (CASE WHEN (last_login_date > NOW()-INTERVAL '2629800 SECOND')    THEN 1.3 WHEN (last_login_date > NOW()-INTERVAL '7889400 SECOND')    THEN 1.23 WHEN (last_login_date > NOW()-INTERVAL '15778800 SECOND')   THEN 1.17  WHEN (last_login_date > NOW()-INTERVAL '31557600  SECOND')  THEN 1.12 WHEN (last_login_date > NOW()-INTERVAL '63115200  SECOND')  THEN 1.06 ELSE 1 END) * (CASE WHEN (cv_builder_date_modified > NOW()-INTERVAL '2629800 SECOND')    THEN 1.5 WHEN (cv_builder_date_modified > NOW()-INTERVAL '7889400 SECOND')    THEN 1.4 WHEN (cv_builder_date_modified > NOW()-INTERVAL '15778800 SECOND')   THEN 1.3  WHEN (cv_builder_date_modified > NOW()-INTERVAL '31557600  SECOND')  THEN 1.15 WHEN (cv_builder_date_modified > NOW()-INTERVAL '63115200  SECOND')  THEN 1.13 ELSE 1 END)::float as byt_cv_search_ranker,\
				(CASE WHEN (is_primary = TRUE and profile_id > 0) THEN 1 ELSE 0 END) as user_public_profile_enable,\
				(case when email_bouncing_p = true then 0.01 else 1 end) * (1000*(1+0.2*(CASE WHEN has_photo = TRUE THEN 1 ELSE 0 END))) as people_ranker,\
				(CASE WHEN (sections_fields IS NULL OR sections_fields = ' ')   THEN 'tar per con edu exp'  ELSE sections_fields  END) as sections_fields,\
				extract('epoch' FROM cv_completion_date)::bigint AS cv_completion_date,\
				extract('epoch' FROM last_login_date)::bigint AS last_login_date,\
				(CASE WHEN (user_state IS NULL OR user_state = ' ')  THEN 'mini' ELSE user_state END) as user_state,\
				email_enc,\
				email_domain,\
				dependents,\
				cell_phone_enc,\
				home_phone_enc,\
				work_phone_enc,\
				cell_phone,\
				bounce_count,\
				last_salary_value,\
				receive_emails_list,\
				last_exp_emp as last_exp_emp_full,\
				last_exp_emp_crc32 as last_exp_emp_crc32_full,\
				user_lang_preference,\
				premium_account,\
				user_tests,\
				user_courses,\
				hobbies,\
				hopping,\
				gaps,\
				res_visa_status,\
				extract('epoch' FROM mobile_confirm_date)::bigint AS mobile_confirm_date,\
				viewer_ids,\
				extract('epoch' FROM first_bch_deg_date)::bigint AS first_bch_deg_date,\
				gsm,\
				last_gsc_id,\
				previous_gsc_id,\
				all_gsc_ids,\
				all_gsc_ids_txt,\
				last_gst_id,\
				previous_gst_id,\
				all_gst_ids,\
				other_gst_id,\
				target_gst_ids,\
				all_gst_ids_text,\
				highest_degree,\
				disabilities,\
				months_of_exp_after_grad,\
				cv_custom_json,\
				sessions_count,\
				photo_url,\
				unemployed,\
				orginal_nationality,\
				extract('epoch' FROM cv_builder_date_modified)::bigint AS cv_builder_date_modified,\
				trainings,\
				certificates,\
				training_institutes,\
				last_gsi_id,\
				previous_gsi_id,\
				all_gsi_ids,\
				target_jb_roles,\
				all_gsi_ids_txt,\
				1 as index_weight,\
				'ANYKEYWORD' as any_keyword,\
				last_exp_comp_size,\
                		extract('epoch' FROM updated_contact_date)::bigint AS updated_contact_date,\
				extract('epoch' FROM last_exp_start_date)::bigint AS last_exp_start_date\
			FROM \
				cv_index_11 \
			WHERE \
				insertion_date <  (SELECT lst_main_index_start_time FROM spx_delta_separator WHERE index_id = 111 LIMIT 1) \
				 AND cv_id>=$start AND cv_id<=$end

	sql_range_step	=25000
	sql_attr_uint		=cv_id
	sql_field_string		=last_exp_emp
	sql_field_string		=previous_exp_emp
	sql_field_string		=last_exp_title
	sql_attr_uint		=last_exp_title_crc32
	sql_field_string		=previous_exp_title
	sql_attr_uint		=previous_exp_title_crc32
	sql_attr_uint		=last_exp_emp_crc32
	sql_attr_uint		=previous_exp_emp_crc32
	sql_attr_uint		=total_months_of_experience
	sql_attr_multi		=bigint industeries_roles_years from field industeries_roles_years
	sql_attr_multi		=bigint present_industeries_roles_years from field present_industeries_roles_years
	sql_attr_uint		=last_jb_industry
	sql_attr_uint		=last_jb_role
	sql_attr_multi		=bigint exp_roles_list from field exp_roles_list
	sql_attr_multi		=bigint exp_industries_list from field exp_industries_list
	sql_attr_multi		=uint experiences_iso_encoded_list from field experiences_iso_encoded_list
	sql_attr_uint		=last_experience_iso_encoded
	sql_field_string		=target_jb_title
	sql_attr_multi		=uint emplyment_type_list from field emplyment_type_list
	sql_attr_multi		=uint emplyment_status_list from field emplyment_status_list
	sql_attr_multi		=uint target_job_locations_list from field target_job_locations_list
	sql_attr_multi		=uint target_job_industries_list from field target_job_industries_list
	sql_attr_uint		=notice_period
	sql_attr_uint		=trgt_job_salary
	sql_attr_uint		=salary_range_cluster_list
	sql_attr_uint		=career_level
	sql_attr_uint           =career_level_sorted
	sql_attr_uint           =months_of_experience_sorted
	sql_attr_uint		=residence_location_iso_encoded
	sql_attr_uint		=residence_country_iso_encoded
	sql_attr_uint		=gender
	sql_attr_uint		=date_of_birth
	sql_attr_uint		=marital_status
	sql_attr_uint		=graduation_date
	sql_attr_uint		=visa_status
	sql_attr_multi		=uint car_license_countries_list_encoded from field car_license_countries_list_encoded
	sql_attr_multi		=uint edu_degree_list from field edu_degree_list
	sql_attr_multi		=uint edu_iso_encoded_list from field edu_iso_encoded_list
	sql_attr_multi		=uint edu_majors_crc32_list from field edu_majors_crc32_list
	sql_attr_multi		=uint edu_institute_crc32_list from field edu_institute_crc32_list
	sql_attr_uint		=last_edu_degree
	sql_attr_multi		=uint language_skills_levels_encoded_list from field language_skills_levels_encoded_list
	sql_attr_uint		=cv_stage
	sql_attr_uint		=locale
	sql_attr_uint		=bcc_id
	sql_attr_uint		=user_id
	sql_attr_uint		=gpa
	sql_attr_uint		=gpa_cluster
	sql_attr_timestamp		=date_indexed
	sql_attr_uint		=parent_bcc_id
	sql_attr_bool		=has_attachment
	sql_attr_bool		=has_photo
	sql_attr_bool		=has_video
	sql_attr_bool		=has_recommendation
	sql_field_string		=first_name
	sql_field_string		=middle_name
	sql_field_string		=last_name
	sql_field_string		=profile_name
	sql_attr_uint		=profile_id
	sql_attr_uint		=referrer_source_id
	sql_attr_multi		=uint specilaities_list from field specilaities_list
	sql_attr_multi		=bigint specilaities_points from field specilaities_points
	sql_attr_uint		=special_needs
	sql_attr_bool		=is_primary
	sql_attr_bool		=email_bouncing_p
	sql_attr_timestamp		=creation_date
	sql_attr_bool		=is_confidential
	sql_field_string		=last_name_ar
	sql_field_string		=last_name_la
	sql_field_string		=first_name_ar
	sql_field_string		=first_name_la
	sql_attr_uint		=primary_nationality
	sql_attr_uint		=primary_nationality_cleaned
	sql_attr_multi          =uint nationalities_list from field nationalities_list
	sql_attr_uint		=registration_iso
	sql_attr_uint		=user_type
	sql_attr_uint		=cv_creation_method
	sql_attr_uint		=affliate_program_id
	sql_attr_uint		=cv_no_search_hits
	sql_attr_uint		=cv_no_submits_to
	sql_attr_uint		=cv_no_reviews
	sql_attr_uint		=completness_score
	sql_attr_timestamp		=registration_date
	sql_attr_multi		=bigint bcc_json_fields from field bcc_json_fields
	sql_attr_uint		=yrs_exp_cluster_id
	sql_attr_uint		=yrs_exp_after_grad_cluster_id
	sql_attr_uint		=completness_scores
	sql_attr_float		=cv_search_ranker
	sql_attr_float		=byt_cv_search_ranker
	sql_attr_uint		=user_public_profile_enable
	sql_attr_uint		=people_ranker
	sql_attr_timestamp		=cv_completion_date
	sql_attr_timestamp		=last_login_date
	sql_field_string		=user_state
	sql_field_string		=email_enc
	sql_field_string		=email_domain
	sql_attr_uint		=dependents
	sql_field_string		=cell_phone_enc
	sql_field_string		=home_phone_enc
	sql_field_string		=work_phone_enc
	sql_field_string		=cell_phone
	sql_attr_uint		=bounce_count
	sql_attr_uint		=last_salary_value
	sql_field_string		=last_exp_emp_full
	sql_attr_uint		=last_exp_emp_crc32_full
	sql_attr_uint		=user_lang_preference
	sql_attr_uint		=premium_account
	sql_attr_multi		=uint user_tests from field user_tests
	sql_attr_multi		=uint user_courses from field user_courses
	sql_attr_uint		=hopping
	sql_attr_uint		=gaps
	sql_attr_uint		=res_visa_status
	sql_attr_timestamp		=mobile_confirm_date
	sql_attr_timestamp		=first_bch_deg_date
	sql_attr_multi		=uint gsm from field gsm
	sql_attr_uint		=last_gsc_id
	sql_attr_uint		=previous_gsc_id
	sql_attr_multi		=uint all_gsc_ids from field all_gsc_ids
	sql_attr_multi		=uint last_gst_id from field last_gst_id
	sql_attr_multi		=uint previous_gst_id from field previous_gst_id
	sql_attr_multi		=uint all_gst_ids from field all_gst_ids
	sql_attr_multi		=uint other_gst_id from field other_gst_id
	sql_attr_multi		=uint target_gst_ids from field target_gst_ids
	sql_attr_uint		=highest_degree
	sql_attr_multi		=uint disabilities from field disabilities
	sql_attr_uint		=months_of_exp_after_grad
	sql_attr_json		=cv_custom_json
	sql_attr_uint		=sessions_count
	sql_field_string		=photo_url
	sql_attr_bool		=unemployed
	sql_attr_uint		=orginal_nationality
	sql_attr_timestamp		=cv_builder_date_modified
	sql_attr_uint		=last_gsi_id
	sql_attr_uint		=previous_gsi_id
	sql_attr_multi		=uint all_gsi_ids from field all_gsi_ids
	sql_attr_multi		=uint target_jb_roles from field target_jb_roles
	sql_attr_uint       =last_exp_comp_size
    	sql_attr_timestamp  =updated_contact_date
	sql_attr_timestamp  =last_exp_start_date
	sql_attr_uint		=index_weight
	sql_attr_multi		=uint folder_id from ranged-query;  SELECT cv_id, folder_id FROM byt_employer_basket_11 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_employer_basket_11 WHERE cv_id between 68000000 and 68999999
	sql_attr_multi		=uint tag_id from ranged-query;  SELECT cv_id, tag_id FROM byt_item_tags_11 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_item_tags_11 WHERE cv_id between 68000000 and 68999999
	sql_attr_multi		=uint note_group_id from ranged-query;  SELECT cv_id, group_id FROM byt_comments_11 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_comments_11 WHERE cv_id between 68000000 and 68999999
}

		index cvMainIndexStemmed_11_2
		{
			type			= plain
			source 			= cvMainIndexStemmed_11_2_src
			path 			= /home/sphinx/sphinx/var/data/cvMainIndexStemmed_11_2
			morphology   = stem_en,stem_ar
			wordforms  = /home/sphinx/sphinx/var/data/wordforms.txt
			dict=keywords
			index_sp  = 1
			index_zones		= b_*, is_agency, special_needs, referrer_source
			stopwords		= en,ar
			exceptions		= /home/sphinx/sphinx/var/data/exceptions.txt
			min_word_len		= 1
			charset_table		= non_cjk
			index_exact_words	= 1
			
			ngram_len		= 1
			#ngram_chars		=  non_cjk
			html_strip				= 1
			preopen				= 1
		}		
		


source cvMainIndex_11_3_src {
	type		=pgsql
	sql_host	=host
	sql_user	=user
	sql_pass	=pass
	sql_db		=database
	sql_port	=9988

	sql_query_pre	=SET client_encoding TO 'UTF8'
	sql_query_pre	= SET NAMES 'UTF8'
	sql_ranged_throttle	=1000
	sql_query_range	= SELECT MIN(cv_id),MAX(cv_id) FROM cv_index_11 WHERE cv_id between 69000000 and 69999999
	sql_query	=SELECT \
				cv_id as id,\
				cv_id,\
				experiences_titles,\
				experiences_description,\
				experiences_employers,\
				last_exp_desc,\
				(CASE WHEN is_confidential = 'f' THEN last_exp_emp ELSE NULL END) as last_exp_emp,\
				(CASE WHEN is_confidential = 'f' THEN previous_exp_emp ELSE NULL END) as previous_exp_emp,\
				last_exp_title,\
				last_exp_title_crc32,\
				previous_exp_title,\
				previous_exp_title_crc32,\
				(CASE WHEN is_confidential = 'f' THEN last_exp_emp_crc32 ELSE 0 END) as last_exp_emp_crc32,\
				(CASE WHEN is_confidential = 'f' THEN previous_exp_emp_crc32 ELSE 0 END) as previous_exp_emp_crc32,\
				(CASE WHEN months_of_experience != 999999 then months_of_experience  WHEN market_entry_date != 999999 then (to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date  ELSE 999999 END ) as total_months_of_experience,\
				industeries_roles_years,\
				present_industeries_roles_years,\
				last_jb_industry,\
				last_jb_role,\
				exp_roles_list,\
				exp_industries_list,\
				experiences_iso_encoded_list,\
				last_experience_iso_encoded,\
				target_jb_title,\
				emplyment_type_list,\
				emplyment_status_list,\
				target_job_locations_list,\
				target_job_industries_list,\
				notice_period,\
				trgt_job_salary,\
				(CASE WHEN trgt_job_salary < 0 then 0  WHEN trgt_job_salary = 0 then 1  WHEN trgt_job_salary < 500 THEN 2  WHEN trgt_job_salary <= 1000 THEN 3  WHEN trgt_job_salary <= 1500 THEN 4  WHEN trgt_job_salary <= 2000 THEN 5  WHEN trgt_job_salary <= 3000 THEN 6  WHEN trgt_job_salary <= 5000 THEN 7  WHEN trgt_job_salary <= 8000 THEN 8  WHEN trgt_job_salary <= 12000 THEN 9  WHEN trgt_job_salary <= 16000 THEN 10  WHEN trgt_job_salary <= 20000 THEN 11  WHEN trgt_job_salary <= 30000 THEN 12  WHEN trgt_job_salary <= 50000 THEN 13  ELSE 14  END) as salary_range_cluster_list,\
				career_level,\
				(CASE WHEN career_level = 6 THEN 2001 WHEN career_level < 6 THEN (career_level+1000)*2 ELSE career_level END) as career_level_sorted,\
				(CASE WHEN months_of_experience != 999999 then months_of_experience  WHEN market_entry_date != 999999 then (to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date  ELSE 0 END ) as months_of_experience_sorted,\
				objective_txt,\
				residence_location_iso_encoded,\
				LEFT(residence_location_iso_encoded::text,4)::int as residence_country_iso_encoded,\
				gender,\
				date_of_birth,\
				marital_status,\
				graduation_date,\
				visa_status,\
				car_license_countries_list_encoded,\
				edu_degree_list,\
				edu_iso_encoded_list,\
				edu_txt,\
				edu_major,\
				edu_majors_crc32_list,\
				lst_edu_major,\
				edu_institute,\
				edu_institute_crc32_list,\
				lst_edu_institute,\
				last_edu_degree,\
				skills_txt,\
				language_skills_levels_encoded_list,\
				cv_stage,\
				locale,\
				bcc_id,\
				generic_txt,\
				user_id,\
				gpa,\
				(CASE when gpa >= 99999 then 5 when gpa >= 8000 then 4 when gpa >= 6000 then 3 when gpa >= 4000 then 2 when gpa >= 2000 then 1 when gpa >= 0 then 0 end) as gpa_cluster,\
				extract('epoch' FROM date_indexed)::bigint AS date_indexed,\
				parent_bcc_id,\
				has_attachment,\
				has_photo,\
				has_video,\
				has_recommendation,\
				first_name,\
				middle_name,\
				last_name,\
				profile_name,\
				profile_id,\
				(case when referrer_source_id is null then 99999 else referrer_source_id end ) as referrer_source_id,\
				specilaities_list,\
				specilaities_text,\
				specilaities_points,\
				user_generic_field1,\
				 COALESCE(special_needs,99999) AS special_needs,\
				is_primary,\
				email_bouncing_p,\
				extract('epoch' FROM creation_date)::bigint AS creation_date,\
				is_confidential,\
				last_name_ar,\
				last_name_la,\
				first_name_ar,\
				first_name_la,\
				first_name_la || ' ' || last_name_la as full_name_la,\
				first_name_ar || ' ' || last_name_ar as full_name_ar,\
				primary_nationality,\
				(case when LEFT(residence_location_iso_encoded::text,4)::int = primary_nationality  and visa_status not in (1,7) then 0  when  LEFT(residence_location_iso_encoded::text,4)::int in (5560,6257,6254,4850,5857) and primary_nationality in (4751,6547,5769,6347,4854,6159)  then 0 else  primary_nationality end) as primary_nationality_cleaned,\
				nationalities_list,\
				specilaities_platinum,\
				specilaities_gold,\
				specilaities_silver,\
				specilaities_bronze,\
				bcc_text_fields,\
				has_flag,\
				registration_iso,\
				user_type,\
				cv_creation_method,\
				affliate_program_id,\
				cv_no_search_hits,\
				cv_no_submits_to,\
				cv_no_reviews,\
				completness_score,\
				extract('epoch' FROM registration_date)::bigint AS registration_date,\
				bcc_json_fields,\
				referrer_source,\
				user_generic_field2,\
				user_generic_field3,\
				user_generic_field4,\
				(case (CASE WHEN months_of_experience != 999999 then CEIL(months_of_experience/11.999)  WHEN market_entry_date != 999999 then ceil(((to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date)/11.999)  ELSE 999999 END )::bigint when 0 then 1 when 1 then 1 when 2 then 2 when 3 then 3 when 4 then 3 when 5 then 3 when 6 then 4 when 7 then 4 when 8 then 4 when 9 then 4 when 10 then 4 when 999999 then 6 else 5 end) as yrs_exp_cluster_id,\
				(case (CASE WHEN months_of_exp_after_grad != 999999 then CEIL(months_of_exp_after_grad/11.999) ELSE 999999 END )::bigint when 0 then 1 when 1 then 1 when 2 then 2 when 3 then 3 when 4 then 3 when 5 then 3 when 6 then 4 when 7 then 4 when 8 then 4 when 9 then 4 when 10 then 4 when 999999 then 6 else 5 end) as yrs_exp_after_grad_cluster_id,\
				(CASE WHEN completness_score < 20 THEN 1 WHEN completness_score < 40 THEN 2 WHEN completness_score < 60 THEN 3 WHEN completness_score < 80 THEN 4 WHEN completness_score < 500 THEN 5 END ) as completness_scores,\
				(case when premium_account > 0 then 1.35 else 1 end) * (case when extract('epoch' FROM mobile_confirm_date)::bigint > 0 then 1.15 else 1 end) * (case when email_bouncing_p = true then 0.01 else 1 end) * (CASE WHEN (completness_score > 99) THEN 1.5 WHEN (completness_score > 80) THEN (1+completness_score/250)  WHEN (completness_score > 50) THEN (1+completness_score/400) WHEN (completness_score > 25) THEN 0.9 ELSE 0.5 END) * (CASE WHEN (last_login_date > NOW()-INTERVAL '2629800 SECOND')    THEN 1.3 WHEN (last_login_date > NOW()-INTERVAL '7889400 SECOND')    THEN 1.23 WHEN (last_login_date > NOW()-INTERVAL '15778800 SECOND')   THEN 1.17  WHEN (last_login_date > NOW()-INTERVAL '31557600  SECOND')  THEN 1.12 WHEN (last_login_date > NOW()-INTERVAL '63115200  SECOND')  THEN 1.06 ELSE 1 END) * (CASE WHEN (date_indexed > NOW()-INTERVAL '2629800 SECOND')    THEN 1.5 WHEN (date_indexed > NOW()-INTERVAL '7889400 SECOND')    THEN 1.4 WHEN (date_indexed > NOW()-INTERVAL '15778800 SECOND')   THEN 1.3  WHEN (date_indexed > NOW()-INTERVAL '31557600  SECOND')  THEN 1.15 WHEN (date_indexed > NOW()-INTERVAL '63115200  SECOND')  THEN 1.13 ELSE 1 END)::float as cv_search_ranker,\
				(case when premium_account > 0 then 1.35 else 1 end) * (case when extract('epoch' FROM mobile_confirm_date)::bigint > 0 then 1.15 else 1 end) * (case when email_bouncing_p = true then 0.01 else 1 end) * (CASE WHEN (completness_score > 99) THEN 1.5 WHEN (completness_score > 80) THEN (1+completness_score/250)  WHEN (completness_score > 50) THEN (1+completness_score/400) WHEN (completness_score > 25) THEN 0.9 ELSE 0.5 END) * (CASE WHEN (last_login_date > NOW()-INTERVAL '2629800 SECOND')    THEN 1.3 WHEN (last_login_date > NOW()-INTERVAL '7889400 SECOND')    THEN 1.23 WHEN (last_login_date > NOW()-INTERVAL '15778800 SECOND')   THEN 1.17  WHEN (last_login_date > NOW()-INTERVAL '31557600  SECOND')  THEN 1.12 WHEN (last_login_date > NOW()-INTERVAL '63115200  SECOND')  THEN 1.06 ELSE 1 END) * (CASE WHEN (cv_builder_date_modified > NOW()-INTERVAL '2629800 SECOND')    THEN 1.5 WHEN (cv_builder_date_modified > NOW()-INTERVAL '7889400 SECOND')    THEN 1.4 WHEN (cv_builder_date_modified > NOW()-INTERVAL '15778800 SECOND')   THEN 1.3  WHEN (cv_builder_date_modified > NOW()-INTERVAL '31557600  SECOND')  THEN 1.15 WHEN (cv_builder_date_modified > NOW()-INTERVAL '63115200  SECOND')  THEN 1.13 ELSE 1 END)::float as byt_cv_search_ranker,\
				(CASE WHEN (is_primary = TRUE and profile_id > 0) THEN 1 ELSE 0 END) as user_public_profile_enable,\
				(case when email_bouncing_p = true then 0.01 else 1 end) * (1000*(1+0.2*(CASE WHEN has_photo = TRUE THEN 1 ELSE 0 END))) as people_ranker,\
				(CASE WHEN (sections_fields IS NULL OR sections_fields = ' ')   THEN 'tar per con edu exp'  ELSE sections_fields  END) as sections_fields,\
				extract('epoch' FROM cv_completion_date)::bigint AS cv_completion_date,\
				extract('epoch' FROM last_login_date)::bigint AS last_login_date,\
				(CASE WHEN (user_state IS NULL OR user_state = ' ')  THEN 'mini' ELSE user_state END) as user_state,\
				email_enc,\
				email_domain,\
				dependents,\
				cell_phone_enc,\
				home_phone_enc,\
				work_phone_enc,\
				cell_phone,\
				bounce_count,\
				last_salary_value,\
				receive_emails_list,\
				last_exp_emp as last_exp_emp_full,\
				last_exp_emp_crc32 as last_exp_emp_crc32_full,\
				user_lang_preference,\
				premium_account,\
				user_tests,\
				user_courses,\
				hobbies,\
				hopping,\
				gaps,\
				res_visa_status,\
				extract('epoch' FROM mobile_confirm_date)::bigint AS mobile_confirm_date,\
				viewer_ids,\
				extract('epoch' FROM first_bch_deg_date)::bigint AS first_bch_deg_date,\
				gsm,\
				last_gsc_id,\
				previous_gsc_id,\
				all_gsc_ids,\
				all_gsc_ids_txt,\
				last_gst_id,\
				previous_gst_id,\
				all_gst_ids,\
				other_gst_id,\
				target_gst_ids,\
				all_gst_ids_text,\
				highest_degree,\
				disabilities,\
				months_of_exp_after_grad,\
				cv_custom_json,\
				sessions_count,\
				photo_url,\
				unemployed,\
				orginal_nationality,\
				extract('epoch' FROM cv_builder_date_modified)::bigint AS cv_builder_date_modified,\
				trainings,\
				certificates,\
				training_institutes,\
				last_gsi_id,\
				previous_gsi_id,\
				all_gsi_ids,\
				target_jb_roles,\
				all_gsi_ids_txt,\
				3 as index_weight,\
				'ANYKEYWORD' as any_keyword,\
				last_exp_comp_size,\
                		extract('epoch' FROM updated_contact_date)::bigint AS updated_contact_date,\
				extract('epoch' FROM last_exp_start_date)::bigint AS last_exp_start_date\
			FROM \
				cv_index_11 \
			WHERE \
				insertion_date <  (SELECT lst_main_index_start_time FROM spx_delta_separator WHERE index_id = 111 LIMIT 1) \
				 AND cv_id>=$start AND cv_id<=$end

	sql_range_step	=25000
	sql_attr_uint		=cv_id
	sql_field_string		=last_exp_emp
	sql_field_string		=previous_exp_emp
	sql_field_string		=last_exp_title
	sql_attr_uint		=last_exp_title_crc32
	sql_field_string		=previous_exp_title
	sql_attr_uint		=previous_exp_title_crc32
	sql_attr_uint		=last_exp_emp_crc32
	sql_attr_uint		=previous_exp_emp_crc32
	sql_attr_uint		=total_months_of_experience
	sql_attr_multi		=bigint industeries_roles_years from field industeries_roles_years
	sql_attr_multi		=bigint present_industeries_roles_years from field present_industeries_roles_years
	sql_attr_uint		=last_jb_industry
	sql_attr_uint		=last_jb_role
	sql_attr_multi		=bigint exp_roles_list from field exp_roles_list
	sql_attr_multi		=bigint exp_industries_list from field exp_industries_list
	sql_attr_multi		=uint experiences_iso_encoded_list from field experiences_iso_encoded_list
	sql_attr_uint		=last_experience_iso_encoded
	sql_field_string		=target_jb_title
	sql_attr_multi		=uint emplyment_type_list from field emplyment_type_list
	sql_attr_multi		=uint emplyment_status_list from field emplyment_status_list
	sql_attr_multi		=uint target_job_locations_list from field target_job_locations_list
	sql_attr_multi		=uint target_job_industries_list from field target_job_industries_list
	sql_attr_uint		=notice_period
	sql_attr_uint		=trgt_job_salary
	sql_attr_uint		=salary_range_cluster_list
	sql_attr_uint		=career_level
        sql_attr_uint   	=career_level_sorted
        sql_attr_uint	        =months_of_experience_sorted
	sql_attr_uint		=residence_location_iso_encoded
	sql_attr_uint		=residence_country_iso_encoded
	sql_attr_uint		=gender
	sql_attr_uint		=date_of_birth
	sql_attr_uint		=marital_status
	sql_attr_uint		=graduation_date
	sql_attr_uint		=visa_status
	sql_attr_multi		=uint car_license_countries_list_encoded from field car_license_countries_list_encoded
	sql_attr_multi		=uint edu_degree_list from field edu_degree_list
	sql_attr_multi		=uint edu_iso_encoded_list from field edu_iso_encoded_list
	sql_attr_multi		=uint edu_majors_crc32_list from field edu_majors_crc32_list
	sql_attr_multi		=uint edu_institute_crc32_list from field edu_institute_crc32_list
	sql_attr_uint		=last_edu_degree
	sql_attr_multi		=uint language_skills_levels_encoded_list from field language_skills_levels_encoded_list
	sql_attr_uint		=cv_stage
	sql_attr_uint		=locale
	sql_attr_uint		=bcc_id
	sql_attr_uint		=user_id
	sql_attr_uint		=gpa
	sql_attr_uint		=gpa_cluster
	sql_attr_timestamp		=date_indexed
	sql_attr_uint		=parent_bcc_id
	sql_attr_bool		=has_attachment
	sql_attr_bool		=has_photo
	sql_attr_bool		=has_video
	sql_attr_bool		=has_recommendation
	sql_field_string		=first_name
	sql_field_string		=middle_name
	sql_field_string		=last_name
	sql_field_string		=profile_name
	sql_attr_uint		=profile_id
	sql_attr_uint		=referrer_source_id
	sql_attr_multi		=uint specilaities_list from field specilaities_list
	sql_attr_multi		=bigint specilaities_points from field specilaities_points
	sql_attr_uint		=special_needs
	sql_attr_bool		=is_primary
	sql_attr_bool		=email_bouncing_p
	sql_attr_timestamp		=creation_date
	sql_attr_bool		=is_confidential
	sql_field_string		=last_name_ar
	sql_field_string		=last_name_la
	sql_field_string		=first_name_ar
	sql_field_string		=first_name_la
	sql_attr_uint		=primary_nationality
	sql_attr_uint		=primary_nationality_cleaned
	sql_attr_multi          =uint nationalities_list from field nationalities_list
	sql_attr_uint		=registration_iso
	sql_attr_uint		=user_type
	sql_attr_uint		=cv_creation_method
	sql_attr_uint		=affliate_program_id
	sql_attr_uint		=cv_no_search_hits
	sql_attr_uint		=cv_no_submits_to
	sql_attr_uint		=cv_no_reviews
	sql_attr_uint		=completness_score
	sql_attr_timestamp		=registration_date
	sql_attr_multi		=bigint bcc_json_fields from field bcc_json_fields
	sql_attr_uint		=yrs_exp_cluster_id
	sql_attr_uint		=yrs_exp_after_grad_cluster_id
	sql_attr_uint		=completness_scores
	sql_attr_float		=cv_search_ranker
	sql_attr_float		=byt_cv_search_ranker
	sql_attr_uint		=user_public_profile_enable
	sql_attr_uint		=people_ranker
	sql_attr_timestamp		=cv_completion_date
	sql_attr_timestamp		=last_login_date
	sql_field_string		=user_state
	sql_field_string		=email_enc
	sql_field_string		=email_domain
	sql_attr_uint		=dependents
	sql_field_string		=cell_phone_enc
	sql_field_string		=home_phone_enc
	sql_field_string		=work_phone_enc
	sql_field_string		=cell_phone
	sql_attr_uint		=bounce_count
	sql_attr_uint		=last_salary_value
	sql_field_string		=last_exp_emp_full
	sql_attr_uint		=last_exp_emp_crc32_full
	sql_attr_uint		=user_lang_preference
	sql_attr_uint		=premium_account
	sql_attr_multi		=uint user_tests from field user_tests
	sql_attr_multi		=uint user_courses from field user_courses
	sql_attr_uint		=hopping
	sql_attr_uint		=gaps
	sql_attr_uint		=res_visa_status
	sql_attr_timestamp		=mobile_confirm_date
	sql_attr_timestamp		=first_bch_deg_date
	sql_attr_multi		=uint gsm from field gsm
	sql_attr_uint		=last_gsc_id
	sql_attr_uint		=previous_gsc_id
	sql_attr_multi		=uint all_gsc_ids from field all_gsc_ids
	sql_attr_multi		=uint last_gst_id from field last_gst_id
	sql_attr_multi		=uint previous_gst_id from field previous_gst_id
	sql_attr_multi		=uint all_gst_ids from field all_gst_ids
	sql_attr_multi		=uint other_gst_id from field other_gst_id
	sql_attr_multi		=uint target_gst_ids from field target_gst_ids
	sql_attr_uint		=highest_degree
	sql_attr_multi		=uint disabilities from field disabilities
	sql_attr_uint		=months_of_exp_after_grad
	sql_attr_json		=cv_custom_json
	sql_attr_uint		=sessions_count
	sql_field_string		=photo_url
	sql_attr_bool		=unemployed
	sql_attr_uint		=orginal_nationality
	sql_attr_timestamp		=cv_builder_date_modified
	sql_attr_uint		=last_gsi_id
	sql_attr_uint		=previous_gsi_id
	sql_attr_multi		=uint all_gsi_ids from field all_gsi_ids
	sql_attr_multi		=uint target_jb_roles from field target_jb_roles
    	sql_attr_uint       =last_exp_comp_size
   	sql_attr_timestamp  =updated_contact_date
	sql_attr_timestamp  =last_exp_start_date
	sql_attr_uint		=index_weight
	sql_attr_multi		=uint folder_id from ranged-query;  SELECT cv_id, folder_id FROM byt_employer_basket_11 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_employer_basket_11 WHERE cv_id between 69000000 and 69999999
	sql_attr_multi		=uint tag_id from ranged-query;  SELECT cv_id, tag_id FROM byt_item_tags_11 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_item_tags_11 WHERE cv_id between 69000000 and 69999999
	sql_attr_multi		=uint note_group_id from ranged-query;  SELECT cv_id, group_id FROM byt_comments_11 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_comments_11 WHERE cv_id between 69000000 and 69999999
}

		index cvMainIndex_11_3
		{
			type			= plain
			source 			= cvMainIndex_11_3_src
			path 			= /home/sphinx/sphinx/var/data/cvMainIndex_11_3
			morphology   = none
			dict=keywords
			index_sp  = 1
			index_zones		= b_*, is_agency, special_needs, referrer_source
			stopwords		= en,ar
			exceptions		= /home/sphinx/sphinx/var/data/exceptions.txt
			min_word_len		= 1
			charset_table		= non_cjk
			ngram_len		= 1
			#ngram_chars		=  non_cjk
			inplace_enable		= 0
			html_strip				= 1
			preopen				= 1
		}		

	source cvMainIndexStemmed_11_3_src {
	type		=pgsql
	sql_host	=host
	sql_user	=user
	sql_pass	=pass
	sql_db		=database
	sql_port	=9988

	sql_query_pre	=SET client_encoding TO 'UTF8'
	sql_query_pre	= SET NAMES 'UTF8'
	sql_ranged_throttle	=1000
	sql_query_range	= SELECT MIN(cv_id),MAX(cv_id) FROM cv_index_11 WHERE cv_id between 69000000 and 69999999
	sql_query	=SELECT \
				cv_id as id,\
				cv_id,\
				experiences_titles,\
				experiences_description,\
				experiences_employers,\
				last_exp_desc,\
				(CASE WHEN is_confidential = 'f' THEN last_exp_emp ELSE NULL END) as last_exp_emp,\
				(CASE WHEN is_confidential = 'f' THEN previous_exp_emp ELSE NULL END) as previous_exp_emp,\
				last_exp_title,\
				last_exp_title_crc32,\
				previous_exp_title,\
				previous_exp_title_crc32,\
				(CASE WHEN is_confidential = 'f' THEN last_exp_emp_crc32 ELSE 0 END) as last_exp_emp_crc32,\
				(CASE WHEN is_confidential = 'f' THEN previous_exp_emp_crc32 ELSE 0 END) as previous_exp_emp_crc32,\
				(CASE WHEN months_of_experience != 999999 then months_of_experience  WHEN market_entry_date != 999999 then (to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date  ELSE 999999 END ) as total_months_of_experience,\
				industeries_roles_years,\
				present_industeries_roles_years,\
				last_jb_industry,\
				last_jb_role,\
				exp_roles_list,\
				exp_industries_list,\
				experiences_iso_encoded_list,\
				last_experience_iso_encoded,\
				target_jb_title,\
				emplyment_type_list,\
				emplyment_status_list,\
				target_job_locations_list,\
				target_job_industries_list,\
				notice_period,\
				trgt_job_salary,\
				(CASE WHEN trgt_job_salary < 0 then 0  WHEN trgt_job_salary = 0 then 1  WHEN trgt_job_salary < 500 THEN 2  WHEN trgt_job_salary <= 1000 THEN 3  WHEN trgt_job_salary <= 1500 THEN 4  WHEN trgt_job_salary <= 2000 THEN 5  WHEN trgt_job_salary <= 3000 THEN 6  WHEN trgt_job_salary <= 5000 THEN 7  WHEN trgt_job_salary <= 8000 THEN 8  WHEN trgt_job_salary <= 12000 THEN 9  WHEN trgt_job_salary <= 16000 THEN 10  WHEN trgt_job_salary <= 20000 THEN 11  WHEN trgt_job_salary <= 30000 THEN 12  WHEN trgt_job_salary <= 50000 THEN 13  ELSE 14  END) as salary_range_cluster_list,\
				career_level,\
				(CASE WHEN career_level = 6 THEN 2001 WHEN career_level < 6 THEN (career_level+1000)*2 ELSE career_level END) as career_level_sorted,\
				(CASE WHEN months_of_experience != 999999 then months_of_experience  WHEN market_entry_date != 999999 then (to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date  ELSE 0 END ) as months_of_experience_sorted,\
				objective_txt,\
				residence_location_iso_encoded,\
				LEFT(residence_location_iso_encoded::text,4)::int as residence_country_iso_encoded,\
				gender,\
				date_of_birth,\
				marital_status,\
				graduation_date,\
				visa_status,\
				car_license_countries_list_encoded,\
				edu_degree_list,\
				edu_iso_encoded_list,\
				edu_txt,\
				edu_major,\
				edu_majors_crc32_list,\
				lst_edu_major,\
				edu_institute,\
				edu_institute_crc32_list,\
				lst_edu_institute,\
				last_edu_degree,\
				skills_txt,\
				language_skills_levels_encoded_list,\
				cv_stage,\
				locale,\
				bcc_id,\
				generic_txt,\
				user_id,\
				gpa,\
				(CASE when gpa >= 99999 then 5 when gpa >= 8000 then 4 when gpa >= 6000 then 3 when gpa >= 4000 then 2 when gpa >= 2000 then 1 when gpa >= 0 then 0 end) as gpa_cluster,\
				extract('epoch' FROM date_indexed)::bigint AS date_indexed,\
				parent_bcc_id,\
				has_attachment,\
				has_photo,\
				has_video,\
				has_recommendation,\
				first_name,\
				middle_name,\
				last_name,\
				profile_name,\
				profile_id,\
				(case when referrer_source_id is null then 99999 else referrer_source_id end ) as referrer_source_id,\
				specilaities_list,\
				specilaities_text,\
				specilaities_points,\
				user_generic_field1,\
				 COALESCE(special_needs,99999) AS special_needs,\
				is_primary,\
				email_bouncing_p,\
				extract('epoch' FROM creation_date)::bigint AS creation_date,\
				is_confidential,\
				last_name_ar,\
				last_name_la,\
				first_name_ar,\
				first_name_la,\
				first_name_la || ' ' || last_name_la as full_name_la,\
				first_name_ar || ' ' || last_name_ar as full_name_ar,\
				primary_nationality,\
				(case when LEFT(residence_location_iso_encoded::text,4)::int = primary_nationality  and visa_status not in (1,7) then 0  when  LEFT(residence_location_iso_encoded::text,4)::int in (5560,6257,6254,4850,5857) and primary_nationality in (4751,6547,5769,6347,4854,6159)  then 0 else  primary_nationality end) as primary_nationality_cleaned,\
				nationalities_list,\
				specilaities_platinum,\
				specilaities_gold,\
				specilaities_silver,\
				specilaities_bronze,\
				bcc_text_fields,\
				has_flag,\
				registration_iso,\
				user_type,\
				cv_creation_method,\
				affliate_program_id,\
				cv_no_search_hits,\
				cv_no_submits_to,\
				cv_no_reviews,\
				completness_score,\
				extract('epoch' FROM registration_date)::bigint AS registration_date,\
				bcc_json_fields,\
				referrer_source,\
				user_generic_field2,\
				user_generic_field3,\
				user_generic_field4,\
				(case (CASE WHEN months_of_experience != 999999 then CEIL(months_of_experience/11.999)  WHEN market_entry_date != 999999 then ceil(((to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date)/11.999)  ELSE 999999 END )::bigint when 0 then 1 when 1 then 1 when 2 then 2 when 3 then 3 when 4 then 3 when 5 then 3 when 6 then 4 when 7 then 4 when 8 then 4 when 9 then 4 when 10 then 4 when 999999 then 6 else 5 end) as yrs_exp_cluster_id,\
				(case (CASE WHEN months_of_exp_after_grad != 999999 then CEIL(months_of_exp_after_grad/11.999) ELSE 999999 END )::bigint when 0 then 1 when 1 then 1 when 2 then 2 when 3 then 3 when 4 then 3 when 5 then 3 when 6 then 4 when 7 then 4 when 8 then 4 when 9 then 4 when 10 then 4 when 999999 then 6 else 5 end) as yrs_exp_after_grad_cluster_id,\
				(CASE WHEN completness_score < 20 THEN 1 WHEN completness_score < 40 THEN 2 WHEN completness_score < 60 THEN 3 WHEN completness_score < 80 THEN 4 WHEN completness_score < 500 THEN 5 END ) as completness_scores,\
				(case when premium_account > 0 then 1.35 else 1 end) * (case when extract('epoch' FROM mobile_confirm_date)::bigint > 0 then 1.15 else 1 end) * (case when email_bouncing_p = true then 0.01 else 1 end) * (CASE WHEN (completness_score > 99) THEN 1.5 WHEN (completness_score > 80) THEN (1+completness_score/250)  WHEN (completness_score > 50) THEN (1+completness_score/400) WHEN (completness_score > 25) THEN 0.9 ELSE 0.5 END) * (CASE WHEN (last_login_date > NOW()-INTERVAL '2629800 SECOND')    THEN 1.3 WHEN (last_login_date > NOW()-INTERVAL '7889400 SECOND')    THEN 1.23 WHEN (last_login_date > NOW()-INTERVAL '15778800 SECOND')   THEN 1.17  WHEN (last_login_date > NOW()-INTERVAL '31557600  SECOND')  THEN 1.12 WHEN (last_login_date > NOW()-INTERVAL '63115200  SECOND')  THEN 1.06 ELSE 1 END) * (CASE WHEN (date_indexed > NOW()-INTERVAL '2629800 SECOND')    THEN 1.5 WHEN (date_indexed > NOW()-INTERVAL '7889400 SECOND')    THEN 1.4 WHEN (date_indexed > NOW()-INTERVAL '15778800 SECOND')   THEN 1.3  WHEN (date_indexed > NOW()-INTERVAL '31557600  SECOND')  THEN 1.15 WHEN (date_indexed > NOW()-INTERVAL '63115200  SECOND')  THEN 1.13 ELSE 1 END)::float as cv_search_ranker,\
				(case when premium_account > 0 then 1.35 else 1 end) * (case when extract('epoch' FROM mobile_confirm_date)::bigint > 0 then 1.15 else 1 end) * (case when email_bouncing_p = true then 0.01 else 1 end) * (CASE WHEN (completness_score > 99) THEN 1.5 WHEN (completness_score > 80) THEN (1+completness_score/250)  WHEN (completness_score > 50) THEN (1+completness_score/400) WHEN (completness_score > 25) THEN 0.9 ELSE 0.5 END) * (CASE WHEN (last_login_date > NOW()-INTERVAL '2629800 SECOND')    THEN 1.3 WHEN (last_login_date > NOW()-INTERVAL '7889400 SECOND')    THEN 1.23 WHEN (last_login_date > NOW()-INTERVAL '15778800 SECOND')   THEN 1.17  WHEN (last_login_date > NOW()-INTERVAL '31557600  SECOND')  THEN 1.12 WHEN (last_login_date > NOW()-INTERVAL '63115200  SECOND')  THEN 1.06 ELSE 1 END) * (CASE WHEN (cv_builder_date_modified > NOW()-INTERVAL '2629800 SECOND')    THEN 1.5 WHEN (cv_builder_date_modified > NOW()-INTERVAL '7889400 SECOND')    THEN 1.4 WHEN (cv_builder_date_modified > NOW()-INTERVAL '15778800 SECOND')   THEN 1.3  WHEN (cv_builder_date_modified > NOW()-INTERVAL '31557600  SECOND')  THEN 1.15 WHEN (cv_builder_date_modified > NOW()-INTERVAL '63115200  SECOND')  THEN 1.13 ELSE 1 END)::float as byt_cv_search_ranker,\
				(CASE WHEN (is_primary = TRUE and profile_id > 0) THEN 1 ELSE 0 END) as user_public_profile_enable,\
				(case when email_bouncing_p = true then 0.01 else 1 end) * (1000*(1+0.2*(CASE WHEN has_photo = TRUE THEN 1 ELSE 0 END))) as people_ranker,\
				(CASE WHEN (sections_fields IS NULL OR sections_fields = ' ')   THEN 'tar per con edu exp'  ELSE sections_fields  END) as sections_fields,\
				extract('epoch' FROM cv_completion_date)::bigint AS cv_completion_date,\
				extract('epoch' FROM last_login_date)::bigint AS last_login_date,\
				(CASE WHEN (user_state IS NULL OR user_state = ' ')  THEN 'mini' ELSE user_state END) as user_state,\
				email_enc,\
				email_domain,\
				dependents,\
				cell_phone_enc,\
				home_phone_enc,\
				work_phone_enc,\
				cell_phone,\
				bounce_count,\
				last_salary_value,\
				receive_emails_list,\
				last_exp_emp as last_exp_emp_full,\
				last_exp_emp_crc32 as last_exp_emp_crc32_full,\
				user_lang_preference,\
				premium_account,\
				user_tests,\
				user_courses,\
				hobbies,\
				hopping,\
				gaps,\
				res_visa_status,\
				extract('epoch' FROM mobile_confirm_date)::bigint AS mobile_confirm_date,\
				viewer_ids,\
				extract('epoch' FROM first_bch_deg_date)::bigint AS first_bch_deg_date,\
				gsm,\
				last_gsc_id,\
				previous_gsc_id,\
				all_gsc_ids,\
				all_gsc_ids_txt,\
				last_gst_id,\
				previous_gst_id,\
				all_gst_ids,\
				other_gst_id,\
				target_gst_ids,\
				all_gst_ids_text,\
				highest_degree,\
				disabilities,\
				months_of_exp_after_grad,\
				cv_custom_json,\
				sessions_count,\
				photo_url,\
				unemployed,\
				orginal_nationality,\
				extract('epoch' FROM cv_builder_date_modified)::bigint AS cv_builder_date_modified,\
				trainings,\
				certificates,\
				training_institutes,\
				last_gsi_id,\
				previous_gsi_id,\
				all_gsi_ids,\
				target_jb_roles,\
				all_gsi_ids_txt,\
				1 as index_weight,\
				'ANYKEYWORD' as any_keyword,\
				last_exp_comp_size,\
                		extract('epoch' FROM updated_contact_date)::bigint AS updated_contact_date,\
				extract('epoch' FROM last_exp_start_date)::bigint AS last_exp_start_date\
			FROM \
				cv_index_11 \
			WHERE \
				insertion_date <  (SELECT lst_main_index_start_time FROM spx_delta_separator WHERE index_id = 111 LIMIT 1) \
				 AND cv_id>=$start AND cv_id<=$end

	sql_range_step	=25000
	sql_attr_uint		=cv_id
	sql_field_string		=last_exp_emp
	sql_field_string		=previous_exp_emp
	sql_field_string		=last_exp_title
	sql_attr_uint		=last_exp_title_crc32
	sql_field_string		=previous_exp_title
	sql_attr_uint		=previous_exp_title_crc32
	sql_attr_uint		=last_exp_emp_crc32
	sql_attr_uint		=previous_exp_emp_crc32
	sql_attr_uint		=total_months_of_experience
	sql_attr_multi		=bigint industeries_roles_years from field industeries_roles_years
	sql_attr_multi		=bigint present_industeries_roles_years from field present_industeries_roles_years
	sql_attr_uint		=last_jb_industry
	sql_attr_uint		=last_jb_role
	sql_attr_multi		=bigint exp_roles_list from field exp_roles_list
	sql_attr_multi		=bigint exp_industries_list from field exp_industries_list
	sql_attr_multi		=uint experiences_iso_encoded_list from field experiences_iso_encoded_list
	sql_attr_uint		=last_experience_iso_encoded
	sql_field_string		=target_jb_title
	sql_attr_multi		=uint emplyment_type_list from field emplyment_type_list
	sql_attr_multi		=uint emplyment_status_list from field emplyment_status_list
	sql_attr_multi		=uint target_job_locations_list from field target_job_locations_list
	sql_attr_multi		=uint target_job_industries_list from field target_job_industries_list
	sql_attr_uint		=notice_period
	sql_attr_uint		=trgt_job_salary
	sql_attr_uint		=salary_range_cluster_list
	sql_attr_uint		=career_level
	sql_attr_uint           =career_level_sorted
	sql_attr_uint           =months_of_experience_sorted
	sql_attr_uint		=residence_location_iso_encoded
	sql_attr_uint		=residence_country_iso_encoded
	sql_attr_uint		=gender
	sql_attr_uint		=date_of_birth
	sql_attr_uint		=marital_status
	sql_attr_uint		=graduation_date
	sql_attr_uint		=visa_status
	sql_attr_multi		=uint car_license_countries_list_encoded from field car_license_countries_list_encoded
	sql_attr_multi		=uint edu_degree_list from field edu_degree_list
	sql_attr_multi		=uint edu_iso_encoded_list from field edu_iso_encoded_list
	sql_attr_multi		=uint edu_majors_crc32_list from field edu_majors_crc32_list
	sql_attr_multi		=uint edu_institute_crc32_list from field edu_institute_crc32_list
	sql_attr_uint		=last_edu_degree
	sql_attr_multi		=uint language_skills_levels_encoded_list from field language_skills_levels_encoded_list
	sql_attr_uint		=cv_stage
	sql_attr_uint		=locale
	sql_attr_uint		=bcc_id
	sql_attr_uint		=user_id
	sql_attr_uint		=gpa
	sql_attr_uint		=gpa_cluster
	sql_attr_timestamp		=date_indexed
	sql_attr_uint		=parent_bcc_id
	sql_attr_bool		=has_attachment
	sql_attr_bool		=has_photo
	sql_attr_bool		=has_video
	sql_attr_bool		=has_recommendation
	sql_field_string		=first_name
	sql_field_string		=middle_name
	sql_field_string		=last_name
	sql_field_string		=profile_name
	sql_attr_uint		=profile_id
	sql_attr_uint		=referrer_source_id
	sql_attr_multi		=uint specilaities_list from field specilaities_list
	sql_attr_multi		=bigint specilaities_points from field specilaities_points
	sql_attr_uint		=special_needs
	sql_attr_bool		=is_primary
	sql_attr_bool		=email_bouncing_p
	sql_attr_timestamp		=creation_date
	sql_attr_bool		=is_confidential
	sql_field_string		=last_name_ar
	sql_field_string		=last_name_la
	sql_field_string		=first_name_ar
	sql_field_string		=first_name_la
	sql_attr_uint		=primary_nationality
	sql_attr_uint		=primary_nationality_cleaned
	sql_attr_multi          =uint nationalities_list from field nationalities_list
	sql_attr_uint		=registration_iso
	sql_attr_uint		=user_type
	sql_attr_uint		=cv_creation_method
	sql_attr_uint		=affliate_program_id
	sql_attr_uint		=cv_no_search_hits
	sql_attr_uint		=cv_no_submits_to
	sql_attr_uint		=cv_no_reviews
	sql_attr_uint		=completness_score
	sql_attr_timestamp		=registration_date
	sql_attr_multi		=bigint bcc_json_fields from field bcc_json_fields
	sql_attr_uint		=yrs_exp_cluster_id
	sql_attr_uint		=yrs_exp_after_grad_cluster_id
	sql_attr_uint		=completness_scores
	sql_attr_float		=cv_search_ranker
	sql_attr_float		=byt_cv_search_ranker
	sql_attr_uint		=user_public_profile_enable
	sql_attr_uint		=people_ranker
	sql_attr_timestamp		=cv_completion_date
	sql_attr_timestamp		=last_login_date
	sql_field_string		=user_state
	sql_field_string		=email_enc
	sql_field_string		=email_domain
	sql_attr_uint		=dependents
	sql_field_string		=cell_phone_enc
	sql_field_string		=home_phone_enc
	sql_field_string		=work_phone_enc
	sql_field_string		=cell_phone
	sql_attr_uint		=bounce_count
	sql_attr_uint		=last_salary_value
	sql_field_string		=last_exp_emp_full
	sql_attr_uint		=last_exp_emp_crc32_full
	sql_attr_uint		=user_lang_preference
	sql_attr_uint		=premium_account
	sql_attr_multi		=uint user_tests from field user_tests
	sql_attr_multi		=uint user_courses from field user_courses
	sql_attr_uint		=hopping
	sql_attr_uint		=gaps
	sql_attr_uint		=res_visa_status
	sql_attr_timestamp		=mobile_confirm_date
	sql_attr_timestamp		=first_bch_deg_date
	sql_attr_multi		=uint gsm from field gsm
	sql_attr_uint		=last_gsc_id
	sql_attr_uint		=previous_gsc_id
	sql_attr_multi		=uint all_gsc_ids from field all_gsc_ids
	sql_attr_multi		=uint last_gst_id from field last_gst_id
	sql_attr_multi		=uint previous_gst_id from field previous_gst_id
	sql_attr_multi		=uint all_gst_ids from field all_gst_ids
	sql_attr_multi		=uint other_gst_id from field other_gst_id
	sql_attr_multi		=uint target_gst_ids from field target_gst_ids
	sql_attr_uint		=highest_degree
	sql_attr_multi		=uint disabilities from field disabilities
	sql_attr_uint		=months_of_exp_after_grad
	sql_attr_json		=cv_custom_json
	sql_attr_uint		=sessions_count
	sql_field_string		=photo_url
	sql_attr_bool		=unemployed
	sql_attr_uint		=orginal_nationality
	sql_attr_timestamp		=cv_builder_date_modified
	sql_attr_uint		=last_gsi_id
	sql_attr_uint		=previous_gsi_id
	sql_attr_multi		=uint all_gsi_ids from field all_gsi_ids
	sql_attr_multi		=uint target_jb_roles from field target_jb_roles
	sql_attr_uint       =last_exp_comp_size
    	sql_attr_timestamp  =updated_contact_date
	sql_attr_timestamp  =last_exp_start_date
	sql_attr_uint		=index_weight
	sql_attr_multi		=uint folder_id from ranged-query;  SELECT cv_id, folder_id FROM byt_employer_basket_11 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_employer_basket_11 WHERE cv_id between 69000000 and 69999999
	sql_attr_multi		=uint tag_id from ranged-query;  SELECT cv_id, tag_id FROM byt_item_tags_11 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_item_tags_11 WHERE cv_id between 69000000 and 69999999
	sql_attr_multi		=uint note_group_id from ranged-query;  SELECT cv_id, group_id FROM byt_comments_11 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_comments_11 WHERE cv_id between 69000000 and 69999999
}

		index cvMainIndexStemmed_11_3
		{
			type			= plain
			source 			= cvMainIndexStemmed_11_3_src
			path 			= /home/sphinx/sphinx/var/data/cvMainIndexStemmed_11_3
			morphology   = stem_en,stem_ar
			wordforms  = /home/sphinx/sphinx/var/data/wordforms.txt
			dict=keywords
			index_sp  = 1
			index_zones		= b_*, is_agency, special_needs, referrer_source
			stopwords		= en,ar
			exceptions		= /home/sphinx/sphinx/var/data/exceptions.txt
			min_word_len		= 1
			charset_table		= non_cjk
			index_exact_words	= 1
			
			ngram_len		= 1
			#ngram_chars		=  non_cjk
			html_strip				= 1
			preopen				= 1
		}		
		


source cvMainIndex_11_4_src {
	type		=pgsql
	sql_host	=host
	sql_user	=user
	sql_pass	=pass
	sql_db		=database
	sql_port	=9988

	sql_query_pre	=SET client_encoding TO 'UTF8'
	sql_query_pre	= SET NAMES 'UTF8'
	sql_ranged_throttle	=1000
	sql_query_range	= SELECT MIN(cv_id),MAX(cv_id) FROM cv_index_11 WHERE cv_id between 70000000 and 70999999
	sql_query	=SELECT \
				cv_id as id,\
				cv_id,\
				experiences_titles,\
				experiences_description,\
				experiences_employers,\
				last_exp_desc,\
				(CASE WHEN is_confidential = 'f' THEN last_exp_emp ELSE NULL END) as last_exp_emp,\
				(CASE WHEN is_confidential = 'f' THEN previous_exp_emp ELSE NULL END) as previous_exp_emp,\
				last_exp_title,\
				last_exp_title_crc32,\
				previous_exp_title,\
				previous_exp_title_crc32,\
				(CASE WHEN is_confidential = 'f' THEN last_exp_emp_crc32 ELSE 0 END) as last_exp_emp_crc32,\
				(CASE WHEN is_confidential = 'f' THEN previous_exp_emp_crc32 ELSE 0 END) as previous_exp_emp_crc32,\
				(CASE WHEN months_of_experience != 999999 then months_of_experience  WHEN market_entry_date != 999999 then (to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date  ELSE 999999 END ) as total_months_of_experience,\
				industeries_roles_years,\
				present_industeries_roles_years,\
				last_jb_industry,\
				last_jb_role,\
				exp_roles_list,\
				exp_industries_list,\
				experiences_iso_encoded_list,\
				last_experience_iso_encoded,\
				target_jb_title,\
				emplyment_type_list,\
				emplyment_status_list,\
				target_job_locations_list,\
				target_job_industries_list,\
				notice_period,\
				trgt_job_salary,\
				(CASE WHEN trgt_job_salary < 0 then 0  WHEN trgt_job_salary = 0 then 1  WHEN trgt_job_salary < 500 THEN 2  WHEN trgt_job_salary <= 1000 THEN 3  WHEN trgt_job_salary <= 1500 THEN 4  WHEN trgt_job_salary <= 2000 THEN 5  WHEN trgt_job_salary <= 3000 THEN 6  WHEN trgt_job_salary <= 5000 THEN 7  WHEN trgt_job_salary <= 8000 THEN 8  WHEN trgt_job_salary <= 12000 THEN 9  WHEN trgt_job_salary <= 16000 THEN 10  WHEN trgt_job_salary <= 20000 THEN 11  WHEN trgt_job_salary <= 30000 THEN 12  WHEN trgt_job_salary <= 50000 THEN 13  ELSE 14  END) as salary_range_cluster_list,\
				career_level,\
				(CASE WHEN career_level = 6 THEN 2001 WHEN career_level < 6 THEN (career_level+1000)*2 ELSE career_level END) as career_level_sorted,\
				(CASE WHEN months_of_experience != 999999 then months_of_experience  WHEN market_entry_date != 999999 then (to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date  ELSE 0 END ) as months_of_experience_sorted,\
				objective_txt,\
				residence_location_iso_encoded,\
				LEFT(residence_location_iso_encoded::text,4)::int as residence_country_iso_encoded,\
				gender,\
				date_of_birth,\
				marital_status,\
				graduation_date,\
				visa_status,\
				car_license_countries_list_encoded,\
				edu_degree_list,\
				edu_iso_encoded_list,\
				edu_txt,\
				edu_major,\
				edu_majors_crc32_list,\
				lst_edu_major,\
				edu_institute,\
				edu_institute_crc32_list,\
				lst_edu_institute,\
				last_edu_degree,\
				skills_txt,\
				language_skills_levels_encoded_list,\
				cv_stage,\
				locale,\
				bcc_id,\
				generic_txt,\
				user_id,\
				gpa,\
				(CASE when gpa >= 99999 then 5 when gpa >= 8000 then 4 when gpa >= 6000 then 3 when gpa >= 4000 then 2 when gpa >= 2000 then 1 when gpa >= 0 then 0 end) as gpa_cluster,\
				extract('epoch' FROM date_indexed)::bigint AS date_indexed,\
				parent_bcc_id,\
				has_attachment,\
				has_photo,\
				has_video,\
				has_recommendation,\
				first_name,\
				middle_name,\
				last_name,\
				profile_name,\
				profile_id,\
				(case when referrer_source_id is null then 99999 else referrer_source_id end ) as referrer_source_id,\
				specilaities_list,\
				specilaities_text,\
				specilaities_points,\
				user_generic_field1,\
				 COALESCE(special_needs,99999) AS special_needs,\
				is_primary,\
				email_bouncing_p,\
				extract('epoch' FROM creation_date)::bigint AS creation_date,\
				is_confidential,\
				last_name_ar,\
				last_name_la,\
				first_name_ar,\
				first_name_la,\
				first_name_la || ' ' || last_name_la as full_name_la,\
				first_name_ar || ' ' || last_name_ar as full_name_ar,\
				primary_nationality,\
				(case when LEFT(residence_location_iso_encoded::text,4)::int = primary_nationality  and visa_status not in (1,7) then 0  when  LEFT(residence_location_iso_encoded::text,4)::int in (5560,6257,6254,4850,5857) and primary_nationality in (4751,6547,5769,6347,4854,6159)  then 0 else  primary_nationality end) as primary_nationality_cleaned,\
				nationalities_list,\
				specilaities_platinum,\
				specilaities_gold,\
				specilaities_silver,\
				specilaities_bronze,\
				bcc_text_fields,\
				has_flag,\
				registration_iso,\
				user_type,\
				cv_creation_method,\
				affliate_program_id,\
				cv_no_search_hits,\
				cv_no_submits_to,\
				cv_no_reviews,\
				completness_score,\
				extract('epoch' FROM registration_date)::bigint AS registration_date,\
				bcc_json_fields,\
				referrer_source,\
				user_generic_field2,\
				user_generic_field3,\
				user_generic_field4,\
				(case (CASE WHEN months_of_experience != 999999 then CEIL(months_of_experience/11.999)  WHEN market_entry_date != 999999 then ceil(((to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date)/11.999)  ELSE 999999 END )::bigint when 0 then 1 when 1 then 1 when 2 then 2 when 3 then 3 when 4 then 3 when 5 then 3 when 6 then 4 when 7 then 4 when 8 then 4 when 9 then 4 when 10 then 4 when 999999 then 6 else 5 end) as yrs_exp_cluster_id,\
				(case (CASE WHEN months_of_exp_after_grad != 999999 then CEIL(months_of_exp_after_grad/11.999) ELSE 999999 END )::bigint when 0 then 1 when 1 then 1 when 2 then 2 when 3 then 3 when 4 then 3 when 5 then 3 when 6 then 4 when 7 then 4 when 8 then 4 when 9 then 4 when 10 then 4 when 999999 then 6 else 5 end) as yrs_exp_after_grad_cluster_id,\
				(CASE WHEN completness_score < 20 THEN 1 WHEN completness_score < 40 THEN 2 WHEN completness_score < 60 THEN 3 WHEN completness_score < 80 THEN 4 WHEN completness_score < 500 THEN 5 END ) as completness_scores,\
				(case when premium_account > 0 then 1.35 else 1 end) * (case when extract('epoch' FROM mobile_confirm_date)::bigint > 0 then 1.15 else 1 end) * (case when email_bouncing_p = true then 0.01 else 1 end) * (CASE WHEN (completness_score > 99) THEN 1.5 WHEN (completness_score > 80) THEN (1+completness_score/250)  WHEN (completness_score > 50) THEN (1+completness_score/400) WHEN (completness_score > 25) THEN 0.9 ELSE 0.5 END) * (CASE WHEN (last_login_date > NOW()-INTERVAL '2629800 SECOND')    THEN 1.3 WHEN (last_login_date > NOW()-INTERVAL '7889400 SECOND')    THEN 1.23 WHEN (last_login_date > NOW()-INTERVAL '15778800 SECOND')   THEN 1.17  WHEN (last_login_date > NOW()-INTERVAL '31557600  SECOND')  THEN 1.12 WHEN (last_login_date > NOW()-INTERVAL '63115200  SECOND')  THEN 1.06 ELSE 1 END) * (CASE WHEN (date_indexed > NOW()-INTERVAL '2629800 SECOND')    THEN 1.5 WHEN (date_indexed > NOW()-INTERVAL '7889400 SECOND')    THEN 1.4 WHEN (date_indexed > NOW()-INTERVAL '15778800 SECOND')   THEN 1.3  WHEN (date_indexed > NOW()-INTERVAL '31557600  SECOND')  THEN 1.15 WHEN (date_indexed > NOW()-INTERVAL '63115200  SECOND')  THEN 1.13 ELSE 1 END)::float as cv_search_ranker,\
				(case when premium_account > 0 then 1.35 else 1 end) * (case when extract('epoch' FROM mobile_confirm_date)::bigint > 0 then 1.15 else 1 end) * (case when email_bouncing_p = true then 0.01 else 1 end) * (CASE WHEN (completness_score > 99) THEN 1.5 WHEN (completness_score > 80) THEN (1+completness_score/250)  WHEN (completness_score > 50) THEN (1+completness_score/400) WHEN (completness_score > 25) THEN 0.9 ELSE 0.5 END) * (CASE WHEN (last_login_date > NOW()-INTERVAL '2629800 SECOND')    THEN 1.3 WHEN (last_login_date > NOW()-INTERVAL '7889400 SECOND')    THEN 1.23 WHEN (last_login_date > NOW()-INTERVAL '15778800 SECOND')   THEN 1.17  WHEN (last_login_date > NOW()-INTERVAL '31557600  SECOND')  THEN 1.12 WHEN (last_login_date > NOW()-INTERVAL '63115200  SECOND')  THEN 1.06 ELSE 1 END) * (CASE WHEN (cv_builder_date_modified > NOW()-INTERVAL '2629800 SECOND')    THEN 1.5 WHEN (cv_builder_date_modified > NOW()-INTERVAL '7889400 SECOND')    THEN 1.4 WHEN (cv_builder_date_modified > NOW()-INTERVAL '15778800 SECOND')   THEN 1.3  WHEN (cv_builder_date_modified > NOW()-INTERVAL '31557600  SECOND')  THEN 1.15 WHEN (cv_builder_date_modified > NOW()-INTERVAL '63115200  SECOND')  THEN 1.13 ELSE 1 END)::float as byt_cv_search_ranker,\
				(CASE WHEN (is_primary = TRUE and profile_id > 0) THEN 1 ELSE 0 END) as user_public_profile_enable,\
				(case when email_bouncing_p = true then 0.01 else 1 end) * (1000*(1+0.2*(CASE WHEN has_photo = TRUE THEN 1 ELSE 0 END))) as people_ranker,\
				(CASE WHEN (sections_fields IS NULL OR sections_fields = ' ')   THEN 'tar per con edu exp'  ELSE sections_fields  END) as sections_fields,\
				extract('epoch' FROM cv_completion_date)::bigint AS cv_completion_date,\
				extract('epoch' FROM last_login_date)::bigint AS last_login_date,\
				(CASE WHEN (user_state IS NULL OR user_state = ' ')  THEN 'mini' ELSE user_state END) as user_state,\
				email_enc,\
				email_domain,\
				dependents,\
				cell_phone_enc,\
				home_phone_enc,\
				work_phone_enc,\
				cell_phone,\
				bounce_count,\
				last_salary_value,\
				receive_emails_list,\
				last_exp_emp as last_exp_emp_full,\
				last_exp_emp_crc32 as last_exp_emp_crc32_full,\
				user_lang_preference,\
				premium_account,\
				user_tests,\
				user_courses,\
				hobbies,\
				hopping,\
				gaps,\
				res_visa_status,\
				extract('epoch' FROM mobile_confirm_date)::bigint AS mobile_confirm_date,\
				viewer_ids,\
				extract('epoch' FROM first_bch_deg_date)::bigint AS first_bch_deg_date,\
				gsm,\
				last_gsc_id,\
				previous_gsc_id,\
				all_gsc_ids,\
				all_gsc_ids_txt,\
				last_gst_id,\
				previous_gst_id,\
				all_gst_ids,\
				other_gst_id,\
				target_gst_ids,\
				all_gst_ids_text,\
				highest_degree,\
				disabilities,\
				months_of_exp_after_grad,\
				cv_custom_json,\
				sessions_count,\
				photo_url,\
				unemployed,\
				orginal_nationality,\
				extract('epoch' FROM cv_builder_date_modified)::bigint AS cv_builder_date_modified,\
				trainings,\
				certificates,\
				training_institutes,\
				last_gsi_id,\
				previous_gsi_id,\
				all_gsi_ids,\
				target_jb_roles,\
				all_gsi_ids_txt,\
				3 as index_weight,\
				'ANYKEYWORD' as any_keyword,\
				last_exp_comp_size,\
                		extract('epoch' FROM updated_contact_date)::bigint AS updated_contact_date,\
				extract('epoch' FROM last_exp_start_date)::bigint AS last_exp_start_date\
			FROM \
				cv_index_11 \
			WHERE \
				insertion_date <  (SELECT lst_main_index_start_time FROM spx_delta_separator WHERE index_id = 111 LIMIT 1) \
				 AND cv_id>=$start AND cv_id<=$end

	sql_range_step	=25000
	sql_attr_uint		=cv_id
	sql_field_string		=last_exp_emp
	sql_field_string		=previous_exp_emp
	sql_field_string		=last_exp_title
	sql_attr_uint		=last_exp_title_crc32
	sql_field_string		=previous_exp_title
	sql_attr_uint		=previous_exp_title_crc32
	sql_attr_uint		=last_exp_emp_crc32
	sql_attr_uint		=previous_exp_emp_crc32
	sql_attr_uint		=total_months_of_experience
	sql_attr_multi		=bigint industeries_roles_years from field industeries_roles_years
	sql_attr_multi		=bigint present_industeries_roles_years from field present_industeries_roles_years
	sql_attr_uint		=last_jb_industry
	sql_attr_uint		=last_jb_role
	sql_attr_multi		=bigint exp_roles_list from field exp_roles_list
	sql_attr_multi		=bigint exp_industries_list from field exp_industries_list
	sql_attr_multi		=uint experiences_iso_encoded_list from field experiences_iso_encoded_list
	sql_attr_uint		=last_experience_iso_encoded
	sql_field_string		=target_jb_title
	sql_attr_multi		=uint emplyment_type_list from field emplyment_type_list
	sql_attr_multi		=uint emplyment_status_list from field emplyment_status_list
	sql_attr_multi		=uint target_job_locations_list from field target_job_locations_list
	sql_attr_multi		=uint target_job_industries_list from field target_job_industries_list
	sql_attr_uint		=notice_period
	sql_attr_uint		=trgt_job_salary
	sql_attr_uint		=salary_range_cluster_list
	sql_attr_uint		=career_level
        sql_attr_uint   	=career_level_sorted
        sql_attr_uint	        =months_of_experience_sorted
	sql_attr_uint		=residence_location_iso_encoded
	sql_attr_uint		=residence_country_iso_encoded
	sql_attr_uint		=gender
	sql_attr_uint		=date_of_birth
	sql_attr_uint		=marital_status
	sql_attr_uint		=graduation_date
	sql_attr_uint		=visa_status
	sql_attr_multi		=uint car_license_countries_list_encoded from field car_license_countries_list_encoded
	sql_attr_multi		=uint edu_degree_list from field edu_degree_list
	sql_attr_multi		=uint edu_iso_encoded_list from field edu_iso_encoded_list
	sql_attr_multi		=uint edu_majors_crc32_list from field edu_majors_crc32_list
	sql_attr_multi		=uint edu_institute_crc32_list from field edu_institute_crc32_list
	sql_attr_uint		=last_edu_degree
	sql_attr_multi		=uint language_skills_levels_encoded_list from field language_skills_levels_encoded_list
	sql_attr_uint		=cv_stage
	sql_attr_uint		=locale
	sql_attr_uint		=bcc_id
	sql_attr_uint		=user_id
	sql_attr_uint		=gpa
	sql_attr_uint		=gpa_cluster
	sql_attr_timestamp		=date_indexed
	sql_attr_uint		=parent_bcc_id
	sql_attr_bool		=has_attachment
	sql_attr_bool		=has_photo
	sql_attr_bool		=has_video
	sql_attr_bool		=has_recommendation
	sql_field_string		=first_name
	sql_field_string		=middle_name
	sql_field_string		=last_name
	sql_field_string		=profile_name
	sql_attr_uint		=profile_id
	sql_attr_uint		=referrer_source_id
	sql_attr_multi		=uint specilaities_list from field specilaities_list
	sql_attr_multi		=bigint specilaities_points from field specilaities_points
	sql_attr_uint		=special_needs
	sql_attr_bool		=is_primary
	sql_attr_bool		=email_bouncing_p
	sql_attr_timestamp		=creation_date
	sql_attr_bool		=is_confidential
	sql_field_string		=last_name_ar
	sql_field_string		=last_name_la
	sql_field_string		=first_name_ar
	sql_field_string		=first_name_la
	sql_attr_uint		=primary_nationality
	sql_attr_uint		=primary_nationality_cleaned
	sql_attr_multi          =uint nationalities_list from field nationalities_list
	sql_attr_uint		=registration_iso
	sql_attr_uint		=user_type
	sql_attr_uint		=cv_creation_method
	sql_attr_uint		=affliate_program_id
	sql_attr_uint		=cv_no_search_hits
	sql_attr_uint		=cv_no_submits_to
	sql_attr_uint		=cv_no_reviews
	sql_attr_uint		=completness_score
	sql_attr_timestamp		=registration_date
	sql_attr_multi		=bigint bcc_json_fields from field bcc_json_fields
	sql_attr_uint		=yrs_exp_cluster_id
	sql_attr_uint		=yrs_exp_after_grad_cluster_id
	sql_attr_uint		=completness_scores
	sql_attr_float		=cv_search_ranker
	sql_attr_float		=byt_cv_search_ranker
	sql_attr_uint		=user_public_profile_enable
	sql_attr_uint		=people_ranker
	sql_attr_timestamp		=cv_completion_date
	sql_attr_timestamp		=last_login_date
	sql_field_string		=user_state
	sql_field_string		=email_enc
	sql_field_string		=email_domain
	sql_attr_uint		=dependents
	sql_field_string		=cell_phone_enc
	sql_field_string		=home_phone_enc
	sql_field_string		=work_phone_enc
	sql_field_string		=cell_phone
	sql_attr_uint		=bounce_count
	sql_attr_uint		=last_salary_value
	sql_field_string		=last_exp_emp_full
	sql_attr_uint		=last_exp_emp_crc32_full
	sql_attr_uint		=user_lang_preference
	sql_attr_uint		=premium_account
	sql_attr_multi		=uint user_tests from field user_tests
	sql_attr_multi		=uint user_courses from field user_courses
	sql_attr_uint		=hopping
	sql_attr_uint		=gaps
	sql_attr_uint		=res_visa_status
	sql_attr_timestamp		=mobile_confirm_date
	sql_attr_timestamp		=first_bch_deg_date
	sql_attr_multi		=uint gsm from field gsm
	sql_attr_uint		=last_gsc_id
	sql_attr_uint		=previous_gsc_id
	sql_attr_multi		=uint all_gsc_ids from field all_gsc_ids
	sql_attr_multi		=uint last_gst_id from field last_gst_id
	sql_attr_multi		=uint previous_gst_id from field previous_gst_id
	sql_attr_multi		=uint all_gst_ids from field all_gst_ids
	sql_attr_multi		=uint other_gst_id from field other_gst_id
	sql_attr_multi		=uint target_gst_ids from field target_gst_ids
	sql_attr_uint		=highest_degree
	sql_attr_multi		=uint disabilities from field disabilities
	sql_attr_uint		=months_of_exp_after_grad
	sql_attr_json		=cv_custom_json
	sql_attr_uint		=sessions_count
	sql_field_string		=photo_url
	sql_attr_bool		=unemployed
	sql_attr_uint		=orginal_nationality
	sql_attr_timestamp		=cv_builder_date_modified
	sql_attr_uint		=last_gsi_id
	sql_attr_uint		=previous_gsi_id
	sql_attr_multi		=uint all_gsi_ids from field all_gsi_ids
	sql_attr_multi		=uint target_jb_roles from field target_jb_roles
    	sql_attr_uint       =last_exp_comp_size
   	sql_attr_timestamp  =updated_contact_date
	sql_attr_timestamp  =last_exp_start_date
	sql_attr_uint		=index_weight
	sql_attr_multi		=uint folder_id from ranged-query;  SELECT cv_id, folder_id FROM byt_employer_basket_11 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_employer_basket_11 WHERE cv_id between 70000000 and 70999999
	sql_attr_multi		=uint tag_id from ranged-query;  SELECT cv_id, tag_id FROM byt_item_tags_11 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_item_tags_11 WHERE cv_id between 70000000 and 70999999
	sql_attr_multi		=uint note_group_id from ranged-query;  SELECT cv_id, group_id FROM byt_comments_11 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_comments_11 WHERE cv_id between 70000000 and 70999999
}

		index cvMainIndex_11_4
		{
			type			= plain
			source 			= cvMainIndex_11_4_src
			path 			= /home/sphinx/sphinx/var/data/cvMainIndex_11_4
			morphology   = none
			dict=keywords
			index_sp  = 1
			index_zones		= b_*, is_agency, special_needs, referrer_source
			stopwords		= en,ar
			exceptions		= /home/sphinx/sphinx/var/data/exceptions.txt
			min_word_len		= 1
			charset_table		= non_cjk
			ngram_len		= 1
			#ngram_chars		=  non_cjk
			inplace_enable		= 0
			html_strip				= 1
			preopen				= 1
		}		

	source cvMainIndexStemmed_11_4_src {
	type		=pgsql
	sql_host	=host
	sql_user	=user
	sql_pass	=pass
	sql_db		=database
	sql_port	=9988

	sql_query_pre	=SET client_encoding TO 'UTF8'
	sql_query_pre	= SET NAMES 'UTF8'
	sql_ranged_throttle	=1000
	sql_query_range	= SELECT MIN(cv_id),MAX(cv_id) FROM cv_index_11 WHERE cv_id between 70000000 and 70999999
	sql_query	=SELECT \
				cv_id as id,\
				cv_id,\
				experiences_titles,\
				experiences_description,\
				experiences_employers,\
				last_exp_desc,\
				(CASE WHEN is_confidential = 'f' THEN last_exp_emp ELSE NULL END) as last_exp_emp,\
				(CASE WHEN is_confidential = 'f' THEN previous_exp_emp ELSE NULL END) as previous_exp_emp,\
				last_exp_title,\
				last_exp_title_crc32,\
				previous_exp_title,\
				previous_exp_title_crc32,\
				(CASE WHEN is_confidential = 'f' THEN last_exp_emp_crc32 ELSE 0 END) as last_exp_emp_crc32,\
				(CASE WHEN is_confidential = 'f' THEN previous_exp_emp_crc32 ELSE 0 END) as previous_exp_emp_crc32,\
				(CASE WHEN months_of_experience != 999999 then months_of_experience  WHEN market_entry_date != 999999 then (to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date  ELSE 999999 END ) as total_months_of_experience,\
				industeries_roles_years,\
				present_industeries_roles_years,\
				last_jb_industry,\
				last_jb_role,\
				exp_roles_list,\
				exp_industries_list,\
				experiences_iso_encoded_list,\
				last_experience_iso_encoded,\
				target_jb_title,\
				emplyment_type_list,\
				emplyment_status_list,\
				target_job_locations_list,\
				target_job_industries_list,\
				notice_period,\
				trgt_job_salary,\
				(CASE WHEN trgt_job_salary < 0 then 0  WHEN trgt_job_salary = 0 then 1  WHEN trgt_job_salary < 500 THEN 2  WHEN trgt_job_salary <= 1000 THEN 3  WHEN trgt_job_salary <= 1500 THEN 4  WHEN trgt_job_salary <= 2000 THEN 5  WHEN trgt_job_salary <= 3000 THEN 6  WHEN trgt_job_salary <= 5000 THEN 7  WHEN trgt_job_salary <= 8000 THEN 8  WHEN trgt_job_salary <= 12000 THEN 9  WHEN trgt_job_salary <= 16000 THEN 10  WHEN trgt_job_salary <= 20000 THEN 11  WHEN trgt_job_salary <= 30000 THEN 12  WHEN trgt_job_salary <= 50000 THEN 13  ELSE 14  END) as salary_range_cluster_list,\
				career_level,\
				(CASE WHEN career_level = 6 THEN 2001 WHEN career_level < 6 THEN (career_level+1000)*2 ELSE career_level END) as career_level_sorted,\
				(CASE WHEN months_of_experience != 999999 then months_of_experience  WHEN market_entry_date != 999999 then (to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date  ELSE 0 END ) as months_of_experience_sorted,\
				objective_txt,\
				residence_location_iso_encoded,\
				LEFT(residence_location_iso_encoded::text,4)::int as residence_country_iso_encoded,\
				gender,\
				date_of_birth,\
				marital_status,\
				graduation_date,\
				visa_status,\
				car_license_countries_list_encoded,\
				edu_degree_list,\
				edu_iso_encoded_list,\
				edu_txt,\
				edu_major,\
				edu_majors_crc32_list,\
				lst_edu_major,\
				edu_institute,\
				edu_institute_crc32_list,\
				lst_edu_institute,\
				last_edu_degree,\
				skills_txt,\
				language_skills_levels_encoded_list,\
				cv_stage,\
				locale,\
				bcc_id,\
				generic_txt,\
				user_id,\
				gpa,\
				(CASE when gpa >= 99999 then 5 when gpa >= 8000 then 4 when gpa >= 6000 then 3 when gpa >= 4000 then 2 when gpa >= 2000 then 1 when gpa >= 0 then 0 end) as gpa_cluster,\
				extract('epoch' FROM date_indexed)::bigint AS date_indexed,\
				parent_bcc_id,\
				has_attachment,\
				has_photo,\
				has_video,\
				has_recommendation,\
				first_name,\
				middle_name,\
				last_name,\
				profile_name,\
				profile_id,\
				(case when referrer_source_id is null then 99999 else referrer_source_id end ) as referrer_source_id,\
				specilaities_list,\
				specilaities_text,\
				specilaities_points,\
				user_generic_field1,\
				 COALESCE(special_needs,99999) AS special_needs,\
				is_primary,\
				email_bouncing_p,\
				extract('epoch' FROM creation_date)::bigint AS creation_date,\
				is_confidential,\
				last_name_ar,\
				last_name_la,\
				first_name_ar,\
				first_name_la,\
				first_name_la || ' ' || last_name_la as full_name_la,\
				first_name_ar || ' ' || last_name_ar as full_name_ar,\
				primary_nationality,\
				(case when LEFT(residence_location_iso_encoded::text,4)::int = primary_nationality  and visa_status not in (1,7) then 0  when  LEFT(residence_location_iso_encoded::text,4)::int in (5560,6257,6254,4850,5857) and primary_nationality in (4751,6547,5769,6347,4854,6159)  then 0 else  primary_nationality end) as primary_nationality_cleaned,\
				nationalities_list,\
				specilaities_platinum,\
				specilaities_gold,\
				specilaities_silver,\
				specilaities_bronze,\
				bcc_text_fields,\
				has_flag,\
				registration_iso,\
				user_type,\
				cv_creation_method,\
				affliate_program_id,\
				cv_no_search_hits,\
				cv_no_submits_to,\
				cv_no_reviews,\
				completness_score,\
				extract('epoch' FROM registration_date)::bigint AS registration_date,\
				bcc_json_fields,\
				referrer_source,\
				user_generic_field2,\
				user_generic_field3,\
				user_generic_field4,\
				(case (CASE WHEN months_of_experience != 999999 then CEIL(months_of_experience/11.999)  WHEN market_entry_date != 999999 then ceil(((to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date)/11.999)  ELSE 999999 END )::bigint when 0 then 1 when 1 then 1 when 2 then 2 when 3 then 3 when 4 then 3 when 5 then 3 when 6 then 4 when 7 then 4 when 8 then 4 when 9 then 4 when 10 then 4 when 999999 then 6 else 5 end) as yrs_exp_cluster_id,\
				(case (CASE WHEN months_of_exp_after_grad != 999999 then CEIL(months_of_exp_after_grad/11.999) ELSE 999999 END )::bigint when 0 then 1 when 1 then 1 when 2 then 2 when 3 then 3 when 4 then 3 when 5 then 3 when 6 then 4 when 7 then 4 when 8 then 4 when 9 then 4 when 10 then 4 when 999999 then 6 else 5 end) as yrs_exp_after_grad_cluster_id,\
				(CASE WHEN completness_score < 20 THEN 1 WHEN completness_score < 40 THEN 2 WHEN completness_score < 60 THEN 3 WHEN completness_score < 80 THEN 4 WHEN completness_score < 500 THEN 5 END ) as completness_scores,\
				(case when premium_account > 0 then 1.35 else 1 end) * (case when extract('epoch' FROM mobile_confirm_date)::bigint > 0 then 1.15 else 1 end) * (case when email_bouncing_p = true then 0.01 else 1 end) * (CASE WHEN (completness_score > 99) THEN 1.5 WHEN (completness_score > 80) THEN (1+completness_score/250)  WHEN (completness_score > 50) THEN (1+completness_score/400) WHEN (completness_score > 25) THEN 0.9 ELSE 0.5 END) * (CASE WHEN (last_login_date > NOW()-INTERVAL '2629800 SECOND')    THEN 1.3 WHEN (last_login_date > NOW()-INTERVAL '7889400 SECOND')    THEN 1.23 WHEN (last_login_date > NOW()-INTERVAL '15778800 SECOND')   THEN 1.17  WHEN (last_login_date > NOW()-INTERVAL '31557600  SECOND')  THEN 1.12 WHEN (last_login_date > NOW()-INTERVAL '63115200  SECOND')  THEN 1.06 ELSE 1 END) * (CASE WHEN (date_indexed > NOW()-INTERVAL '2629800 SECOND')    THEN 1.5 WHEN (date_indexed > NOW()-INTERVAL '7889400 SECOND')    THEN 1.4 WHEN (date_indexed > NOW()-INTERVAL '15778800 SECOND')   THEN 1.3  WHEN (date_indexed > NOW()-INTERVAL '31557600  SECOND')  THEN 1.15 WHEN (date_indexed > NOW()-INTERVAL '63115200  SECOND')  THEN 1.13 ELSE 1 END)::float as cv_search_ranker,\
				(case when premium_account > 0 then 1.35 else 1 end) * (case when extract('epoch' FROM mobile_confirm_date)::bigint > 0 then 1.15 else 1 end) * (case when email_bouncing_p = true then 0.01 else 1 end) * (CASE WHEN (completness_score > 99) THEN 1.5 WHEN (completness_score > 80) THEN (1+completness_score/250)  WHEN (completness_score > 50) THEN (1+completness_score/400) WHEN (completness_score > 25) THEN 0.9 ELSE 0.5 END) * (CASE WHEN (last_login_date > NOW()-INTERVAL '2629800 SECOND')    THEN 1.3 WHEN (last_login_date > NOW()-INTERVAL '7889400 SECOND')    THEN 1.23 WHEN (last_login_date > NOW()-INTERVAL '15778800 SECOND')   THEN 1.17  WHEN (last_login_date > NOW()-INTERVAL '31557600  SECOND')  THEN 1.12 WHEN (last_login_date > NOW()-INTERVAL '63115200  SECOND')  THEN 1.06 ELSE 1 END) * (CASE WHEN (cv_builder_date_modified > NOW()-INTERVAL '2629800 SECOND')    THEN 1.5 WHEN (cv_builder_date_modified > NOW()-INTERVAL '7889400 SECOND')    THEN 1.4 WHEN (cv_builder_date_modified > NOW()-INTERVAL '15778800 SECOND')   THEN 1.3  WHEN (cv_builder_date_modified > NOW()-INTERVAL '31557600  SECOND')  THEN 1.15 WHEN (cv_builder_date_modified > NOW()-INTERVAL '63115200  SECOND')  THEN 1.13 ELSE 1 END)::float as byt_cv_search_ranker,\
				(CASE WHEN (is_primary = TRUE and profile_id > 0) THEN 1 ELSE 0 END) as user_public_profile_enable,\
				(case when email_bouncing_p = true then 0.01 else 1 end) * (1000*(1+0.2*(CASE WHEN has_photo = TRUE THEN 1 ELSE 0 END))) as people_ranker,\
				(CASE WHEN (sections_fields IS NULL OR sections_fields = ' ')   THEN 'tar per con edu exp'  ELSE sections_fields  END) as sections_fields,\
				extract('epoch' FROM cv_completion_date)::bigint AS cv_completion_date,\
				extract('epoch' FROM last_login_date)::bigint AS last_login_date,\
				(CASE WHEN (user_state IS NULL OR user_state = ' ')  THEN 'mini' ELSE user_state END) as user_state,\
				email_enc,\
				email_domain,\
				dependents,\
				cell_phone_enc,\
				home_phone_enc,\
				work_phone_enc,\
				cell_phone,\
				bounce_count,\
				last_salary_value,\
				receive_emails_list,\
				last_exp_emp as last_exp_emp_full,\
				last_exp_emp_crc32 as last_exp_emp_crc32_full,\
				user_lang_preference,\
				premium_account,\
				user_tests,\
				user_courses,\
				hobbies,\
				hopping,\
				gaps,\
				res_visa_status,\
				extract('epoch' FROM mobile_confirm_date)::bigint AS mobile_confirm_date,\
				viewer_ids,\
				extract('epoch' FROM first_bch_deg_date)::bigint AS first_bch_deg_date,\
				gsm,\
				last_gsc_id,\
				previous_gsc_id,\
				all_gsc_ids,\
				all_gsc_ids_txt,\
				last_gst_id,\
				previous_gst_id,\
				all_gst_ids,\
				other_gst_id,\
				target_gst_ids,\
				all_gst_ids_text,\
				highest_degree,\
				disabilities,\
				months_of_exp_after_grad,\
				cv_custom_json,\
				sessions_count,\
				photo_url,\
				unemployed,\
				orginal_nationality,\
				extract('epoch' FROM cv_builder_date_modified)::bigint AS cv_builder_date_modified,\
				trainings,\
				certificates,\
				training_institutes,\
				last_gsi_id,\
				previous_gsi_id,\
				all_gsi_ids,\
				target_jb_roles,\
				all_gsi_ids_txt,\
				1 as index_weight,\
				'ANYKEYWORD' as any_keyword,\
				last_exp_comp_size,\
                		extract('epoch' FROM updated_contact_date)::bigint AS updated_contact_date,\
				extract('epoch' FROM last_exp_start_date)::bigint AS last_exp_start_date\
			FROM \
				cv_index_11 \
			WHERE \
				insertion_date <  (SELECT lst_main_index_start_time FROM spx_delta_separator WHERE index_id = 111 LIMIT 1) \
				 AND cv_id>=$start AND cv_id<=$end

	sql_range_step	=25000
	sql_attr_uint		=cv_id
	sql_field_string		=last_exp_emp
	sql_field_string		=previous_exp_emp
	sql_field_string		=last_exp_title
	sql_attr_uint		=last_exp_title_crc32
	sql_field_string		=previous_exp_title
	sql_attr_uint		=previous_exp_title_crc32
	sql_attr_uint		=last_exp_emp_crc32
	sql_attr_uint		=previous_exp_emp_crc32
	sql_attr_uint		=total_months_of_experience
	sql_attr_multi		=bigint industeries_roles_years from field industeries_roles_years
	sql_attr_multi		=bigint present_industeries_roles_years from field present_industeries_roles_years
	sql_attr_uint		=last_jb_industry
	sql_attr_uint		=last_jb_role
	sql_attr_multi		=bigint exp_roles_list from field exp_roles_list
	sql_attr_multi		=bigint exp_industries_list from field exp_industries_list
	sql_attr_multi		=uint experiences_iso_encoded_list from field experiences_iso_encoded_list
	sql_attr_uint		=last_experience_iso_encoded
	sql_field_string		=target_jb_title
	sql_attr_multi		=uint emplyment_type_list from field emplyment_type_list
	sql_attr_multi		=uint emplyment_status_list from field emplyment_status_list
	sql_attr_multi		=uint target_job_locations_list from field target_job_locations_list
	sql_attr_multi		=uint target_job_industries_list from field target_job_industries_list
	sql_attr_uint		=notice_period
	sql_attr_uint		=trgt_job_salary
	sql_attr_uint		=salary_range_cluster_list
	sql_attr_uint		=career_level
	sql_attr_uint           =career_level_sorted
	sql_attr_uint           =months_of_experience_sorted
	sql_attr_uint		=residence_location_iso_encoded
	sql_attr_uint		=residence_country_iso_encoded
	sql_attr_uint		=gender
	sql_attr_uint		=date_of_birth
	sql_attr_uint		=marital_status
	sql_attr_uint		=graduation_date
	sql_attr_uint		=visa_status
	sql_attr_multi		=uint car_license_countries_list_encoded from field car_license_countries_list_encoded
	sql_attr_multi		=uint edu_degree_list from field edu_degree_list
	sql_attr_multi		=uint edu_iso_encoded_list from field edu_iso_encoded_list
	sql_attr_multi		=uint edu_majors_crc32_list from field edu_majors_crc32_list
	sql_attr_multi		=uint edu_institute_crc32_list from field edu_institute_crc32_list
	sql_attr_uint		=last_edu_degree
	sql_attr_multi		=uint language_skills_levels_encoded_list from field language_skills_levels_encoded_list
	sql_attr_uint		=cv_stage
	sql_attr_uint		=locale
	sql_attr_uint		=bcc_id
	sql_attr_uint		=user_id
	sql_attr_uint		=gpa
	sql_attr_uint		=gpa_cluster
	sql_attr_timestamp		=date_indexed
	sql_attr_uint		=parent_bcc_id
	sql_attr_bool		=has_attachment
	sql_attr_bool		=has_photo
	sql_attr_bool		=has_video
	sql_attr_bool		=has_recommendation
	sql_field_string		=first_name
	sql_field_string		=middle_name
	sql_field_string		=last_name
	sql_field_string		=profile_name
	sql_attr_uint		=profile_id
	sql_attr_uint		=referrer_source_id
	sql_attr_multi		=uint specilaities_list from field specilaities_list
	sql_attr_multi		=bigint specilaities_points from field specilaities_points
	sql_attr_uint		=special_needs
	sql_attr_bool		=is_primary
	sql_attr_bool		=email_bouncing_p
	sql_attr_timestamp		=creation_date
	sql_attr_bool		=is_confidential
	sql_field_string		=last_name_ar
	sql_field_string		=last_name_la
	sql_field_string		=first_name_ar
	sql_field_string		=first_name_la
	sql_attr_uint		=primary_nationality
	sql_attr_uint		=primary_nationality_cleaned
	sql_attr_multi          =uint nationalities_list from field nationalities_list
	sql_attr_uint		=registration_iso
	sql_attr_uint		=user_type
	sql_attr_uint		=cv_creation_method
	sql_attr_uint		=affliate_program_id
	sql_attr_uint		=cv_no_search_hits
	sql_attr_uint		=cv_no_submits_to
	sql_attr_uint		=cv_no_reviews
	sql_attr_uint		=completness_score
	sql_attr_timestamp		=registration_date
	sql_attr_multi		=bigint bcc_json_fields from field bcc_json_fields
	sql_attr_uint		=yrs_exp_cluster_id
	sql_attr_uint		=yrs_exp_after_grad_cluster_id
	sql_attr_uint		=completness_scores
	sql_attr_float		=cv_search_ranker
	sql_attr_float		=byt_cv_search_ranker
	sql_attr_uint		=user_public_profile_enable
	sql_attr_uint		=people_ranker
	sql_attr_timestamp		=cv_completion_date
	sql_attr_timestamp		=last_login_date
	sql_field_string		=user_state
	sql_field_string		=email_enc
	sql_field_string		=email_domain
	sql_attr_uint		=dependents
	sql_field_string		=cell_phone_enc
	sql_field_string		=home_phone_enc
	sql_field_string		=work_phone_enc
	sql_field_string		=cell_phone
	sql_attr_uint		=bounce_count
	sql_attr_uint		=last_salary_value
	sql_field_string		=last_exp_emp_full
	sql_attr_uint		=last_exp_emp_crc32_full
	sql_attr_uint		=user_lang_preference
	sql_attr_uint		=premium_account
	sql_attr_multi		=uint user_tests from field user_tests
	sql_attr_multi		=uint user_courses from field user_courses
	sql_attr_uint		=hopping
	sql_attr_uint		=gaps
	sql_attr_uint		=res_visa_status
	sql_attr_timestamp		=mobile_confirm_date
	sql_attr_timestamp		=first_bch_deg_date
	sql_attr_multi		=uint gsm from field gsm
	sql_attr_uint		=last_gsc_id
	sql_attr_uint		=previous_gsc_id
	sql_attr_multi		=uint all_gsc_ids from field all_gsc_ids
	sql_attr_multi		=uint last_gst_id from field last_gst_id
	sql_attr_multi		=uint previous_gst_id from field previous_gst_id
	sql_attr_multi		=uint all_gst_ids from field all_gst_ids
	sql_attr_multi		=uint other_gst_id from field other_gst_id
	sql_attr_multi		=uint target_gst_ids from field target_gst_ids
	sql_attr_uint		=highest_degree
	sql_attr_multi		=uint disabilities from field disabilities
	sql_attr_uint		=months_of_exp_after_grad
	sql_attr_json		=cv_custom_json
	sql_attr_uint		=sessions_count
	sql_field_string		=photo_url
	sql_attr_bool		=unemployed
	sql_attr_uint		=orginal_nationality
	sql_attr_timestamp		=cv_builder_date_modified
	sql_attr_uint		=last_gsi_id
	sql_attr_uint		=previous_gsi_id
	sql_attr_multi		=uint all_gsi_ids from field all_gsi_ids
	sql_attr_multi		=uint target_jb_roles from field target_jb_roles
	sql_attr_uint       =last_exp_comp_size
    	sql_attr_timestamp  =updated_contact_date
	sql_attr_timestamp  =last_exp_start_date
	sql_attr_uint		=index_weight
	sql_attr_multi		=uint folder_id from ranged-query;  SELECT cv_id, folder_id FROM byt_employer_basket_11 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_employer_basket_11 WHERE cv_id between 70000000 and 70999999
	sql_attr_multi		=uint tag_id from ranged-query;  SELECT cv_id, tag_id FROM byt_item_tags_11 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_item_tags_11 WHERE cv_id between 70000000 and 70999999
	sql_attr_multi		=uint note_group_id from ranged-query;  SELECT cv_id, group_id FROM byt_comments_11 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_comments_11 WHERE cv_id between 70000000 and 70999999
}

		index cvMainIndexStemmed_11_4
		{
			type			= plain
			source 			= cvMainIndexStemmed_11_4_src
			path 			= /home/sphinx/sphinx/var/data/cvMainIndexStemmed_11_4
			morphology   = stem_en,stem_ar
			wordforms  = /home/sphinx/sphinx/var/data/wordforms.txt
			dict=keywords
			index_sp  = 1
			index_zones		= b_*, is_agency, special_needs, referrer_source
			stopwords		= en,ar
			exceptions		= /home/sphinx/sphinx/var/data/exceptions.txt
			min_word_len		= 1
			charset_table		= non_cjk
			index_exact_words	= 1
			
			ngram_len		= 1
			#ngram_chars		=  non_cjk
			html_strip				= 1
			preopen				= 1
		}		
		


source cvMainIndex_11_5_src {
	type		=pgsql
	sql_host	=host
	sql_user	=user
	sql_pass	=pass
	sql_db		=database
	sql_port	=9988

	sql_query_pre	=SET client_encoding TO 'UTF8'
	sql_query_pre	= SET NAMES 'UTF8'
	sql_ranged_throttle	=1000
	sql_query_range	= SELECT MIN(cv_id),MAX(cv_id) FROM cv_index_11 WHERE cv_id between 71000000 and 71999999
	sql_query	=SELECT \
				cv_id as id,\
				cv_id,\
				experiences_titles,\
				experiences_description,\
				experiences_employers,\
				last_exp_desc,\
				(CASE WHEN is_confidential = 'f' THEN last_exp_emp ELSE NULL END) as last_exp_emp,\
				(CASE WHEN is_confidential = 'f' THEN previous_exp_emp ELSE NULL END) as previous_exp_emp,\
				last_exp_title,\
				last_exp_title_crc32,\
				previous_exp_title,\
				previous_exp_title_crc32,\
				(CASE WHEN is_confidential = 'f' THEN last_exp_emp_crc32 ELSE 0 END) as last_exp_emp_crc32,\
				(CASE WHEN is_confidential = 'f' THEN previous_exp_emp_crc32 ELSE 0 END) as previous_exp_emp_crc32,\
				(CASE WHEN months_of_experience != 999999 then months_of_experience  WHEN market_entry_date != 999999 then (to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date  ELSE 999999 END ) as total_months_of_experience,\
				industeries_roles_years,\
				present_industeries_roles_years,\
				last_jb_industry,\
				last_jb_role,\
				exp_roles_list,\
				exp_industries_list,\
				experiences_iso_encoded_list,\
				last_experience_iso_encoded,\
				target_jb_title,\
				emplyment_type_list,\
				emplyment_status_list,\
				target_job_locations_list,\
				target_job_industries_list,\
				notice_period,\
				trgt_job_salary,\
				(CASE WHEN trgt_job_salary < 0 then 0  WHEN trgt_job_salary = 0 then 1  WHEN trgt_job_salary < 500 THEN 2  WHEN trgt_job_salary <= 1000 THEN 3  WHEN trgt_job_salary <= 1500 THEN 4  WHEN trgt_job_salary <= 2000 THEN 5  WHEN trgt_job_salary <= 3000 THEN 6  WHEN trgt_job_salary <= 5000 THEN 7  WHEN trgt_job_salary <= 8000 THEN 8  WHEN trgt_job_salary <= 12000 THEN 9  WHEN trgt_job_salary <= 16000 THEN 10  WHEN trgt_job_salary <= 20000 THEN 11  WHEN trgt_job_salary <= 30000 THEN 12  WHEN trgt_job_salary <= 50000 THEN 13  ELSE 14  END) as salary_range_cluster_list,\
				career_level,\
				(CASE WHEN career_level = 6 THEN 2001 WHEN career_level < 6 THEN (career_level+1000)*2 ELSE career_level END) as career_level_sorted,\
				(CASE WHEN months_of_experience != 999999 then months_of_experience  WHEN market_entry_date != 999999 then (to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date  ELSE 0 END ) as months_of_experience_sorted,\
				objective_txt,\
				residence_location_iso_encoded,\
				LEFT(residence_location_iso_encoded::text,4)::int as residence_country_iso_encoded,\
				gender,\
				date_of_birth,\
				marital_status,\
				graduation_date,\
				visa_status,\
				car_license_countries_list_encoded,\
				edu_degree_list,\
				edu_iso_encoded_list,\
				edu_txt,\
				edu_major,\
				edu_majors_crc32_list,\
				lst_edu_major,\
				edu_institute,\
				edu_institute_crc32_list,\
				lst_edu_institute,\
				last_edu_degree,\
				skills_txt,\
				language_skills_levels_encoded_list,\
				cv_stage,\
				locale,\
				bcc_id,\
				generic_txt,\
				user_id,\
				gpa,\
				(CASE when gpa >= 99999 then 5 when gpa >= 8000 then 4 when gpa >= 6000 then 3 when gpa >= 4000 then 2 when gpa >= 2000 then 1 when gpa >= 0 then 0 end) as gpa_cluster,\
				extract('epoch' FROM date_indexed)::bigint AS date_indexed,\
				parent_bcc_id,\
				has_attachment,\
				has_photo,\
				has_video,\
				has_recommendation,\
				first_name,\
				middle_name,\
				last_name,\
				profile_name,\
				profile_id,\
				(case when referrer_source_id is null then 99999 else referrer_source_id end ) as referrer_source_id,\
				specilaities_list,\
				specilaities_text,\
				specilaities_points,\
				user_generic_field1,\
				 COALESCE(special_needs,99999) AS special_needs,\
				is_primary,\
				email_bouncing_p,\
				extract('epoch' FROM creation_date)::bigint AS creation_date,\
				is_confidential,\
				last_name_ar,\
				last_name_la,\
				first_name_ar,\
				first_name_la,\
				first_name_la || ' ' || last_name_la as full_name_la,\
				first_name_ar || ' ' || last_name_ar as full_name_ar,\
				primary_nationality,\
				(case when LEFT(residence_location_iso_encoded::text,4)::int = primary_nationality  and visa_status not in (1,7) then 0  when  LEFT(residence_location_iso_encoded::text,4)::int in (5560,6257,6254,4850,5857) and primary_nationality in (4751,6547,5769,6347,4854,6159)  then 0 else  primary_nationality end) as primary_nationality_cleaned,\
				nationalities_list,\
				specilaities_platinum,\
				specilaities_gold,\
				specilaities_silver,\
				specilaities_bronze,\
				bcc_text_fields,\
				has_flag,\
				registration_iso,\
				user_type,\
				cv_creation_method,\
				affliate_program_id,\
				cv_no_search_hits,\
				cv_no_submits_to,\
				cv_no_reviews,\
				completness_score,\
				extract('epoch' FROM registration_date)::bigint AS registration_date,\
				bcc_json_fields,\
				referrer_source,\
				user_generic_field2,\
				user_generic_field3,\
				user_generic_field4,\
				(case (CASE WHEN months_of_experience != 999999 then CEIL(months_of_experience/11.999)  WHEN market_entry_date != 999999 then ceil(((to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date)/11.999)  ELSE 999999 END )::bigint when 0 then 1 when 1 then 1 when 2 then 2 when 3 then 3 when 4 then 3 when 5 then 3 when 6 then 4 when 7 then 4 when 8 then 4 when 9 then 4 when 10 then 4 when 999999 then 6 else 5 end) as yrs_exp_cluster_id,\
				(case (CASE WHEN months_of_exp_after_grad != 999999 then CEIL(months_of_exp_after_grad/11.999) ELSE 999999 END )::bigint when 0 then 1 when 1 then 1 when 2 then 2 when 3 then 3 when 4 then 3 when 5 then 3 when 6 then 4 when 7 then 4 when 8 then 4 when 9 then 4 when 10 then 4 when 999999 then 6 else 5 end) as yrs_exp_after_grad_cluster_id,\
				(CASE WHEN completness_score < 20 THEN 1 WHEN completness_score < 40 THEN 2 WHEN completness_score < 60 THEN 3 WHEN completness_score < 80 THEN 4 WHEN completness_score < 500 THEN 5 END ) as completness_scores,\
				(case when premium_account > 0 then 1.35 else 1 end) * (case when extract('epoch' FROM mobile_confirm_date)::bigint > 0 then 1.15 else 1 end) * (case when email_bouncing_p = true then 0.01 else 1 end) * (CASE WHEN (completness_score > 99) THEN 1.5 WHEN (completness_score > 80) THEN (1+completness_score/250)  WHEN (completness_score > 50) THEN (1+completness_score/400) WHEN (completness_score > 25) THEN 0.9 ELSE 0.5 END) * (CASE WHEN (last_login_date > NOW()-INTERVAL '2629800 SECOND')    THEN 1.3 WHEN (last_login_date > NOW()-INTERVAL '7889400 SECOND')    THEN 1.23 WHEN (last_login_date > NOW()-INTERVAL '15778800 SECOND')   THEN 1.17  WHEN (last_login_date > NOW()-INTERVAL '31557600  SECOND')  THEN 1.12 WHEN (last_login_date > NOW()-INTERVAL '63115200  SECOND')  THEN 1.06 ELSE 1 END) * (CASE WHEN (date_indexed > NOW()-INTERVAL '2629800 SECOND')    THEN 1.5 WHEN (date_indexed > NOW()-INTERVAL '7889400 SECOND')    THEN 1.4 WHEN (date_indexed > NOW()-INTERVAL '15778800 SECOND')   THEN 1.3  WHEN (date_indexed > NOW()-INTERVAL '31557600  SECOND')  THEN 1.15 WHEN (date_indexed > NOW()-INTERVAL '63115200  SECOND')  THEN 1.13 ELSE 1 END)::float as cv_search_ranker,\
				(case when premium_account > 0 then 1.35 else 1 end) * (case when extract('epoch' FROM mobile_confirm_date)::bigint > 0 then 1.15 else 1 end) * (case when email_bouncing_p = true then 0.01 else 1 end) * (CASE WHEN (completness_score > 99) THEN 1.5 WHEN (completness_score > 80) THEN (1+completness_score/250)  WHEN (completness_score > 50) THEN (1+completness_score/400) WHEN (completness_score > 25) THEN 0.9 ELSE 0.5 END) * (CASE WHEN (last_login_date > NOW()-INTERVAL '2629800 SECOND')    THEN 1.3 WHEN (last_login_date > NOW()-INTERVAL '7889400 SECOND')    THEN 1.23 WHEN (last_login_date > NOW()-INTERVAL '15778800 SECOND')   THEN 1.17  WHEN (last_login_date > NOW()-INTERVAL '31557600  SECOND')  THEN 1.12 WHEN (last_login_date > NOW()-INTERVAL '63115200  SECOND')  THEN 1.06 ELSE 1 END) * (CASE WHEN (cv_builder_date_modified > NOW()-INTERVAL '2629800 SECOND')    THEN 1.5 WHEN (cv_builder_date_modified > NOW()-INTERVAL '7889400 SECOND')    THEN 1.4 WHEN (cv_builder_date_modified > NOW()-INTERVAL '15778800 SECOND')   THEN 1.3  WHEN (cv_builder_date_modified > NOW()-INTERVAL '31557600  SECOND')  THEN 1.15 WHEN (cv_builder_date_modified > NOW()-INTERVAL '63115200  SECOND')  THEN 1.13 ELSE 1 END)::float as byt_cv_search_ranker,\
				(CASE WHEN (is_primary = TRUE and profile_id > 0) THEN 1 ELSE 0 END) as user_public_profile_enable,\
				(case when email_bouncing_p = true then 0.01 else 1 end) * (1000*(1+0.2*(CASE WHEN has_photo = TRUE THEN 1 ELSE 0 END))) as people_ranker,\
				(CASE WHEN (sections_fields IS NULL OR sections_fields = ' ')   THEN 'tar per con edu exp'  ELSE sections_fields  END) as sections_fields,\
				extract('epoch' FROM cv_completion_date)::bigint AS cv_completion_date,\
				extract('epoch' FROM last_login_date)::bigint AS last_login_date,\
				(CASE WHEN (user_state IS NULL OR user_state = ' ')  THEN 'mini' ELSE user_state END) as user_state,\
				email_enc,\
				email_domain,\
				dependents,\
				cell_phone_enc,\
				home_phone_enc,\
				work_phone_enc,\
				cell_phone,\
				bounce_count,\
				last_salary_value,\
				receive_emails_list,\
				last_exp_emp as last_exp_emp_full,\
				last_exp_emp_crc32 as last_exp_emp_crc32_full,\
				user_lang_preference,\
				premium_account,\
				user_tests,\
				user_courses,\
				hobbies,\
				hopping,\
				gaps,\
				res_visa_status,\
				extract('epoch' FROM mobile_confirm_date)::bigint AS mobile_confirm_date,\
				viewer_ids,\
				extract('epoch' FROM first_bch_deg_date)::bigint AS first_bch_deg_date,\
				gsm,\
				last_gsc_id,\
				previous_gsc_id,\
				all_gsc_ids,\
				all_gsc_ids_txt,\
				last_gst_id,\
				previous_gst_id,\
				all_gst_ids,\
				other_gst_id,\
				target_gst_ids,\
				all_gst_ids_text,\
				highest_degree,\
				disabilities,\
				months_of_exp_after_grad,\
				cv_custom_json,\
				sessions_count,\
				photo_url,\
				unemployed,\
				orginal_nationality,\
				extract('epoch' FROM cv_builder_date_modified)::bigint AS cv_builder_date_modified,\
				trainings,\
				certificates,\
				training_institutes,\
				last_gsi_id,\
				previous_gsi_id,\
				all_gsi_ids,\
				target_jb_roles,\
				all_gsi_ids_txt,\
				3 as index_weight,\
				'ANYKEYWORD' as any_keyword,\
				last_exp_comp_size,\
                		extract('epoch' FROM updated_contact_date)::bigint AS updated_contact_date,\
				extract('epoch' FROM last_exp_start_date)::bigint AS last_exp_start_date\
			FROM \
				cv_index_11 \
			WHERE \
				insertion_date <  (SELECT lst_main_index_start_time FROM spx_delta_separator WHERE index_id = 111 LIMIT 1) \
				 AND cv_id>=$start AND cv_id<=$end

	sql_range_step	=25000
	sql_attr_uint		=cv_id
	sql_field_string		=last_exp_emp
	sql_field_string		=previous_exp_emp
	sql_field_string		=last_exp_title
	sql_attr_uint		=last_exp_title_crc32
	sql_field_string		=previous_exp_title
	sql_attr_uint		=previous_exp_title_crc32
	sql_attr_uint		=last_exp_emp_crc32
	sql_attr_uint		=previous_exp_emp_crc32
	sql_attr_uint		=total_months_of_experience
	sql_attr_multi		=bigint industeries_roles_years from field industeries_roles_years
	sql_attr_multi		=bigint present_industeries_roles_years from field present_industeries_roles_years
	sql_attr_uint		=last_jb_industry
	sql_attr_uint		=last_jb_role
	sql_attr_multi		=bigint exp_roles_list from field exp_roles_list
	sql_attr_multi		=bigint exp_industries_list from field exp_industries_list
	sql_attr_multi		=uint experiences_iso_encoded_list from field experiences_iso_encoded_list
	sql_attr_uint		=last_experience_iso_encoded
	sql_field_string		=target_jb_title
	sql_attr_multi		=uint emplyment_type_list from field emplyment_type_list
	sql_attr_multi		=uint emplyment_status_list from field emplyment_status_list
	sql_attr_multi		=uint target_job_locations_list from field target_job_locations_list
	sql_attr_multi		=uint target_job_industries_list from field target_job_industries_list
	sql_attr_uint		=notice_period
	sql_attr_uint		=trgt_job_salary
	sql_attr_uint		=salary_range_cluster_list
	sql_attr_uint		=career_level
        sql_attr_uint   	=career_level_sorted
        sql_attr_uint	        =months_of_experience_sorted
	sql_attr_uint		=residence_location_iso_encoded
	sql_attr_uint		=residence_country_iso_encoded
	sql_attr_uint		=gender
	sql_attr_uint		=date_of_birth
	sql_attr_uint		=marital_status
	sql_attr_uint		=graduation_date
	sql_attr_uint		=visa_status
	sql_attr_multi		=uint car_license_countries_list_encoded from field car_license_countries_list_encoded
	sql_attr_multi		=uint edu_degree_list from field edu_degree_list
	sql_attr_multi		=uint edu_iso_encoded_list from field edu_iso_encoded_list
	sql_attr_multi		=uint edu_majors_crc32_list from field edu_majors_crc32_list
	sql_attr_multi		=uint edu_institute_crc32_list from field edu_institute_crc32_list
	sql_attr_uint		=last_edu_degree
	sql_attr_multi		=uint language_skills_levels_encoded_list from field language_skills_levels_encoded_list
	sql_attr_uint		=cv_stage
	sql_attr_uint		=locale
	sql_attr_uint		=bcc_id
	sql_attr_uint		=user_id
	sql_attr_uint		=gpa
	sql_attr_uint		=gpa_cluster
	sql_attr_timestamp		=date_indexed
	sql_attr_uint		=parent_bcc_id
	sql_attr_bool		=has_attachment
	sql_attr_bool		=has_photo
	sql_attr_bool		=has_video
	sql_attr_bool		=has_recommendation
	sql_field_string		=first_name
	sql_field_string		=middle_name
	sql_field_string		=last_name
	sql_field_string		=profile_name
	sql_attr_uint		=profile_id
	sql_attr_uint		=referrer_source_id
	sql_attr_multi		=uint specilaities_list from field specilaities_list
	sql_attr_multi		=bigint specilaities_points from field specilaities_points
	sql_attr_uint		=special_needs
	sql_attr_bool		=is_primary
	sql_attr_bool		=email_bouncing_p
	sql_attr_timestamp		=creation_date
	sql_attr_bool		=is_confidential
	sql_field_string		=last_name_ar
	sql_field_string		=last_name_la
	sql_field_string		=first_name_ar
	sql_field_string		=first_name_la
	sql_attr_uint		=primary_nationality
	sql_attr_uint		=primary_nationality_cleaned
	sql_attr_multi          =uint nationalities_list from field nationalities_list
	sql_attr_uint		=registration_iso
	sql_attr_uint		=user_type
	sql_attr_uint		=cv_creation_method
	sql_attr_uint		=affliate_program_id
	sql_attr_uint		=cv_no_search_hits
	sql_attr_uint		=cv_no_submits_to
	sql_attr_uint		=cv_no_reviews
	sql_attr_uint		=completness_score
	sql_attr_timestamp		=registration_date
	sql_attr_multi		=bigint bcc_json_fields from field bcc_json_fields
	sql_attr_uint		=yrs_exp_cluster_id
	sql_attr_uint		=yrs_exp_after_grad_cluster_id
	sql_attr_uint		=completness_scores
	sql_attr_float		=cv_search_ranker
	sql_attr_float		=byt_cv_search_ranker
	sql_attr_uint		=user_public_profile_enable
	sql_attr_uint		=people_ranker
	sql_attr_timestamp		=cv_completion_date
	sql_attr_timestamp		=last_login_date
	sql_field_string		=user_state
	sql_field_string		=email_enc
	sql_field_string		=email_domain
	sql_attr_uint		=dependents
	sql_field_string		=cell_phone_enc
	sql_field_string		=home_phone_enc
	sql_field_string		=work_phone_enc
	sql_field_string		=cell_phone
	sql_attr_uint		=bounce_count
	sql_attr_uint		=last_salary_value
	sql_field_string		=last_exp_emp_full
	sql_attr_uint		=last_exp_emp_crc32_full
	sql_attr_uint		=user_lang_preference
	sql_attr_uint		=premium_account
	sql_attr_multi		=uint user_tests from field user_tests
	sql_attr_multi		=uint user_courses from field user_courses
	sql_attr_uint		=hopping
	sql_attr_uint		=gaps
	sql_attr_uint		=res_visa_status
	sql_attr_timestamp		=mobile_confirm_date
	sql_attr_timestamp		=first_bch_deg_date
	sql_attr_multi		=uint gsm from field gsm
	sql_attr_uint		=last_gsc_id
	sql_attr_uint		=previous_gsc_id
	sql_attr_multi		=uint all_gsc_ids from field all_gsc_ids
	sql_attr_multi		=uint last_gst_id from field last_gst_id
	sql_attr_multi		=uint previous_gst_id from field previous_gst_id
	sql_attr_multi		=uint all_gst_ids from field all_gst_ids
	sql_attr_multi		=uint other_gst_id from field other_gst_id
	sql_attr_multi		=uint target_gst_ids from field target_gst_ids
	sql_attr_uint		=highest_degree
	sql_attr_multi		=uint disabilities from field disabilities
	sql_attr_uint		=months_of_exp_after_grad
	sql_attr_json		=cv_custom_json
	sql_attr_uint		=sessions_count
	sql_field_string		=photo_url
	sql_attr_bool		=unemployed
	sql_attr_uint		=orginal_nationality
	sql_attr_timestamp		=cv_builder_date_modified
	sql_attr_uint		=last_gsi_id
	sql_attr_uint		=previous_gsi_id
	sql_attr_multi		=uint all_gsi_ids from field all_gsi_ids
	sql_attr_multi		=uint target_jb_roles from field target_jb_roles
    	sql_attr_uint       =last_exp_comp_size
   	sql_attr_timestamp  =updated_contact_date
	sql_attr_timestamp  =last_exp_start_date
	sql_attr_uint		=index_weight
	sql_attr_multi		=uint folder_id from ranged-query;  SELECT cv_id, folder_id FROM byt_employer_basket_11 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_employer_basket_11 WHERE cv_id between 71000000 and 71999999
	sql_attr_multi		=uint tag_id from ranged-query;  SELECT cv_id, tag_id FROM byt_item_tags_11 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_item_tags_11 WHERE cv_id between 71000000 and 71999999
	sql_attr_multi		=uint note_group_id from ranged-query;  SELECT cv_id, group_id FROM byt_comments_11 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_comments_11 WHERE cv_id between 71000000 and 71999999
}

		index cvMainIndex_11_5
		{
			type			= plain
			source 			= cvMainIndex_11_5_src
			path 			= /home/sphinx/sphinx/var/data/cvMainIndex_11_5
			morphology   = none
			dict=keywords
			index_sp  = 1
			index_zones		= b_*, is_agency, special_needs, referrer_source
			stopwords		= en,ar
			exceptions		= /home/sphinx/sphinx/var/data/exceptions.txt
			min_word_len		= 1
			charset_table		= non_cjk
			ngram_len		= 1
			#ngram_chars		=  non_cjk
			inplace_enable		= 0
			html_strip				= 1
			preopen				= 1
		}		

	source cvMainIndexStemmed_11_5_src {
	type		=pgsql
	sql_host	=host
	sql_user	=user
	sql_pass	=pass
	sql_db		=database
	sql_port	=9988

	sql_query_pre	=SET client_encoding TO 'UTF8'
	sql_query_pre	= SET NAMES 'UTF8'
	sql_ranged_throttle	=1000
	sql_query_range	= SELECT MIN(cv_id),MAX(cv_id) FROM cv_index_11 WHERE cv_id between 71000000 and 71999999
	sql_query	=SELECT \
				cv_id as id,\
				cv_id,\
				experiences_titles,\
				experiences_description,\
				experiences_employers,\
				last_exp_desc,\
				(CASE WHEN is_confidential = 'f' THEN last_exp_emp ELSE NULL END) as last_exp_emp,\
				(CASE WHEN is_confidential = 'f' THEN previous_exp_emp ELSE NULL END) as previous_exp_emp,\
				last_exp_title,\
				last_exp_title_crc32,\
				previous_exp_title,\
				previous_exp_title_crc32,\
				(CASE WHEN is_confidential = 'f' THEN last_exp_emp_crc32 ELSE 0 END) as last_exp_emp_crc32,\
				(CASE WHEN is_confidential = 'f' THEN previous_exp_emp_crc32 ELSE 0 END) as previous_exp_emp_crc32,\
				(CASE WHEN months_of_experience != 999999 then months_of_experience  WHEN market_entry_date != 999999 then (to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date  ELSE 999999 END ) as total_months_of_experience,\
				industeries_roles_years,\
				present_industeries_roles_years,\
				last_jb_industry,\
				last_jb_role,\
				exp_roles_list,\
				exp_industries_list,\
				experiences_iso_encoded_list,\
				last_experience_iso_encoded,\
				target_jb_title,\
				emplyment_type_list,\
				emplyment_status_list,\
				target_job_locations_list,\
				target_job_industries_list,\
				notice_period,\
				trgt_job_salary,\
				(CASE WHEN trgt_job_salary < 0 then 0  WHEN trgt_job_salary = 0 then 1  WHEN trgt_job_salary < 500 THEN 2  WHEN trgt_job_salary <= 1000 THEN 3  WHEN trgt_job_salary <= 1500 THEN 4  WHEN trgt_job_salary <= 2000 THEN 5  WHEN trgt_job_salary <= 3000 THEN 6  WHEN trgt_job_salary <= 5000 THEN 7  WHEN trgt_job_salary <= 8000 THEN 8  WHEN trgt_job_salary <= 12000 THEN 9  WHEN trgt_job_salary <= 16000 THEN 10  WHEN trgt_job_salary <= 20000 THEN 11  WHEN trgt_job_salary <= 30000 THEN 12  WHEN trgt_job_salary <= 50000 THEN 13  ELSE 14  END) as salary_range_cluster_list,\
				career_level,\
				(CASE WHEN career_level = 6 THEN 2001 WHEN career_level < 6 THEN (career_level+1000)*2 ELSE career_level END) as career_level_sorted,\
				(CASE WHEN months_of_experience != 999999 then months_of_experience  WHEN market_entry_date != 999999 then (to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date  ELSE 0 END ) as months_of_experience_sorted,\
				objective_txt,\
				residence_location_iso_encoded,\
				LEFT(residence_location_iso_encoded::text,4)::int as residence_country_iso_encoded,\
				gender,\
				date_of_birth,\
				marital_status,\
				graduation_date,\
				visa_status,\
				car_license_countries_list_encoded,\
				edu_degree_list,\
				edu_iso_encoded_list,\
				edu_txt,\
				edu_major,\
				edu_majors_crc32_list,\
				lst_edu_major,\
				edu_institute,\
				edu_institute_crc32_list,\
				lst_edu_institute,\
				last_edu_degree,\
				skills_txt,\
				language_skills_levels_encoded_list,\
				cv_stage,\
				locale,\
				bcc_id,\
				generic_txt,\
				user_id,\
				gpa,\
				(CASE when gpa >= 99999 then 5 when gpa >= 8000 then 4 when gpa >= 6000 then 3 when gpa >= 4000 then 2 when gpa >= 2000 then 1 when gpa >= 0 then 0 end) as gpa_cluster,\
				extract('epoch' FROM date_indexed)::bigint AS date_indexed,\
				parent_bcc_id,\
				has_attachment,\
				has_photo,\
				has_video,\
				has_recommendation,\
				first_name,\
				middle_name,\
				last_name,\
				profile_name,\
				profile_id,\
				(case when referrer_source_id is null then 99999 else referrer_source_id end ) as referrer_source_id,\
				specilaities_list,\
				specilaities_text,\
				specilaities_points,\
				user_generic_field1,\
				 COALESCE(special_needs,99999) AS special_needs,\
				is_primary,\
				email_bouncing_p,\
				extract('epoch' FROM creation_date)::bigint AS creation_date,\
				is_confidential,\
				last_name_ar,\
				last_name_la,\
				first_name_ar,\
				first_name_la,\
				first_name_la || ' ' || last_name_la as full_name_la,\
				first_name_ar || ' ' || last_name_ar as full_name_ar,\
				primary_nationality,\
				(case when LEFT(residence_location_iso_encoded::text,4)::int = primary_nationality  and visa_status not in (1,7) then 0  when  LEFT(residence_location_iso_encoded::text,4)::int in (5560,6257,6254,4850,5857) and primary_nationality in (4751,6547,5769,6347,4854,6159)  then 0 else  primary_nationality end) as primary_nationality_cleaned,\
				nationalities_list,\
				specilaities_platinum,\
				specilaities_gold,\
				specilaities_silver,\
				specilaities_bronze,\
				bcc_text_fields,\
				has_flag,\
				registration_iso,\
				user_type,\
				cv_creation_method,\
				affliate_program_id,\
				cv_no_search_hits,\
				cv_no_submits_to,\
				cv_no_reviews,\
				completness_score,\
				extract('epoch' FROM registration_date)::bigint AS registration_date,\
				bcc_json_fields,\
				referrer_source,\
				user_generic_field2,\
				user_generic_field3,\
				user_generic_field4,\
				(case (CASE WHEN months_of_experience != 999999 then CEIL(months_of_experience/11.999)  WHEN market_entry_date != 999999 then ceil(((to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date)/11.999)  ELSE 999999 END )::bigint when 0 then 1 when 1 then 1 when 2 then 2 when 3 then 3 when 4 then 3 when 5 then 3 when 6 then 4 when 7 then 4 when 8 then 4 when 9 then 4 when 10 then 4 when 999999 then 6 else 5 end) as yrs_exp_cluster_id,\
				(case (CASE WHEN months_of_exp_after_grad != 999999 then CEIL(months_of_exp_after_grad/11.999) ELSE 999999 END )::bigint when 0 then 1 when 1 then 1 when 2 then 2 when 3 then 3 when 4 then 3 when 5 then 3 when 6 then 4 when 7 then 4 when 8 then 4 when 9 then 4 when 10 then 4 when 999999 then 6 else 5 end) as yrs_exp_after_grad_cluster_id,\
				(CASE WHEN completness_score < 20 THEN 1 WHEN completness_score < 40 THEN 2 WHEN completness_score < 60 THEN 3 WHEN completness_score < 80 THEN 4 WHEN completness_score < 500 THEN 5 END ) as completness_scores,\
				(case when premium_account > 0 then 1.35 else 1 end) * (case when extract('epoch' FROM mobile_confirm_date)::bigint > 0 then 1.15 else 1 end) * (case when email_bouncing_p = true then 0.01 else 1 end) * (CASE WHEN (completness_score > 99) THEN 1.5 WHEN (completness_score > 80) THEN (1+completness_score/250)  WHEN (completness_score > 50) THEN (1+completness_score/400) WHEN (completness_score > 25) THEN 0.9 ELSE 0.5 END) * (CASE WHEN (last_login_date > NOW()-INTERVAL '2629800 SECOND')    THEN 1.3 WHEN (last_login_date > NOW()-INTERVAL '7889400 SECOND')    THEN 1.23 WHEN (last_login_date > NOW()-INTERVAL '15778800 SECOND')   THEN 1.17  WHEN (last_login_date > NOW()-INTERVAL '31557600  SECOND')  THEN 1.12 WHEN (last_login_date > NOW()-INTERVAL '63115200  SECOND')  THEN 1.06 ELSE 1 END) * (CASE WHEN (date_indexed > NOW()-INTERVAL '2629800 SECOND')    THEN 1.5 WHEN (date_indexed > NOW()-INTERVAL '7889400 SECOND')    THEN 1.4 WHEN (date_indexed > NOW()-INTERVAL '15778800 SECOND')   THEN 1.3  WHEN (date_indexed > NOW()-INTERVAL '31557600  SECOND')  THEN 1.15 WHEN (date_indexed > NOW()-INTERVAL '63115200  SECOND')  THEN 1.13 ELSE 1 END)::float as cv_search_ranker,\
				(case when premium_account > 0 then 1.35 else 1 end) * (case when extract('epoch' FROM mobile_confirm_date)::bigint > 0 then 1.15 else 1 end) * (case when email_bouncing_p = true then 0.01 else 1 end) * (CASE WHEN (completness_score > 99) THEN 1.5 WHEN (completness_score > 80) THEN (1+completness_score/250)  WHEN (completness_score > 50) THEN (1+completness_score/400) WHEN (completness_score > 25) THEN 0.9 ELSE 0.5 END) * (CASE WHEN (last_login_date > NOW()-INTERVAL '2629800 SECOND')    THEN 1.3 WHEN (last_login_date > NOW()-INTERVAL '7889400 SECOND')    THEN 1.23 WHEN (last_login_date > NOW()-INTERVAL '15778800 SECOND')   THEN 1.17  WHEN (last_login_date > NOW()-INTERVAL '31557600  SECOND')  THEN 1.12 WHEN (last_login_date > NOW()-INTERVAL '63115200  SECOND')  THEN 1.06 ELSE 1 END) * (CASE WHEN (cv_builder_date_modified > NOW()-INTERVAL '2629800 SECOND')    THEN 1.5 WHEN (cv_builder_date_modified > NOW()-INTERVAL '7889400 SECOND')    THEN 1.4 WHEN (cv_builder_date_modified > NOW()-INTERVAL '15778800 SECOND')   THEN 1.3  WHEN (cv_builder_date_modified > NOW()-INTERVAL '31557600  SECOND')  THEN 1.15 WHEN (cv_builder_date_modified > NOW()-INTERVAL '63115200  SECOND')  THEN 1.13 ELSE 1 END)::float as byt_cv_search_ranker,\
				(CASE WHEN (is_primary = TRUE and profile_id > 0) THEN 1 ELSE 0 END) as user_public_profile_enable,\
				(case when email_bouncing_p = true then 0.01 else 1 end) * (1000*(1+0.2*(CASE WHEN has_photo = TRUE THEN 1 ELSE 0 END))) as people_ranker,\
				(CASE WHEN (sections_fields IS NULL OR sections_fields = ' ')   THEN 'tar per con edu exp'  ELSE sections_fields  END) as sections_fields,\
				extract('epoch' FROM cv_completion_date)::bigint AS cv_completion_date,\
				extract('epoch' FROM last_login_date)::bigint AS last_login_date,\
				(CASE WHEN (user_state IS NULL OR user_state = ' ')  THEN 'mini' ELSE user_state END) as user_state,\
				email_enc,\
				email_domain,\
				dependents,\
				cell_phone_enc,\
				home_phone_enc,\
				work_phone_enc,\
				cell_phone,\
				bounce_count,\
				last_salary_value,\
				receive_emails_list,\
				last_exp_emp as last_exp_emp_full,\
				last_exp_emp_crc32 as last_exp_emp_crc32_full,\
				user_lang_preference,\
				premium_account,\
				user_tests,\
				user_courses,\
				hobbies,\
				hopping,\
				gaps,\
				res_visa_status,\
				extract('epoch' FROM mobile_confirm_date)::bigint AS mobile_confirm_date,\
				viewer_ids,\
				extract('epoch' FROM first_bch_deg_date)::bigint AS first_bch_deg_date,\
				gsm,\
				last_gsc_id,\
				previous_gsc_id,\
				all_gsc_ids,\
				all_gsc_ids_txt,\
				last_gst_id,\
				previous_gst_id,\
				all_gst_ids,\
				other_gst_id,\
				target_gst_ids,\
				all_gst_ids_text,\
				highest_degree,\
				disabilities,\
				months_of_exp_after_grad,\
				cv_custom_json,\
				sessions_count,\
				photo_url,\
				unemployed,\
				orginal_nationality,\
				extract('epoch' FROM cv_builder_date_modified)::bigint AS cv_builder_date_modified,\
				trainings,\
				certificates,\
				training_institutes,\
				last_gsi_id,\
				previous_gsi_id,\
				all_gsi_ids,\
				target_jb_roles,\
				all_gsi_ids_txt,\
				1 as index_weight,\
				'ANYKEYWORD' as any_keyword,\
				last_exp_comp_size,\
                		extract('epoch' FROM updated_contact_date)::bigint AS updated_contact_date,\
				extract('epoch' FROM last_exp_start_date)::bigint AS last_exp_start_date\
			FROM \
				cv_index_11 \
			WHERE \
				insertion_date <  (SELECT lst_main_index_start_time FROM spx_delta_separator WHERE index_id = 111 LIMIT 1) \
				 AND cv_id>=$start AND cv_id<=$end

	sql_range_step	=25000
	sql_attr_uint		=cv_id
	sql_field_string		=last_exp_emp
	sql_field_string		=previous_exp_emp
	sql_field_string		=last_exp_title
	sql_attr_uint		=last_exp_title_crc32
	sql_field_string		=previous_exp_title
	sql_attr_uint		=previous_exp_title_crc32
	sql_attr_uint		=last_exp_emp_crc32
	sql_attr_uint		=previous_exp_emp_crc32
	sql_attr_uint		=total_months_of_experience
	sql_attr_multi		=bigint industeries_roles_years from field industeries_roles_years
	sql_attr_multi		=bigint present_industeries_roles_years from field present_industeries_roles_years
	sql_attr_uint		=last_jb_industry
	sql_attr_uint		=last_jb_role
	sql_attr_multi		=bigint exp_roles_list from field exp_roles_list
	sql_attr_multi		=bigint exp_industries_list from field exp_industries_list
	sql_attr_multi		=uint experiences_iso_encoded_list from field experiences_iso_encoded_list
	sql_attr_uint		=last_experience_iso_encoded
	sql_field_string		=target_jb_title
	sql_attr_multi		=uint emplyment_type_list from field emplyment_type_list
	sql_attr_multi		=uint emplyment_status_list from field emplyment_status_list
	sql_attr_multi		=uint target_job_locations_list from field target_job_locations_list
	sql_attr_multi		=uint target_job_industries_list from field target_job_industries_list
	sql_attr_uint		=notice_period
	sql_attr_uint		=trgt_job_salary
	sql_attr_uint		=salary_range_cluster_list
	sql_attr_uint		=career_level
	sql_attr_uint           =career_level_sorted
	sql_attr_uint           =months_of_experience_sorted
	sql_attr_uint		=residence_location_iso_encoded
	sql_attr_uint		=residence_country_iso_encoded
	sql_attr_uint		=gender
	sql_attr_uint		=date_of_birth
	sql_attr_uint		=marital_status
	sql_attr_uint		=graduation_date
	sql_attr_uint		=visa_status
	sql_attr_multi		=uint car_license_countries_list_encoded from field car_license_countries_list_encoded
	sql_attr_multi		=uint edu_degree_list from field edu_degree_list
	sql_attr_multi		=uint edu_iso_encoded_list from field edu_iso_encoded_list
	sql_attr_multi		=uint edu_majors_crc32_list from field edu_majors_crc32_list
	sql_attr_multi		=uint edu_institute_crc32_list from field edu_institute_crc32_list
	sql_attr_uint		=last_edu_degree
	sql_attr_multi		=uint language_skills_levels_encoded_list from field language_skills_levels_encoded_list
	sql_attr_uint		=cv_stage
	sql_attr_uint		=locale
	sql_attr_uint		=bcc_id
	sql_attr_uint		=user_id
	sql_attr_uint		=gpa
	sql_attr_uint		=gpa_cluster
	sql_attr_timestamp		=date_indexed
	sql_attr_uint		=parent_bcc_id
	sql_attr_bool		=has_attachment
	sql_attr_bool		=has_photo
	sql_attr_bool		=has_video
	sql_attr_bool		=has_recommendation
	sql_field_string		=first_name
	sql_field_string		=middle_name
	sql_field_string		=last_name
	sql_field_string		=profile_name
	sql_attr_uint		=profile_id
	sql_attr_uint		=referrer_source_id
	sql_attr_multi		=uint specilaities_list from field specilaities_list
	sql_attr_multi		=bigint specilaities_points from field specilaities_points
	sql_attr_uint		=special_needs
	sql_attr_bool		=is_primary
	sql_attr_bool		=email_bouncing_p
	sql_attr_timestamp		=creation_date
	sql_attr_bool		=is_confidential
	sql_field_string		=last_name_ar
	sql_field_string		=last_name_la
	sql_field_string		=first_name_ar
	sql_field_string		=first_name_la
	sql_attr_uint		=primary_nationality
	sql_attr_uint		=primary_nationality_cleaned
	sql_attr_multi          =uint nationalities_list from field nationalities_list
	sql_attr_uint		=registration_iso
	sql_attr_uint		=user_type
	sql_attr_uint		=cv_creation_method
	sql_attr_uint		=affliate_program_id
	sql_attr_uint		=cv_no_search_hits
	sql_attr_uint		=cv_no_submits_to
	sql_attr_uint		=cv_no_reviews
	sql_attr_uint		=completness_score
	sql_attr_timestamp		=registration_date
	sql_attr_multi		=bigint bcc_json_fields from field bcc_json_fields
	sql_attr_uint		=yrs_exp_cluster_id
	sql_attr_uint		=yrs_exp_after_grad_cluster_id
	sql_attr_uint		=completness_scores
	sql_attr_float		=cv_search_ranker
	sql_attr_float		=byt_cv_search_ranker
	sql_attr_uint		=user_public_profile_enable
	sql_attr_uint		=people_ranker
	sql_attr_timestamp		=cv_completion_date
	sql_attr_timestamp		=last_login_date
	sql_field_string		=user_state
	sql_field_string		=email_enc
	sql_field_string		=email_domain
	sql_attr_uint		=dependents
	sql_field_string		=cell_phone_enc
	sql_field_string		=home_phone_enc
	sql_field_string		=work_phone_enc
	sql_field_string		=cell_phone
	sql_attr_uint		=bounce_count
	sql_attr_uint		=last_salary_value
	sql_field_string		=last_exp_emp_full
	sql_attr_uint		=last_exp_emp_crc32_full
	sql_attr_uint		=user_lang_preference
	sql_attr_uint		=premium_account
	sql_attr_multi		=uint user_tests from field user_tests
	sql_attr_multi		=uint user_courses from field user_courses
	sql_attr_uint		=hopping
	sql_attr_uint		=gaps
	sql_attr_uint		=res_visa_status
	sql_attr_timestamp		=mobile_confirm_date
	sql_attr_timestamp		=first_bch_deg_date
	sql_attr_multi		=uint gsm from field gsm
	sql_attr_uint		=last_gsc_id
	sql_attr_uint		=previous_gsc_id
	sql_attr_multi		=uint all_gsc_ids from field all_gsc_ids
	sql_attr_multi		=uint last_gst_id from field last_gst_id
	sql_attr_multi		=uint previous_gst_id from field previous_gst_id
	sql_attr_multi		=uint all_gst_ids from field all_gst_ids
	sql_attr_multi		=uint other_gst_id from field other_gst_id
	sql_attr_multi		=uint target_gst_ids from field target_gst_ids
	sql_attr_uint		=highest_degree
	sql_attr_multi		=uint disabilities from field disabilities
	sql_attr_uint		=months_of_exp_after_grad
	sql_attr_json		=cv_custom_json
	sql_attr_uint		=sessions_count
	sql_field_string		=photo_url
	sql_attr_bool		=unemployed
	sql_attr_uint		=orginal_nationality
	sql_attr_timestamp		=cv_builder_date_modified
	sql_attr_uint		=last_gsi_id
	sql_attr_uint		=previous_gsi_id
	sql_attr_multi		=uint all_gsi_ids from field all_gsi_ids
	sql_attr_multi		=uint target_jb_roles from field target_jb_roles
	sql_attr_uint       =last_exp_comp_size
    	sql_attr_timestamp  =updated_contact_date
	sql_attr_timestamp  =last_exp_start_date
	sql_attr_uint		=index_weight
	sql_attr_multi		=uint folder_id from ranged-query;  SELECT cv_id, folder_id FROM byt_employer_basket_11 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_employer_basket_11 WHERE cv_id between 71000000 and 71999999
	sql_attr_multi		=uint tag_id from ranged-query;  SELECT cv_id, tag_id FROM byt_item_tags_11 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_item_tags_11 WHERE cv_id between 71000000 and 71999999
	sql_attr_multi		=uint note_group_id from ranged-query;  SELECT cv_id, group_id FROM byt_comments_11 WHERE cv_id>=$start AND cv_id<=$end;  SELECT MIN(cv_id), MAX(cv_id) FROM byt_comments_11 WHERE cv_id between 71000000 and 71999999
}

		index cvMainIndexStemmed_11_5
		{
			type			= plain
			source 			= cvMainIndexStemmed_11_5_src
			path 			= /home/sphinx/sphinx/var/data/cvMainIndexStemmed_11_5
			morphology   = stem_en,stem_ar
			wordforms  = /home/sphinx/sphinx/var/data/wordforms.txt
			dict=keywords
			index_sp  = 1
			index_zones		= b_*, is_agency, special_needs, referrer_source
			stopwords		= en,ar
			exceptions		= /home/sphinx/sphinx/var/data/exceptions.txt
			min_word_len		= 1
			charset_table		= non_cjk
			index_exact_words	= 1
			
			ngram_len		= 1
			#ngram_chars		=  non_cjk
			html_strip				= 1
			preopen				= 1
		}		
		


	source cvDeltaIndex_10_src {
	type		=pgsql
	sql_host	=host
	sql_user	=user
	sql_pass	=pass
	sql_db		=database
	sql_port	=9988

	sql_query_pre	=SET client_encoding TO 'UTF8'
	sql_query_pre	= SET NAMES 'UTF8'
	sql_ranged_throttle	=1000
	sql_query	=SELECT \
				cv_id as id,\
				cv_id,\
				experiences_titles,\
				experiences_description,\
				experiences_employers,\
				last_exp_desc,\
				(CASE WHEN is_confidential = 'f' THEN last_exp_emp ELSE NULL END) as last_exp_emp,\
				(CASE WHEN is_confidential = 'f' THEN previous_exp_emp ELSE NULL END) as previous_exp_emp,\
				last_exp_title,\
				last_exp_title_crc32,\
				previous_exp_title,\
				previous_exp_title_crc32,\
				(CASE WHEN is_confidential = 'f' THEN last_exp_emp_crc32 ELSE 0 END) as last_exp_emp_crc32,\
				(CASE WHEN is_confidential = 'f' THEN previous_exp_emp_crc32 ELSE 0 END) as previous_exp_emp_crc32,\
				(CASE WHEN months_of_experience != 999999 then months_of_experience  WHEN market_entry_date != 999999 then (to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date  ELSE 999999 END ) as total_months_of_experience,\
				industeries_roles_years,\
				present_industeries_roles_years,\
				last_jb_industry,\
				last_jb_role,\
				exp_roles_list,\
				exp_industries_list,\
				experiences_iso_encoded_list,\
				last_experience_iso_encoded,\
				target_jb_title,\
				emplyment_type_list,\
				emplyment_status_list,\
				target_job_locations_list,\
				target_job_industries_list,\
				notice_period,\
				trgt_job_salary,\
				(CASE WHEN trgt_job_salary < 0 then 0  WHEN trgt_job_salary = 0 then 1  WHEN trgt_job_salary < 500 THEN 2  WHEN trgt_job_salary <= 1000 THEN 3  WHEN trgt_job_salary <= 1500 THEN 4  WHEN trgt_job_salary <= 2000 THEN 5  WHEN trgt_job_salary <= 3000 THEN 6  WHEN trgt_job_salary <= 5000 THEN 7  WHEN trgt_job_salary <= 8000 THEN 8  WHEN trgt_job_salary <= 12000 THEN 9  WHEN trgt_job_salary <= 16000 THEN 10  WHEN trgt_job_salary <= 20000 THEN 11  WHEN trgt_job_salary <= 30000 THEN 12  WHEN trgt_job_salary <= 50000 THEN 13  ELSE 14  END) as salary_range_cluster_list,\
				career_level,\
				(CASE WHEN career_level = 6 THEN 2001 WHEN career_level < 6  THEN (career_level+1000)*2 ELSE career_level END) as career_level_sorted,\
		                (CASE WHEN months_of_experience != 999999 then months_of_experience  WHEN market_entry_date != 999999 then (to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date  ELSE 0 END ) as months_of_experience_sorted,\
				objective_txt,\
				residence_location_iso_encoded,\
				LEFT(residence_location_iso_encoded::text,4)::int as residence_country_iso_encoded,\
				gender,\
				date_of_birth,\
				marital_status,\
				graduation_date,\
				visa_status,\
				car_license_countries_list_encoded,\
				edu_degree_list,\
				edu_iso_encoded_list,\
				edu_txt,\
				edu_major,\
				edu_majors_crc32_list,\
				lst_edu_major,\
				edu_institute,\
				edu_institute_crc32_list,\
				lst_edu_institute,\
				last_edu_degree,\
				skills_txt,\
				language_skills_levels_encoded_list,\
				cv_stage,\
				locale,\
				bcc_id,\
				generic_txt,\
				user_id,\
				gpa,\
				(CASE when gpa >= 99999 then 5 when gpa >= 8000 then 4 when gpa >= 6000 then 3 when gpa >= 4000 then 2 when gpa >= 2000 then 1 when gpa >= 0 then 0 end) as gpa_cluster,\
				extract('epoch' FROM date_indexed)::bigint AS date_indexed,\
				parent_bcc_id,\
				has_attachment,\
				has_photo,\
				has_video,\
				has_recommendation,\
				first_name,\
				middle_name,\
				last_name,\
				profile_name,\
				profile_id,\
				(case when referrer_source_id is null then 99999 else referrer_source_id end ) as referrer_source_id,\
				specilaities_list,\
				specilaities_text,\
				specilaities_points,\
				user_generic_field1,\
				 COALESCE(special_needs,99999) AS special_needs,\
				is_primary,\
				email_bouncing_p,\
				extract('epoch' FROM creation_date)::bigint AS creation_date,\
				is_confidential,\
				last_name_ar,\
				last_name_la,\
				first_name_ar,\
				first_name_la,\
				first_name_la || ' ' || last_name_la as full_name_la,\
				first_name_ar || ' ' || last_name_ar as full_name_ar,\
				primary_nationality,\
				(case when LEFT(residence_location_iso_encoded::text,4)::int = primary_nationality  and visa_status not in (1,7) then 0  when  LEFT(residence_location_iso_encoded::text,4)::int in (5560,6257,6254,4850,5857) and primary_nationality in (4751,6547,5769,6347,4854,6159)  then 0 else  primary_nationality end) as primary_nationality_cleaned,\
				nationalities_list,\
				specilaities_platinum,\
				specilaities_gold,\
				specilaities_silver,\
				specilaities_bronze,\
				bcc_text_fields,\
				has_flag,\
				registration_iso,\
				user_type,\
				cv_creation_method,\
				affliate_program_id,\
				cv_no_search_hits,\
				cv_no_submits_to,\
				cv_no_reviews,\
				completness_score,\
				extract('epoch' FROM registration_date)::bigint AS registration_date,\
				bcc_json_fields,\
				referrer_source,\
				user_generic_field2,\
				user_generic_field3,\
				user_generic_field4,\
				(case (CASE WHEN months_of_experience != 999999 then CEIL(months_of_experience/11.999)  WHEN market_entry_date != 999999 then ceil(((to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date)/11.999)  ELSE 999999 END )::bigint when 0 then 1 when 1 then 1 when 2 then 2 when 3 then 3 when 4 then 3 when 5 then 3 when 6 then 4 when 7 then 4 when 8 then 4 when 9 then 4 when 10 then 4 when 999999 then 6 else 5 end) as yrs_exp_cluster_id,\
				(case (CASE WHEN months_of_exp_after_grad != 999999 then CEIL(months_of_exp_after_grad/11.999) ELSE 999999 END )::bigint when 0 then 1 when 1 then 1 when 2 then 2 when 3 then 3 when 4 then 3 when 5 then 3 when 6 then 4 when 7 then 4 when 8 then 4 when 9 then 4 when 10 then 4 when 999999 then 6 else 5 end) as yrs_exp_after_grad_cluster_id,\
				(CASE WHEN completness_score < 20 THEN 1 WHEN completness_score < 40 THEN 2 WHEN completness_score < 60 THEN 3 WHEN completness_score < 80 THEN 4 WHEN completness_score < 500 THEN 5 END ) as completness_scores,\
				(case when premium_account > 0 then 1.35 else 1 end) * (case when extract('epoch' FROM mobile_confirm_date)::bigint > 0 then 1.15 else 1 end) * (case when email_bouncing_p = true then 0.01 else 1 end) * (CASE WHEN (completness_score > 99) THEN 1.5 WHEN (completness_score > 80) THEN (1+completness_score/250)  WHEN (completness_score > 50) THEN (1+completness_score/400) WHEN (completness_score > 25) THEN 0.9 ELSE 0.5 END) * (CASE WHEN (last_login_date > NOW()-INTERVAL '2629800 SECOND')    THEN 1.3 WHEN (last_login_date > NOW()-INTERVAL '7889400 SECOND')    THEN 1.23 WHEN (last_login_date > NOW()-INTERVAL '15778800 SECOND')   THEN 1.17  WHEN (last_login_date > NOW()-INTERVAL '31557600  SECOND')  THEN 1.12 WHEN (last_login_date > NOW()-INTERVAL '63115200  SECOND')  THEN 1.06 ELSE 1 END) * (CASE WHEN (date_indexed > NOW()-INTERVAL '2629800 SECOND')    THEN 1.5 WHEN (date_indexed > NOW()-INTERVAL '7889400 SECOND')    THEN 1.4 WHEN (date_indexed > NOW()-INTERVAL '15778800 SECOND')   THEN 1.3  WHEN (date_indexed > NOW()-INTERVAL '31557600  SECOND')  THEN 1.15 WHEN (date_indexed > NOW()-INTERVAL '63115200  SECOND')  THEN 1.13 ELSE 1 END)::float as cv_search_ranker,\
				(case when premium_account > 0 then 1.35 else 1 end) * (case when extract('epoch' FROM mobile_confirm_date)::bigint > 0 then 1.15 else 1 end) * (case when email_bouncing_p = true then 0.01 else 1 end) * (CASE WHEN (completness_score > 99) THEN 1.5 WHEN (completness_score > 80) THEN (1+completness_score/250)  WHEN (completness_score > 50) THEN (1+completness_score/400) WHEN (completness_score > 25) THEN 0.9 ELSE 0.5 END) * (CASE WHEN (last_login_date > NOW()-INTERVAL '2629800 SECOND')    THEN 1.3 WHEN (last_login_date > NOW()-INTERVAL '7889400 SECOND')    THEN 1.23 WHEN (last_login_date > NOW()-INTERVAL '15778800 SECOND')   THEN 1.17  WHEN (last_login_date > NOW()-INTERVAL '31557600  SECOND')  THEN 1.12 WHEN (last_login_date > NOW()-INTERVAL '63115200  SECOND')  THEN 1.06 ELSE 1 END) * (CASE WHEN (cv_builder_date_modified > NOW()-INTERVAL '2629800 SECOND')    THEN 1.5 WHEN (cv_builder_date_modified > NOW()-INTERVAL '7889400 SECOND')    THEN 1.4 WHEN (cv_builder_date_modified > NOW()-INTERVAL '15778800 SECOND')   THEN 1.3  WHEN (cv_builder_date_modified > NOW()-INTERVAL '31557600  SECOND')  THEN 1.15 WHEN (cv_builder_date_modified > NOW()-INTERVAL '63115200  SECOND')  THEN 1.13 ELSE 1 END)::float as byt_cv_search_ranker,\
				(CASE WHEN (is_primary = TRUE and profile_id > 0) THEN 1 ELSE 0 END) as user_public_profile_enable,\
				(case when email_bouncing_p = true then 0.01 else 1 end) * (1000*(1+0.2*(CASE WHEN has_photo = TRUE THEN 1 ELSE 0 END))) as people_ranker,\
				(CASE WHEN (sections_fields IS NULL OR sections_fields = ' ')   THEN 'tar per con edu exp'  ELSE sections_fields  END) as sections_fields,\
				extract('epoch' FROM cv_completion_date)::bigint AS cv_completion_date,\
				extract('epoch' FROM last_login_date)::bigint AS last_login_date,\
				(CASE WHEN (user_state IS NULL OR user_state = ' ')  THEN 'mini' ELSE user_state END) as user_state,\
				email_enc,\
				email_domain,\
				dependents,\
				cell_phone_enc,\
				home_phone_enc,\
				work_phone_enc,\
				cell_phone,\
				bounce_count,\
				last_salary_value,\
				receive_emails_list,\
				last_exp_emp as last_exp_emp_full,\
				last_exp_emp_crc32 as last_exp_emp_crc32_full,\
				user_lang_preference,\
				premium_account,\
				user_tests,\
				user_courses,\
				hobbies,\
				hopping,\
				gaps,\
				res_visa_status,\
				extract('epoch' FROM mobile_confirm_date)::bigint AS mobile_confirm_date,\
				viewer_ids,\
				extract('epoch' FROM first_bch_deg_date)::bigint AS first_bch_deg_date,\
				gsm,\
				last_gsc_id,\
				previous_gsc_id,\
				all_gsc_ids,\
				all_gsc_ids_txt,\
				last_gst_id,\
				previous_gst_id,\
				all_gst_ids,\
				other_gst_id,\
				target_gst_ids,\
				all_gst_ids_text,\
				highest_degree,\
				disabilities,\
				months_of_exp_after_grad,\
				cv_custom_json,\
				sessions_count,\
				photo_url,\
				unemployed,\
				orginal_nationality,\
				extract('epoch' FROM cv_builder_date_modified)::bigint AS cv_builder_date_modified,\
				trainings,\
				certificates,\
				training_institutes,\
				last_gsi_id,\
				previous_gsi_id,\
				all_gsi_ids,\
				target_jb_roles,\
				all_gsi_ids_txt,\
				3 as index_weight,\
				'ANYKEYWORD' as any_keyword,\
				last_exp_comp_size,\
        		        extract('epoch' FROM updated_contact_date)::bigint AS updated_contact_date,\
				extract('epoch' FROM last_exp_start_date)::bigint AS last_exp_start_date\
			FROM \
				cv_index_10 \
			WHERE \
				insertion_date >=  (SELECT lst_main_index_start_time FROM spx_delta_separator WHERE index_id = 110 LIMIT 1)

	sql_range_step	=25000
	sql_attr_uint		=cv_id
	sql_field_string		=last_exp_emp
	sql_field_string		=previous_exp_emp
	sql_field_string		=last_exp_title
	sql_attr_uint		=last_exp_title_crc32
	sql_field_string		=previous_exp_title
	sql_attr_uint		=previous_exp_title_crc32
	sql_attr_uint		=last_exp_emp_crc32
	sql_attr_uint		=previous_exp_emp_crc32
	sql_attr_uint		=total_months_of_experience
	sql_attr_multi		=bigint industeries_roles_years from field industeries_roles_years
	sql_attr_multi		=bigint present_industeries_roles_years from field present_industeries_roles_years
	sql_attr_uint		=last_jb_industry
	sql_attr_uint		=last_jb_role
	sql_attr_multi		=bigint exp_roles_list from field exp_roles_list
	sql_attr_multi		=bigint exp_industries_list from field exp_industries_list
	sql_attr_multi		=uint experiences_iso_encoded_list from field experiences_iso_encoded_list
	sql_attr_uint		=last_experience_iso_encoded
	sql_field_string		=target_jb_title
	sql_attr_multi		=uint emplyment_type_list from field emplyment_type_list
	sql_attr_multi		=uint emplyment_status_list from field emplyment_status_list
	sql_attr_multi		=uint target_job_locations_list from field target_job_locations_list
	sql_attr_multi		=uint target_job_industries_list from field target_job_industries_list
	sql_attr_uint		=notice_period
	sql_attr_uint		=trgt_job_salary
	sql_attr_uint		=salary_range_cluster_list
	sql_attr_uint		=career_level
	sql_attr_uint      	=career_level_sorted
	sql_attr_uint		=months_of_experience_sorted
	sql_attr_uint		=residence_location_iso_encoded
	sql_attr_uint		=residence_country_iso_encoded
	sql_attr_uint		=gender
	sql_attr_uint		=date_of_birth
	sql_attr_uint		=marital_status
	sql_attr_uint		=graduation_date
	sql_attr_uint		=visa_status
	sql_attr_multi		=uint car_license_countries_list_encoded from field car_license_countries_list_encoded
	sql_attr_multi		=uint edu_degree_list from field edu_degree_list
	sql_attr_multi		=uint edu_iso_encoded_list from field edu_iso_encoded_list
	sql_attr_multi		=uint edu_majors_crc32_list from field edu_majors_crc32_list
	sql_attr_multi		=uint edu_institute_crc32_list from field edu_institute_crc32_list
	sql_attr_uint		=last_edu_degree
	sql_attr_multi		=uint language_skills_levels_encoded_list from field language_skills_levels_encoded_list
	sql_attr_uint		=cv_stage
	sql_attr_uint		=locale
	sql_attr_uint		=bcc_id
	sql_attr_uint		=user_id
	sql_attr_uint		=gpa
	sql_attr_uint		=gpa_cluster
	sql_attr_timestamp		=date_indexed
	sql_attr_uint		=parent_bcc_id
	sql_attr_bool		=has_attachment
	sql_attr_bool		=has_photo
	sql_attr_bool		=has_video
	sql_attr_bool		=has_recommendation
	sql_field_string		=first_name
	sql_field_string		=middle_name
	sql_field_string		=last_name
	sql_field_string		=profile_name
	sql_attr_uint		=profile_id
	sql_attr_uint		=referrer_source_id
	sql_attr_multi		=uint specilaities_list from field specilaities_list
	sql_attr_multi		=bigint specilaities_points from field specilaities_points
	sql_attr_uint		=special_needs
	sql_attr_bool		=is_primary
	sql_attr_bool		=email_bouncing_p
	sql_attr_timestamp		=creation_date
	sql_attr_bool		=is_confidential
	sql_field_string		=last_name_ar
	sql_field_string		=last_name_la
	sql_field_string		=first_name_ar
	sql_field_string		=first_name_la
	sql_attr_uint		=primary_nationality
	sql_attr_uint		=primary_nationality_cleaned
	sql_attr_multi          =uint nationalities_list from field nationalities_list
	sql_attr_uint		=registration_iso
	sql_attr_uint		=user_type
	sql_attr_uint		=cv_creation_method
	sql_attr_uint		=affliate_program_id
	sql_attr_uint		=cv_no_search_hits
	sql_attr_uint		=cv_no_submits_to
	sql_attr_uint		=cv_no_reviews
	sql_attr_uint		=completness_score
	sql_attr_timestamp		=registration_date
	sql_attr_multi		=bigint bcc_json_fields from field bcc_json_fields
	sql_attr_uint		=yrs_exp_cluster_id
	sql_attr_uint		=yrs_exp_after_grad_cluster_id
	sql_attr_uint		=completness_scores
	sql_attr_float		=cv_search_ranker
	sql_attr_float		=byt_cv_search_ranker
	sql_attr_uint		=user_public_profile_enable
	sql_attr_uint		=people_ranker
	sql_attr_timestamp		=cv_completion_date
	sql_attr_timestamp		=last_login_date
	sql_field_string		=user_state
	sql_field_string		=email_enc
	sql_field_string		=email_domain
	sql_attr_uint		=dependents
	sql_field_string		=cell_phone_enc
	sql_field_string		=home_phone_enc
	sql_field_string		=work_phone_enc
	sql_field_string		=cell_phone
	sql_attr_uint		=bounce_count
	sql_attr_uint		=last_salary_value
	sql_field_string		=last_exp_emp_full
	sql_attr_uint		=last_exp_emp_crc32_full
	sql_attr_uint		=user_lang_preference
	sql_attr_uint		=premium_account
	sql_attr_multi		=uint user_tests from field user_tests
	sql_attr_multi		=uint user_courses from field user_courses
	sql_attr_uint		=hopping
	sql_attr_uint		=gaps
	sql_attr_uint		=res_visa_status
	sql_attr_timestamp		=mobile_confirm_date
	sql_attr_timestamp		=first_bch_deg_date
	sql_attr_multi		=uint gsm from field gsm
	sql_attr_uint		=last_gsc_id
	sql_attr_uint		=previous_gsc_id
	sql_attr_multi		=uint all_gsc_ids from field all_gsc_ids
	sql_attr_multi		=uint last_gst_id from field last_gst_id
	sql_attr_multi		=uint previous_gst_id from field previous_gst_id
	sql_attr_multi		=uint all_gst_ids from field all_gst_ids
	sql_attr_multi		=uint other_gst_id from field other_gst_id
	sql_attr_multi		=uint target_gst_ids from field target_gst_ids
	sql_attr_uint		=highest_degree
	sql_attr_multi		=uint disabilities from field disabilities
	sql_attr_uint		=months_of_exp_after_grad
	sql_attr_json		=cv_custom_json
	sql_attr_uint		=sessions_count
	sql_field_string		=photo_url
	sql_attr_bool		=unemployed
	sql_attr_uint		=orginal_nationality
	sql_attr_timestamp		=cv_builder_date_modified
	sql_attr_uint		=last_gsi_id
	sql_attr_uint		=previous_gsi_id
	sql_attr_multi		=uint all_gsi_ids from field all_gsi_ids
	sql_attr_multi		=uint target_jb_roles from field target_jb_roles
	sql_attr_uint       =last_exp_comp_size
    	sql_attr_timestamp  =updated_contact_date
	sql_attr_timestamp  =last_exp_start_date
	sql_attr_uint		=index_weight
	sql_attr_multi		=uint folder_id from query;  SELECT a.cv_id, a.folder_id as folder_id FROM byt_employer_basket_10 a ,cv_index_10 b  where a.cv_id = b.cv_id and b.insertion_date >=  (SELECT lst_main_index_start_time FROM spx_delta_separator WHERE index_id = 110 LIMIT 1) 
	sql_attr_multi		=uint tag_id from query;  SELECT a.cv_id, a.tag_id as tag_id FROM byt_item_tags_10 a ,cv_index_10 b  where a.cv_id = b.cv_id and b.insertion_date >=  (SELECT lst_main_index_start_time FROM spx_delta_separator WHERE index_id = 110 LIMIT 1)
	sql_attr_multi		=uint note_group_id from query;  SELECT a.cv_id, a.group_id as note_group_id FROM byt_comments_10 a ,cv_index_10 b  where a.cv_id = b.cv_id and b.insertion_date >=  (SELECT lst_main_index_start_time FROM spx_delta_separator WHERE index_id = 110 LIMIT 1)
	sql_query_killlist =	SELECT CV_ID  FROM  cv_index_10  WHERE insertion_date > (SELECT lst_main_index_start_time FROM spx_delta_separator WHERE index_id = 110 LIMIT 1) UNION  SELECT cv_id FROM cv_index_killed_list_10 WHERE date_indexed >= (SELECT lst_main_index_start_time FROM spx_delta_separator WHERE index_id = 110 LIMIT 1) 
}

		index cvDeltaIndex_10
		{
			type			= plain
			source 			= cvDeltaIndex_10_src
			path 			= /home/sphinx/sphinx/var/data/cvDeltaIndex_10
			morphology   = none
			dict=keywords
			index_sp  = 1
			index_zones		= b_*, is_agency, special_needs, referrer_source
			stopwords		= en,ar
			exceptions		= /home/sphinx/sphinx/var/data/exceptions.txt
			min_word_len		= 1
			charset_table		= non_cjk
		
			ngram_len		= 1
			#ngram_chars		=  non_cjk
			inplace_enable		= 0
			html_strip				= 1
			preopen				= 1
			killlist_target = cvMainIndex_10_0:id,cvMainIndex_10_1:id,cvMainIndex_10_2:id,cvMainIndex_10_3:id,cvMainIndex_10_4:id,cvMainIndex_10_5:id
		}		

	source cvDeltaIndexStemmed_10_src {
	type		=pgsql
	sql_host	=host
	sql_user	=user
	sql_pass	=pass
	sql_db		=database
	sql_port	=9988

	sql_query_pre	=SET client_encoding TO 'UTF8'
	sql_query_pre	= SET NAMES 'UTF8'
	sql_ranged_throttle	=1000
	sql_query	=SELECT \
				cv_id as id,\
				cv_id,\
				experiences_titles,\
				experiences_description,\
				experiences_employers,\
				last_exp_desc,\
				(CASE WHEN is_confidential = 'f' THEN last_exp_emp ELSE NULL END) as last_exp_emp,\
				(CASE WHEN is_confidential = 'f' THEN previous_exp_emp ELSE NULL END) as previous_exp_emp,\
				last_exp_title,\
				last_exp_title_crc32,\
				previous_exp_title,\
				previous_exp_title_crc32,\
				(CASE WHEN is_confidential = 'f' THEN last_exp_emp_crc32 ELSE 0 END) as last_exp_emp_crc32,\
				(CASE WHEN is_confidential = 'f' THEN previous_exp_emp_crc32 ELSE 0 END) as previous_exp_emp_crc32,\
				(CASE WHEN months_of_experience != 999999 then months_of_experience  WHEN market_entry_date != 999999 then (to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date  ELSE 999999 END ) as total_months_of_experience,\
				industeries_roles_years,\
				present_industeries_roles_years,\
				last_jb_industry,\
				last_jb_role,\
				exp_roles_list,\
				exp_industries_list,\
				experiences_iso_encoded_list,\
				last_experience_iso_encoded,\
				target_jb_title,\
				emplyment_type_list,\
				emplyment_status_list,\
				target_job_locations_list,\
				target_job_industries_list,\
				notice_period,\
				trgt_job_salary,\
				(CASE WHEN trgt_job_salary < 0 then 0  WHEN trgt_job_salary = 0 then 1  WHEN trgt_job_salary < 500 THEN 2  WHEN trgt_job_salary <= 1000 THEN 3  WHEN trgt_job_salary <= 1500 THEN 4  WHEN trgt_job_salary <= 2000 THEN 5  WHEN trgt_job_salary <= 3000 THEN 6  WHEN trgt_job_salary <= 5000 THEN 7  WHEN trgt_job_salary <= 8000 THEN 8  WHEN trgt_job_salary <= 12000 THEN 9  WHEN trgt_job_salary <= 16000 THEN 10  WHEN trgt_job_salary <= 20000 THEN 11  WHEN trgt_job_salary <= 30000 THEN 12  WHEN trgt_job_salary <= 50000 THEN 13  ELSE 14  END) as salary_range_cluster_list,\
				career_level,\
				(CASE WHEN career_level = 6 THEN 2001 WHEN career_level < 6 THEN (career_level+1000)*2 ELSE career_level END) as career_level_sorted,\
		                (CASE WHEN months_of_experience != 999999 then months_of_experience  WHEN market_entry_date != 999999 then (to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date  ELSE 0 END ) as months_of_experience_sorted,\
				objective_txt,\
				residence_location_iso_encoded,\
				LEFT(residence_location_iso_encoded::text,4)::int as residence_country_iso_encoded,\
				gender,\
				date_of_birth,\
				marital_status,\
				graduation_date,\
				visa_status,\
				car_license_countries_list_encoded,\
				edu_degree_list,\
				edu_iso_encoded_list,\
				edu_txt,\
				edu_major,\
				edu_majors_crc32_list,\
				lst_edu_major,\
				edu_institute,\
				edu_institute_crc32_list,\
				lst_edu_institute,\
				last_edu_degree,\
				skills_txt,\
				language_skills_levels_encoded_list,\
				cv_stage,\
				locale,\
				bcc_id,\
				generic_txt,\
				user_id,\
				gpa,\
				(CASE when gpa >= 99999 then 5 when gpa >= 8000 then 4 when gpa >= 6000 then 3 when gpa >= 4000 then 2 when gpa >= 2000 then 1 when gpa >= 0 then 0 end) as gpa_cluster,\
				extract('epoch' FROM date_indexed)::bigint AS date_indexed,\
				parent_bcc_id,\
				has_attachment,\
				has_photo,\
				has_video,\
				has_recommendation,\
				first_name,\
				middle_name,\
				last_name,\
				profile_name,\
				profile_id,\
				(case when referrer_source_id is null then 99999 else referrer_source_id end ) as referrer_source_id,\
				specilaities_list,\
				specilaities_text,\
				specilaities_points,\
				user_generic_field1,\
				 COALESCE(special_needs,99999) AS special_needs,\
				is_primary,\
				email_bouncing_p,\
				extract('epoch' FROM creation_date)::bigint AS creation_date,\
				is_confidential,\
				last_name_ar,\
				last_name_la,\
				first_name_ar,\
				first_name_la,\
				first_name_la || ' ' || last_name_la as full_name_la,\
				first_name_ar || ' ' || last_name_ar as full_name_ar,\
				primary_nationality,\
				(case when LEFT(residence_location_iso_encoded::text,4)::int = primary_nationality  and visa_status not in (1,7) then 0  when  LEFT(residence_location_iso_encoded::text,4)::int in (5560,6257,6254,4850,5857) and primary_nationality in (4751,6547,5769,6347,4854,6159)  then 0 else  primary_nationality end) as primary_nationality_cleaned,\
				nationalities_list,\
				specilaities_platinum,\
				specilaities_gold,\
				specilaities_silver,\
				specilaities_bronze,\
				bcc_text_fields,\
				has_flag,\
				registration_iso,\
				user_type,\
				cv_creation_method,\
				affliate_program_id,\
				cv_no_search_hits,\
				cv_no_submits_to,\
				cv_no_reviews,\
				completness_score,\
				extract('epoch' FROM registration_date)::bigint AS registration_date,\
				bcc_json_fields,\
				referrer_source,\
				user_generic_field2,\
				user_generic_field3,\
				user_generic_field4,\
				(case (CASE WHEN months_of_experience != 999999 then CEIL(months_of_experience/11.999)  WHEN market_entry_date != 999999 then ceil(((to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date)/11.999)  ELSE 999999 END )::bigint when 0 then 1 when 1 then 1 when 2 then 2 when 3 then 3 when 4 then 3 when 5 then 3 when 6 then 4 when 7 then 4 when 8 then 4 when 9 then 4 when 10 then 4 when 999999 then 6 else 5 end) as yrs_exp_cluster_id,\
				(case (CASE WHEN months_of_exp_after_grad != 999999 then CEIL(months_of_exp_after_grad/11.999) ELSE 999999 END )::bigint when 0 then 1 when 1 then 1 when 2 then 2 when 3 then 3 when 4 then 3 when 5 then 3 when 6 then 4 when 7 then 4 when 8 then 4 when 9 then 4 when 10 then 4 when 999999 then 6 else 5 end) as yrs_exp_after_grad_cluster_id,\
				(CASE WHEN completness_score < 20 THEN 1 WHEN completness_score < 40 THEN 2 WHEN completness_score < 60 THEN 3 WHEN completness_score < 80 THEN 4 WHEN completness_score < 500 THEN 5 END ) as completness_scores,\
				(case when premium_account > 0 then 1.35 else 1 end) * (case when extract('epoch' FROM mobile_confirm_date)::bigint > 0 then 1.15 else 1 end) * (case when email_bouncing_p = true then 0.01 else 1 end) * (CASE WHEN (completness_score > 99) THEN 1.5 WHEN (completness_score > 80) THEN (1+completness_score/250)  WHEN (completness_score > 50) THEN (1+completness_score/400) WHEN (completness_score > 25) THEN 0.9 ELSE 0.5 END) * (CASE WHEN (last_login_date > NOW()-INTERVAL '2629800 SECOND')    THEN 1.3 WHEN (last_login_date > NOW()-INTERVAL '7889400 SECOND')    THEN 1.23 WHEN (last_login_date > NOW()-INTERVAL '15778800 SECOND')   THEN 1.17  WHEN (last_login_date > NOW()-INTERVAL '31557600  SECOND')  THEN 1.12 WHEN (last_login_date > NOW()-INTERVAL '63115200  SECOND')  THEN 1.06 ELSE 1 END) * (CASE WHEN (date_indexed > NOW()-INTERVAL '2629800 SECOND')    THEN 1.5 WHEN (date_indexed > NOW()-INTERVAL '7889400 SECOND')    THEN 1.4 WHEN (date_indexed > NOW()-INTERVAL '15778800 SECOND')   THEN 1.3  WHEN (date_indexed > NOW()-INTERVAL '31557600  SECOND')  THEN 1.15 WHEN (date_indexed > NOW()-INTERVAL '63115200  SECOND')  THEN 1.13 ELSE 1 END)::float as cv_search_ranker,\
				(case when premium_account > 0 then 1.35 else 1 end) * (case when extract('epoch' FROM mobile_confirm_date)::bigint > 0 then 1.15 else 1 end) * (case when email_bouncing_p = true then 0.01 else 1 end) * (CASE WHEN (completness_score > 99) THEN 1.5 WHEN (completness_score > 80) THEN (1+completness_score/250)  WHEN (completness_score > 50) THEN (1+completness_score/400) WHEN (completness_score > 25) THEN 0.9 ELSE 0.5 END) * (CASE WHEN (last_login_date > NOW()-INTERVAL '2629800 SECOND')    THEN 1.3 WHEN (last_login_date > NOW()-INTERVAL '7889400 SECOND')    THEN 1.23 WHEN (last_login_date > NOW()-INTERVAL '15778800 SECOND')   THEN 1.17  WHEN (last_login_date > NOW()-INTERVAL '31557600  SECOND')  THEN 1.12 WHEN (last_login_date > NOW()-INTERVAL '63115200  SECOND')  THEN 1.06 ELSE 1 END) * (CASE WHEN (cv_builder_date_modified > NOW()-INTERVAL '2629800 SECOND')    THEN 1.5 WHEN (cv_builder_date_modified > NOW()-INTERVAL '7889400 SECOND')    THEN 1.4 WHEN (cv_builder_date_modified > NOW()-INTERVAL '15778800 SECOND')   THEN 1.3  WHEN (cv_builder_date_modified > NOW()-INTERVAL '31557600  SECOND')  THEN 1.15 WHEN (cv_builder_date_modified > NOW()-INTERVAL '63115200  SECOND')  THEN 1.13 ELSE 1 END)::float as byt_cv_search_ranker,\
				(CASE WHEN (is_primary = TRUE and profile_id > 0) THEN 1 ELSE 0 END) as user_public_profile_enable,\
				(case when email_bouncing_p = true then 0.01 else 1 end) * (1000*(1+0.2*(CASE WHEN has_photo = TRUE THEN 1 ELSE 0 END))) as people_ranker,\
				(CASE WHEN (sections_fields IS NULL OR sections_fields = ' ')   THEN 'tar per con edu exp'  ELSE sections_fields  END) as sections_fields,\
				extract('epoch' FROM cv_completion_date)::bigint AS cv_completion_date,\
				extract('epoch' FROM last_login_date)::bigint AS last_login_date,\
				(CASE WHEN (user_state IS NULL OR user_state = ' ')  THEN 'mini' ELSE user_state END) as user_state,\
				email_enc,\
				email_domain,\
				dependents,\
				cell_phone_enc,\
				home_phone_enc,\
				work_phone_enc,\
				cell_phone,\
				bounce_count,\
				last_salary_value,\
				receive_emails_list,\
				last_exp_emp as last_exp_emp_full,\
				last_exp_emp_crc32 as last_exp_emp_crc32_full,\
				user_lang_preference,\
				premium_account,\
				user_tests,\
				user_courses,\
				hobbies,\
				hopping,\
				gaps,\
				res_visa_status,\
				extract('epoch' FROM mobile_confirm_date)::bigint AS mobile_confirm_date,\
				viewer_ids,\
				extract('epoch' FROM first_bch_deg_date)::bigint AS first_bch_deg_date,\
				gsm,\
				last_gsc_id,\
				previous_gsc_id,\
				all_gsc_ids,\
				all_gsc_ids_txt,\
				last_gst_id,\
				previous_gst_id,\
				all_gst_ids,\
				other_gst_id,\
				target_gst_ids,\
				all_gst_ids_text,\
				highest_degree,\
				disabilities,\
				months_of_exp_after_grad,\
				cv_custom_json,\
				sessions_count,\
				photo_url,\
				unemployed,\
				orginal_nationality,\
				extract('epoch' FROM cv_builder_date_modified)::bigint AS cv_builder_date_modified,\
				trainings,\
				certificates,\
				training_institutes,\
				last_gsi_id,\
				previous_gsi_id,\
				all_gsi_ids,\
				target_jb_roles,\
				all_gsi_ids_txt,\
				1 as index_weight,\
				'ANYKEYWORD' as any_keyword,\
				last_exp_comp_size,\
        		        extract('epoch' FROM updated_contact_date)::bigint AS updated_contact_date,\
				extract('epoch' FROM last_exp_start_date)::bigint AS last_exp_start_date\
			FROM \
				cv_index_10 \
			WHERE \
				insertion_date >=  (SELECT lst_main_index_start_time FROM spx_delta_separator WHERE index_id = 110 LIMIT 1) 

	sql_range_step	=25000
	sql_attr_uint		=cv_id
	sql_field_string		=last_exp_emp
	sql_field_string		=previous_exp_emp
	sql_field_string		=last_exp_title
	sql_attr_uint		=last_exp_title_crc32
	sql_field_string		=previous_exp_title
	sql_attr_uint		=previous_exp_title_crc32
	sql_attr_uint		=last_exp_emp_crc32
	sql_attr_uint		=previous_exp_emp_crc32
	sql_attr_uint		=total_months_of_experience
	sql_attr_multi		=bigint industeries_roles_years from field industeries_roles_years
	sql_attr_multi		=bigint present_industeries_roles_years from field present_industeries_roles_years
	sql_attr_uint		=last_jb_industry
	sql_attr_uint		=last_jb_role
	sql_attr_multi		=bigint exp_roles_list from field exp_roles_list
	sql_attr_multi		=bigint exp_industries_list from field exp_industries_list
	sql_attr_multi		=uint experiences_iso_encoded_list from field experiences_iso_encoded_list
	sql_attr_uint		=last_experience_iso_encoded
	sql_field_string		=target_jb_title
	sql_attr_multi		=uint emplyment_type_list from field emplyment_type_list
	sql_attr_multi		=uint emplyment_status_list from field emplyment_status_list
	sql_attr_multi		=uint target_job_locations_list from field target_job_locations_list
	sql_attr_multi		=uint target_job_industries_list from field target_job_industries_list
	sql_attr_uint		=notice_period
	sql_attr_uint		=trgt_job_salary
	sql_attr_uint		=salary_range_cluster_list
	sql_attr_uint		=career_level
	sql_attr_uint   	=career_level_sorted
	sql_attr_uint	        =months_of_experience_sorted
	sql_attr_uint		=residence_location_iso_encoded
	sql_attr_uint		=residence_country_iso_encoded
	sql_attr_uint		=gender
	sql_attr_uint		=date_of_birth
	sql_attr_uint		=marital_status
	sql_attr_uint		=graduation_date
	sql_attr_uint		=visa_status
	sql_attr_multi		=uint car_license_countries_list_encoded from field car_license_countries_list_encoded
	sql_attr_multi		=uint edu_degree_list from field edu_degree_list
	sql_attr_multi		=uint edu_iso_encoded_list from field edu_iso_encoded_list
	sql_attr_multi		=uint edu_majors_crc32_list from field edu_majors_crc32_list
	sql_attr_multi		=uint edu_institute_crc32_list from field edu_institute_crc32_list
	sql_attr_uint		=last_edu_degree
	sql_attr_multi		=uint language_skills_levels_encoded_list from field language_skills_levels_encoded_list
	sql_attr_uint		=cv_stage
	sql_attr_uint		=locale
	sql_attr_uint		=bcc_id
	sql_attr_uint		=user_id
	sql_attr_uint		=gpa
	sql_attr_uint		=gpa_cluster
	sql_attr_timestamp		=date_indexed
	sql_attr_uint		=parent_bcc_id
	sql_attr_bool		=has_attachment
	sql_attr_bool		=has_photo
	sql_attr_bool		=has_video
	sql_attr_bool		=has_recommendation
	sql_field_string		=first_name
	sql_field_string		=middle_name
	sql_field_string		=last_name
	sql_field_string		=profile_name
	sql_attr_uint		=profile_id
	sql_attr_uint		=referrer_source_id
	sql_attr_multi		=uint specilaities_list from field specilaities_list
	sql_attr_multi		=bigint specilaities_points from field specilaities_points
	sql_attr_uint		=special_needs
	sql_attr_bool		=is_primary
	sql_attr_bool		=email_bouncing_p
	sql_attr_timestamp		=creation_date
	sql_attr_bool		=is_confidential
	sql_field_string		=last_name_ar
	sql_field_string		=last_name_la
	sql_field_string		=first_name_ar
	sql_field_string		=first_name_la
	sql_attr_uint		=primary_nationality
	sql_attr_uint		=primary_nationality_cleaned
	sql_attr_multi          =uint nationalities_list from field nationalities_list
	sql_attr_uint		=registration_iso
	sql_attr_uint		=user_type
	sql_attr_uint		=cv_creation_method
	sql_attr_uint		=affliate_program_id
	sql_attr_uint		=cv_no_search_hits
	sql_attr_uint		=cv_no_submits_to
	sql_attr_uint		=cv_no_reviews
	sql_attr_uint		=completness_score
	sql_attr_timestamp		=registration_date
	sql_attr_multi		=bigint bcc_json_fields from field bcc_json_fields
	sql_attr_uint		=yrs_exp_cluster_id
	sql_attr_uint		=yrs_exp_after_grad_cluster_id
	sql_attr_uint		=completness_scores
	sql_attr_float		=cv_search_ranker
	sql_attr_float		=byt_cv_search_ranker
	sql_attr_uint		=user_public_profile_enable
	sql_attr_uint		=people_ranker
	sql_attr_timestamp		=cv_completion_date
	sql_attr_timestamp		=last_login_date
	sql_field_string		=user_state
	sql_field_string		=email_enc
	sql_field_string		=email_domain
	sql_attr_uint		=dependents
	sql_field_string		=cell_phone_enc
	sql_field_string		=home_phone_enc
	sql_field_string		=work_phone_enc
	sql_field_string		=cell_phone
	sql_attr_uint		=bounce_count
	sql_attr_uint		=last_salary_value
	sql_field_string		=last_exp_emp_full
	sql_attr_uint		=last_exp_emp_crc32_full
	sql_attr_uint		=user_lang_preference
	sql_attr_uint		=premium_account
	sql_attr_multi		=uint user_tests from field user_tests
	sql_attr_multi		=uint user_courses from field user_courses
	sql_attr_uint		=hopping
	sql_attr_uint		=gaps
	sql_attr_uint		=res_visa_status
	sql_attr_timestamp		=mobile_confirm_date
	sql_attr_timestamp		=first_bch_deg_date
	sql_attr_multi		=uint gsm from field gsm
	sql_attr_uint		=last_gsc_id
	sql_attr_uint		=previous_gsc_id
	sql_attr_multi		=uint all_gsc_ids from field all_gsc_ids
	sql_attr_multi		=uint last_gst_id from field last_gst_id
	sql_attr_multi		=uint previous_gst_id from field previous_gst_id
	sql_attr_multi		=uint all_gst_ids from field all_gst_ids
	sql_attr_multi		=uint other_gst_id from field other_gst_id
	sql_attr_multi		=uint target_gst_ids from field target_gst_ids
	sql_attr_uint		=highest_degree
	sql_attr_multi		=uint disabilities from field disabilities
	sql_attr_uint		=months_of_exp_after_grad
	sql_attr_json		=cv_custom_json
	sql_attr_uint		=sessions_count
	sql_field_string		=photo_url
	sql_attr_bool		=unemployed
	sql_attr_uint		=orginal_nationality
	sql_attr_timestamp		=cv_builder_date_modified
	sql_attr_uint		=last_gsi_id
	sql_attr_uint		=previous_gsi_id
	sql_attr_multi		=uint all_gsi_ids from field all_gsi_ids
	sql_attr_multi		=uint target_jb_roles from field target_jb_roles
	sql_attr_uint       =last_exp_comp_size
    	sql_attr_timestamp  =updated_contact_date
	sql_attr_timestamp  =last_exp_start_date
	sql_attr_uint		=index_weight
	sql_attr_multi		=uint folder_id from query;  SELECT a.cv_id, a.folder_id as folder_id FROM byt_employer_basket_10 a ,cv_index_10 b  where a.cv_id = b.cv_id and b.insertion_date >=  (SELECT lst_main_index_start_time FROM spx_delta_separator WHERE index_id = 110 LIMIT 1) 
	sql_attr_multi		=uint tag_id from query;  SELECT a.cv_id, a.tag_id as tag_id FROM byt_item_tags_10 a ,cv_index_10 b  where a.cv_id = b.cv_id and b.insertion_date >=  (SELECT lst_main_index_start_time FROM spx_delta_separator WHERE index_id = 110 LIMIT 1) 
	sql_attr_multi		=uint note_group_id from query;  SELECT a.cv_id, a.group_id as note_group_id FROM byt_comments_10 a ,cv_index_10 b  where a.cv_id = b.cv_id and b.insertion_date >=  (SELECT lst_main_index_start_time FROM spx_delta_separator WHERE index_id = 110 LIMIT 1)
	sql_query_killlist =	SELECT CV_ID  FROM  cv_index_10  WHERE insertion_date > (SELECT lst_main_index_start_time FROM spx_delta_separator WHERE index_id = 110 LIMIT 1)   UNION  SELECT cv_id FROM cv_index_killed_list_10 WHERE date_indexed >= (SELECT lst_main_index_start_time FROM spx_delta_separator WHERE index_id = 110 LIMIT 1) 
}

		index cvDeltaIndexStemmed_10
		{
			type			= plain
			source 			= cvDeltaIndexStemmed_10_src
			path 			= /home/sphinx/sphinx/var/data/cvDeltaIndexStemmed_10
			morphology   = stem_en,stem_ar
			wordforms  = /home/sphinx/sphinx/var/data/wordforms.txt
			dict=keywords
			index_sp  = 1
			index_zones		= b_*, is_agency, special_needs, referrer_source
			stopwords		= en,ar
			exceptions		= /home/sphinx/sphinx/var/data/exceptions.txt
			min_word_len		= 1
			charset_table		= non_cjk

			index_exact_words	= 1
			
			ngram_len		= 1
			#ngram_chars		=  non_cjk
			inplace_enable		= 0
			html_strip				= 1
			preopen				= 1
			killlist_target = cvMainIndexStemmed_10_0:id,cvMainIndexStemmed_10_1:id,cvMainIndexStemmed_10_2:id,cvMainIndexStemmed_10_3:id,cvMainIndexStemmed_10_4:id,cvMainIndexStemmed_10_5:id
		}		

	source cvDeltaIndex_11_src {
	type		=pgsql
	sql_host	=host
	sql_user	=user
	sql_pass	=pass
	sql_db		=database
	sql_port	=9988

	sql_query_pre	=SET client_encoding TO 'UTF8'
	sql_query_pre	= SET NAMES 'UTF8'
	sql_ranged_throttle	=1000
	sql_query	=SELECT \
				cv_id as id,\
				cv_id,\
				experiences_titles,\
				experiences_description,\
				experiences_employers,\
				last_exp_desc,\
				(CASE WHEN is_confidential = 'f' THEN last_exp_emp ELSE NULL END) as last_exp_emp,\
				(CASE WHEN is_confidential = 'f' THEN previous_exp_emp ELSE NULL END) as previous_exp_emp,\
				last_exp_title,\
				last_exp_title_crc32,\
				previous_exp_title,\
				previous_exp_title_crc32,\
				(CASE WHEN is_confidential = 'f' THEN last_exp_emp_crc32 ELSE 0 END) as last_exp_emp_crc32,\
				(CASE WHEN is_confidential = 'f' THEN previous_exp_emp_crc32 ELSE 0 END) as previous_exp_emp_crc32,\
				(CASE WHEN months_of_experience != 999999 then months_of_experience  WHEN market_entry_date != 999999 then (to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date  ELSE 999999 END ) as total_months_of_experience,\
				industeries_roles_years,\
				present_industeries_roles_years,\
				last_jb_industry,\
				last_jb_role,\
				exp_roles_list,\
				exp_industries_list,\
				experiences_iso_encoded_list,\
				last_experience_iso_encoded,\
				target_jb_title,\
				emplyment_type_list,\
				emplyment_status_list,\
				target_job_locations_list,\
				target_job_industries_list,\
				notice_period,\
				trgt_job_salary,\
				(CASE WHEN trgt_job_salary < 0 then 0  WHEN trgt_job_salary = 0 then 1  WHEN trgt_job_salary < 500 THEN 2  WHEN trgt_job_salary <= 1000 THEN 3  WHEN trgt_job_salary <= 1500 THEN 4  WHEN trgt_job_salary <= 2000 THEN 5  WHEN trgt_job_salary <= 3000 THEN 6  WHEN trgt_job_salary <= 5000 THEN 7  WHEN trgt_job_salary <= 8000 THEN 8  WHEN trgt_job_salary <= 12000 THEN 9  WHEN trgt_job_salary <= 16000 THEN 10  WHEN trgt_job_salary <= 20000 THEN 11  WHEN trgt_job_salary <= 30000 THEN 12  WHEN trgt_job_salary <= 50000 THEN 13  ELSE 14  END) as salary_range_cluster_list,\
				career_level,\
				(CASE WHEN career_level = 6 THEN 2001 WHEN career_level < 6  THEN (career_level+1000)*2 ELSE career_level END) as career_level_sorted,\
		                (CASE WHEN months_of_experience != 999999 then months_of_experience  WHEN market_entry_date != 999999 then (to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date  ELSE 0 END ) as months_of_experience_sorted,\
				objective_txt,\
				residence_location_iso_encoded,\
				LEFT(residence_location_iso_encoded::text,4)::int as residence_country_iso_encoded,\
				gender,\
				date_of_birth,\
				marital_status,\
				graduation_date,\
				visa_status,\
				car_license_countries_list_encoded,\
				edu_degree_list,\
				edu_iso_encoded_list,\
				edu_txt,\
				edu_major,\
				edu_majors_crc32_list,\
				lst_edu_major,\
				edu_institute,\
				edu_institute_crc32_list,\
				lst_edu_institute,\
				last_edu_degree,\
				skills_txt,\
				language_skills_levels_encoded_list,\
				cv_stage,\
				locale,\
				bcc_id,\
				generic_txt,\
				user_id,\
				gpa,\
				(CASE when gpa >= 99999 then 5 when gpa >= 8000 then 4 when gpa >= 6000 then 3 when gpa >= 4000 then 2 when gpa >= 2000 then 1 when gpa >= 0 then 0 end) as gpa_cluster,\
				extract('epoch' FROM date_indexed)::bigint AS date_indexed,\
				parent_bcc_id,\
				has_attachment,\
				has_photo,\
				has_video,\
				has_recommendation,\
				first_name,\
				middle_name,\
				last_name,\
				profile_name,\
				profile_id,\
				(case when referrer_source_id is null then 99999 else referrer_source_id end ) as referrer_source_id,\
				specilaities_list,\
				specilaities_text,\
				specilaities_points,\
				user_generic_field1,\
				 COALESCE(special_needs,99999) AS special_needs,\
				is_primary,\
				email_bouncing_p,\
				extract('epoch' FROM creation_date)::bigint AS creation_date,\
				is_confidential,\
				last_name_ar,\
				last_name_la,\
				first_name_ar,\
				first_name_la,\
				first_name_la || ' ' || last_name_la as full_name_la,\
				first_name_ar || ' ' || last_name_ar as full_name_ar,\
				primary_nationality,\
				(case when LEFT(residence_location_iso_encoded::text,4)::int = primary_nationality  and visa_status not in (1,7) then 0  when  LEFT(residence_location_iso_encoded::text,4)::int in (5560,6257,6254,4850,5857) and primary_nationality in (4751,6547,5769,6347,4854,6159)  then 0 else  primary_nationality end) as primary_nationality_cleaned,\
				nationalities_list,\
				specilaities_platinum,\
				specilaities_gold,\
				specilaities_silver,\
				specilaities_bronze,\
				bcc_text_fields,\
				has_flag,\
				registration_iso,\
				user_type,\
				cv_creation_method,\
				affliate_program_id,\
				cv_no_search_hits,\
				cv_no_submits_to,\
				cv_no_reviews,\
				completness_score,\
				extract('epoch' FROM registration_date)::bigint AS registration_date,\
				bcc_json_fields,\
				referrer_source,\
				user_generic_field2,\
				user_generic_field3,\
				user_generic_field4,\
				(case (CASE WHEN months_of_experience != 999999 then CEIL(months_of_experience/11.999)  WHEN market_entry_date != 999999 then ceil(((to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date)/11.999)  ELSE 999999 END )::bigint when 0 then 1 when 1 then 1 when 2 then 2 when 3 then 3 when 4 then 3 when 5 then 3 when 6 then 4 when 7 then 4 when 8 then 4 when 9 then 4 when 10 then 4 when 999999 then 6 else 5 end) as yrs_exp_cluster_id,\
				(case (CASE WHEN months_of_exp_after_grad != 999999 then CEIL(months_of_exp_after_grad/11.999) ELSE 999999 END )::bigint when 0 then 1 when 1 then 1 when 2 then 2 when 3 then 3 when 4 then 3 when 5 then 3 when 6 then 4 when 7 then 4 when 8 then 4 when 9 then 4 when 10 then 4 when 999999 then 6 else 5 end) as yrs_exp_after_grad_cluster_id,\
				(CASE WHEN completness_score < 20 THEN 1 WHEN completness_score < 40 THEN 2 WHEN completness_score < 60 THEN 3 WHEN completness_score < 80 THEN 4 WHEN completness_score < 500 THEN 5 END ) as completness_scores,\
				(case when premium_account > 0 then 1.35 else 1 end) * (case when extract('epoch' FROM mobile_confirm_date)::bigint > 0 then 1.15 else 1 end) * (case when email_bouncing_p = true then 0.01 else 1 end) * (CASE WHEN (completness_score > 99) THEN 1.5 WHEN (completness_score > 80) THEN (1+completness_score/250)  WHEN (completness_score > 50) THEN (1+completness_score/400) WHEN (completness_score > 25) THEN 0.9 ELSE 0.5 END) * (CASE WHEN (last_login_date > NOW()-INTERVAL '2629800 SECOND')    THEN 1.3 WHEN (last_login_date > NOW()-INTERVAL '7889400 SECOND')    THEN 1.23 WHEN (last_login_date > NOW()-INTERVAL '15778800 SECOND')   THEN 1.17  WHEN (last_login_date > NOW()-INTERVAL '31557600  SECOND')  THEN 1.12 WHEN (last_login_date > NOW()-INTERVAL '63115200  SECOND')  THEN 1.06 ELSE 1 END) * (CASE WHEN (date_indexed > NOW()-INTERVAL '2629800 SECOND')    THEN 1.5 WHEN (date_indexed > NOW()-INTERVAL '7889400 SECOND')    THEN 1.4 WHEN (date_indexed > NOW()-INTERVAL '15778800 SECOND')   THEN 1.3  WHEN (date_indexed > NOW()-INTERVAL '31557600  SECOND')  THEN 1.15 WHEN (date_indexed > NOW()-INTERVAL '63115200  SECOND')  THEN 1.13 ELSE 1 END)::float as cv_search_ranker,\
				(case when premium_account > 0 then 1.35 else 1 end) * (case when extract('epoch' FROM mobile_confirm_date)::bigint > 0 then 1.15 else 1 end) * (case when email_bouncing_p = true then 0.01 else 1 end) * (CASE WHEN (completness_score > 99) THEN 1.5 WHEN (completness_score > 80) THEN (1+completness_score/250)  WHEN (completness_score > 50) THEN (1+completness_score/400) WHEN (completness_score > 25) THEN 0.9 ELSE 0.5 END) * (CASE WHEN (last_login_date > NOW()-INTERVAL '2629800 SECOND')    THEN 1.3 WHEN (last_login_date > NOW()-INTERVAL '7889400 SECOND')    THEN 1.23 WHEN (last_login_date > NOW()-INTERVAL '15778800 SECOND')   THEN 1.17  WHEN (last_login_date > NOW()-INTERVAL '31557600  SECOND')  THEN 1.12 WHEN (last_login_date > NOW()-INTERVAL '63115200  SECOND')  THEN 1.06 ELSE 1 END) * (CASE WHEN (cv_builder_date_modified > NOW()-INTERVAL '2629800 SECOND')    THEN 1.5 WHEN (cv_builder_date_modified > NOW()-INTERVAL '7889400 SECOND')    THEN 1.4 WHEN (cv_builder_date_modified > NOW()-INTERVAL '15778800 SECOND')   THEN 1.3  WHEN (cv_builder_date_modified > NOW()-INTERVAL '31557600  SECOND')  THEN 1.15 WHEN (cv_builder_date_modified > NOW()-INTERVAL '63115200  SECOND')  THEN 1.13 ELSE 1 END)::float as byt_cv_search_ranker,\
				(CASE WHEN (is_primary = TRUE and profile_id > 0) THEN 1 ELSE 0 END) as user_public_profile_enable,\
				(case when email_bouncing_p = true then 0.01 else 1 end) * (1000*(1+0.2*(CASE WHEN has_photo = TRUE THEN 1 ELSE 0 END))) as people_ranker,\
				(CASE WHEN (sections_fields IS NULL OR sections_fields = ' ')   THEN 'tar per con edu exp'  ELSE sections_fields  END) as sections_fields,\
				extract('epoch' FROM cv_completion_date)::bigint AS cv_completion_date,\
				extract('epoch' FROM last_login_date)::bigint AS last_login_date,\
				(CASE WHEN (user_state IS NULL OR user_state = ' ')  THEN 'mini' ELSE user_state END) as user_state,\
				email_enc,\
				email_domain,\
				dependents,\
				cell_phone_enc,\
				home_phone_enc,\
				work_phone_enc,\
				cell_phone,\
				bounce_count,\
				last_salary_value,\
				receive_emails_list,\
				last_exp_emp as last_exp_emp_full,\
				last_exp_emp_crc32 as last_exp_emp_crc32_full,\
				user_lang_preference,\
				premium_account,\
				user_tests,\
				user_courses,\
				hobbies,\
				hopping,\
				gaps,\
				res_visa_status,\
				extract('epoch' FROM mobile_confirm_date)::bigint AS mobile_confirm_date,\
				viewer_ids,\
				extract('epoch' FROM first_bch_deg_date)::bigint AS first_bch_deg_date,\
				gsm,\
				last_gsc_id,\
				previous_gsc_id,\
				all_gsc_ids,\
				all_gsc_ids_txt,\
				last_gst_id,\
				previous_gst_id,\
				all_gst_ids,\
				other_gst_id,\
				target_gst_ids,\
				all_gst_ids_text,\
				highest_degree,\
				disabilities,\
				months_of_exp_after_grad,\
				cv_custom_json,\
				sessions_count,\
				photo_url,\
				unemployed,\
				orginal_nationality,\
				extract('epoch' FROM cv_builder_date_modified)::bigint AS cv_builder_date_modified,\
				trainings,\
				certificates,\
				training_institutes,\
				last_gsi_id,\
				previous_gsi_id,\
				all_gsi_ids,\
				target_jb_roles,\
				all_gsi_ids_txt,\
				3 as index_weight,\
				'ANYKEYWORD' as any_keyword,\
				last_exp_comp_size,\
        		        extract('epoch' FROM updated_contact_date)::bigint AS updated_contact_date,\
				extract('epoch' FROM last_exp_start_date)::bigint AS last_exp_start_date\
			FROM \
				cv_index_11 \
			WHERE \
				insertion_date >=  (SELECT lst_main_index_start_time FROM spx_delta_separator WHERE index_id = 111 LIMIT 1)

	sql_range_step	=25000
	sql_attr_uint		=cv_id
	sql_field_string		=last_exp_emp
	sql_field_string		=previous_exp_emp
	sql_field_string		=last_exp_title
	sql_attr_uint		=last_exp_title_crc32
	sql_field_string		=previous_exp_title
	sql_attr_uint		=previous_exp_title_crc32
	sql_attr_uint		=last_exp_emp_crc32
	sql_attr_uint		=previous_exp_emp_crc32
	sql_attr_uint		=total_months_of_experience
	sql_attr_multi		=bigint industeries_roles_years from field industeries_roles_years
	sql_attr_multi		=bigint present_industeries_roles_years from field present_industeries_roles_years
	sql_attr_uint		=last_jb_industry
	sql_attr_uint		=last_jb_role
	sql_attr_multi		=bigint exp_roles_list from field exp_roles_list
	sql_attr_multi		=bigint exp_industries_list from field exp_industries_list
	sql_attr_multi		=uint experiences_iso_encoded_list from field experiences_iso_encoded_list
	sql_attr_uint		=last_experience_iso_encoded
	sql_field_string		=target_jb_title
	sql_attr_multi		=uint emplyment_type_list from field emplyment_type_list
	sql_attr_multi		=uint emplyment_status_list from field emplyment_status_list
	sql_attr_multi		=uint target_job_locations_list from field target_job_locations_list
	sql_attr_multi		=uint target_job_industries_list from field target_job_industries_list
	sql_attr_uint		=notice_period
	sql_attr_uint		=trgt_job_salary
	sql_attr_uint		=salary_range_cluster_list
	sql_attr_uint		=career_level
	sql_attr_uint      	=career_level_sorted
	sql_attr_uint		=months_of_experience_sorted
	sql_attr_uint		=residence_location_iso_encoded
	sql_attr_uint		=residence_country_iso_encoded
	sql_attr_uint		=gender
	sql_attr_uint		=date_of_birth
	sql_attr_uint		=marital_status
	sql_attr_uint		=graduation_date
	sql_attr_uint		=visa_status
	sql_attr_multi		=uint car_license_countries_list_encoded from field car_license_countries_list_encoded
	sql_attr_multi		=uint edu_degree_list from field edu_degree_list
	sql_attr_multi		=uint edu_iso_encoded_list from field edu_iso_encoded_list
	sql_attr_multi		=uint edu_majors_crc32_list from field edu_majors_crc32_list
	sql_attr_multi		=uint edu_institute_crc32_list from field edu_institute_crc32_list
	sql_attr_uint		=last_edu_degree
	sql_attr_multi		=uint language_skills_levels_encoded_list from field language_skills_levels_encoded_list
	sql_attr_uint		=cv_stage
	sql_attr_uint		=locale
	sql_attr_uint		=bcc_id
	sql_attr_uint		=user_id
	sql_attr_uint		=gpa
	sql_attr_uint		=gpa_cluster
	sql_attr_timestamp		=date_indexed
	sql_attr_uint		=parent_bcc_id
	sql_attr_bool		=has_attachment
	sql_attr_bool		=has_photo
	sql_attr_bool		=has_video
	sql_attr_bool		=has_recommendation
	sql_field_string		=first_name
	sql_field_string		=middle_name
	sql_field_string		=last_name
	sql_field_string		=profile_name
	sql_attr_uint		=profile_id
	sql_attr_uint		=referrer_source_id
	sql_attr_multi		=uint specilaities_list from field specilaities_list
	sql_attr_multi		=bigint specilaities_points from field specilaities_points
	sql_attr_uint		=special_needs
	sql_attr_bool		=is_primary
	sql_attr_bool		=email_bouncing_p
	sql_attr_timestamp		=creation_date
	sql_attr_bool		=is_confidential
	sql_field_string		=last_name_ar
	sql_field_string		=last_name_la
	sql_field_string		=first_name_ar
	sql_field_string		=first_name_la
	sql_attr_uint		=primary_nationality
	sql_attr_uint		=primary_nationality_cleaned
	sql_attr_multi          =uint nationalities_list from field nationalities_list
	sql_attr_uint		=registration_iso
	sql_attr_uint		=user_type
	sql_attr_uint		=cv_creation_method
	sql_attr_uint		=affliate_program_id
	sql_attr_uint		=cv_no_search_hits
	sql_attr_uint		=cv_no_submits_to
	sql_attr_uint		=cv_no_reviews
	sql_attr_uint		=completness_score
	sql_attr_timestamp		=registration_date
	sql_attr_multi		=bigint bcc_json_fields from field bcc_json_fields
	sql_attr_uint		=yrs_exp_cluster_id
	sql_attr_uint		=yrs_exp_after_grad_cluster_id
	sql_attr_uint		=completness_scores
	sql_attr_float		=cv_search_ranker
	sql_attr_float		=byt_cv_search_ranker
	sql_attr_uint		=user_public_profile_enable
	sql_attr_uint		=people_ranker
	sql_attr_timestamp		=cv_completion_date
	sql_attr_timestamp		=last_login_date
	sql_field_string		=user_state
	sql_field_string		=email_enc
	sql_field_string		=email_domain
	sql_attr_uint		=dependents
	sql_field_string		=cell_phone_enc
	sql_field_string		=home_phone_enc
	sql_field_string		=work_phone_enc
	sql_field_string		=cell_phone
	sql_attr_uint		=bounce_count
	sql_attr_uint		=last_salary_value
	sql_field_string		=last_exp_emp_full
	sql_attr_uint		=last_exp_emp_crc32_full
	sql_attr_uint		=user_lang_preference
	sql_attr_uint		=premium_account
	sql_attr_multi		=uint user_tests from field user_tests
	sql_attr_multi		=uint user_courses from field user_courses
	sql_attr_uint		=hopping
	sql_attr_uint		=gaps
	sql_attr_uint		=res_visa_status
	sql_attr_timestamp		=mobile_confirm_date
	sql_attr_timestamp		=first_bch_deg_date
	sql_attr_multi		=uint gsm from field gsm
	sql_attr_uint		=last_gsc_id
	sql_attr_uint		=previous_gsc_id
	sql_attr_multi		=uint all_gsc_ids from field all_gsc_ids
	sql_attr_multi		=uint last_gst_id from field last_gst_id
	sql_attr_multi		=uint previous_gst_id from field previous_gst_id
	sql_attr_multi		=uint all_gst_ids from field all_gst_ids
	sql_attr_multi		=uint other_gst_id from field other_gst_id
	sql_attr_multi		=uint target_gst_ids from field target_gst_ids
	sql_attr_uint		=highest_degree
	sql_attr_multi		=uint disabilities from field disabilities
	sql_attr_uint		=months_of_exp_after_grad
	sql_attr_json		=cv_custom_json
	sql_attr_uint		=sessions_count
	sql_field_string		=photo_url
	sql_attr_bool		=unemployed
	sql_attr_uint		=orginal_nationality
	sql_attr_timestamp		=cv_builder_date_modified
	sql_attr_uint		=last_gsi_id
	sql_attr_uint		=previous_gsi_id
	sql_attr_multi		=uint all_gsi_ids from field all_gsi_ids
	sql_attr_multi		=uint target_jb_roles from field target_jb_roles
	sql_attr_uint       =last_exp_comp_size
    	sql_attr_timestamp  =updated_contact_date
	sql_attr_timestamp  =last_exp_start_date
	sql_attr_uint		=index_weight
	sql_attr_multi		=uint folder_id from query;  SELECT a.cv_id, a.folder_id as folder_id FROM byt_employer_basket_11 a ,cv_index_11 b  where a.cv_id = b.cv_id and b.insertion_date >=  (SELECT lst_main_index_start_time FROM spx_delta_separator WHERE index_id = 111 LIMIT 1) 
	sql_attr_multi		=uint tag_id from query;  SELECT a.cv_id, a.tag_id as tag_id FROM byt_item_tags_11 a ,cv_index_11 b  where a.cv_id = b.cv_id and b.insertion_date >=  (SELECT lst_main_index_start_time FROM spx_delta_separator WHERE index_id = 111 LIMIT 1)
	sql_attr_multi		=uint note_group_id from query;  SELECT a.cv_id, a.group_id as note_group_id FROM byt_comments_11 a ,cv_index_11 b  where a.cv_id = b.cv_id and b.insertion_date >=  (SELECT lst_main_index_start_time FROM spx_delta_separator WHERE index_id = 111 LIMIT 1)
	sql_query_killlist =	SELECT CV_ID  FROM  cv_index_11  WHERE insertion_date > (SELECT lst_main_index_start_time FROM spx_delta_separator WHERE index_id = 111 LIMIT 1) UNION  SELECT cv_id FROM cv_index_killed_list_11 WHERE date_indexed >= (SELECT lst_main_index_start_time FROM spx_delta_separator WHERE index_id = 111 LIMIT 1) 
}

		index cvDeltaIndex_11
		{
			type			= plain
			source 			= cvDeltaIndex_11_src
			path 			= /home/sphinx/sphinx/var/data/cvDeltaIndex_11
			morphology   = none
			dict=keywords
			index_sp  = 1
			index_zones		= b_*, is_agency, special_needs, referrer_source
			stopwords		= en,ar
			exceptions		= /home/sphinx/sphinx/var/data/exceptions.txt
			min_word_len		= 1
			charset_table		= non_cjk
		
			ngram_len		= 1
			#ngram_chars		=  non_cjk
			inplace_enable		= 0
			html_strip				= 1
			preopen				= 1
			killlist_target = cvMainIndex_11_0:id,cvMainIndex_11_1:id,cvMainIndex_11_2:id,cvMainIndex_11_3:id,cvMainIndex_11_4:id,cvMainIndex_11_5:id
		}		

	source cvDeltaIndexStemmed_11_src {
	type		=pgsql
	sql_host	=host
	sql_user	=user
	sql_pass	=pass
	sql_db		=database
	sql_port	=9988

	sql_query_pre	=SET client_encoding TO 'UTF8'
	sql_query_pre	= SET NAMES 'UTF8'
	sql_ranged_throttle	=1000
	sql_query	=SELECT \
				cv_id as id,\
				cv_id,\
				experiences_titles,\
				experiences_description,\
				experiences_employers,\
				last_exp_desc,\
				(CASE WHEN is_confidential = 'f' THEN last_exp_emp ELSE NULL END) as last_exp_emp,\
				(CASE WHEN is_confidential = 'f' THEN previous_exp_emp ELSE NULL END) as previous_exp_emp,\
				last_exp_title,\
				last_exp_title_crc32,\
				previous_exp_title,\
				previous_exp_title_crc32,\
				(CASE WHEN is_confidential = 'f' THEN last_exp_emp_crc32 ELSE 0 END) as last_exp_emp_crc32,\
				(CASE WHEN is_confidential = 'f' THEN previous_exp_emp_crc32 ELSE 0 END) as previous_exp_emp_crc32,\
				(CASE WHEN months_of_experience != 999999 then months_of_experience  WHEN market_entry_date != 999999 then (to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date  ELSE 999999 END ) as total_months_of_experience,\
				industeries_roles_years,\
				present_industeries_roles_years,\
				last_jb_industry,\
				last_jb_role,\
				exp_roles_list,\
				exp_industries_list,\
				experiences_iso_encoded_list,\
				last_experience_iso_encoded,\
				target_jb_title,\
				emplyment_type_list,\
				emplyment_status_list,\
				target_job_locations_list,\
				target_job_industries_list,\
				notice_period,\
				trgt_job_salary,\
				(CASE WHEN trgt_job_salary < 0 then 0  WHEN trgt_job_salary = 0 then 1  WHEN trgt_job_salary < 500 THEN 2  WHEN trgt_job_salary <= 1000 THEN 3  WHEN trgt_job_salary <= 1500 THEN 4  WHEN trgt_job_salary <= 2000 THEN 5  WHEN trgt_job_salary <= 3000 THEN 6  WHEN trgt_job_salary <= 5000 THEN 7  WHEN trgt_job_salary <= 8000 THEN 8  WHEN trgt_job_salary <= 12000 THEN 9  WHEN trgt_job_salary <= 16000 THEN 10  WHEN trgt_job_salary <= 20000 THEN 11  WHEN trgt_job_salary <= 30000 THEN 12  WHEN trgt_job_salary <= 50000 THEN 13  ELSE 14  END) as salary_range_cluster_list,\
				career_level,\
				(CASE WHEN career_level = 6 THEN 2001 WHEN career_level < 6 THEN (career_level+1000)*2 ELSE career_level END) as career_level_sorted,\
		                (CASE WHEN months_of_experience != 999999 then months_of_experience  WHEN market_entry_date != 999999 then (to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date  ELSE 0 END ) as months_of_experience_sorted,\
				objective_txt,\
				residence_location_iso_encoded,\
				LEFT(residence_location_iso_encoded::text,4)::int as residence_country_iso_encoded,\
				gender,\
				date_of_birth,\
				marital_status,\
				graduation_date,\
				visa_status,\
				car_license_countries_list_encoded,\
				edu_degree_list,\
				edu_iso_encoded_list,\
				edu_txt,\
				edu_major,\
				edu_majors_crc32_list,\
				lst_edu_major,\
				edu_institute,\
				edu_institute_crc32_list,\
				lst_edu_institute,\
				last_edu_degree,\
				skills_txt,\
				language_skills_levels_encoded_list,\
				cv_stage,\
				locale,\
				bcc_id,\
				generic_txt,\
				user_id,\
				gpa,\
				(CASE when gpa >= 99999 then 5 when gpa >= 8000 then 4 when gpa >= 6000 then 3 when gpa >= 4000 then 2 when gpa >= 2000 then 1 when gpa >= 0 then 0 end) as gpa_cluster,\
				extract('epoch' FROM date_indexed)::bigint AS date_indexed,\
				parent_bcc_id,\
				has_attachment,\
				has_photo,\
				has_video,\
				has_recommendation,\
				first_name,\
				middle_name,\
				last_name,\
				profile_name,\
				profile_id,\
				(case when referrer_source_id is null then 99999 else referrer_source_id end ) as referrer_source_id,\
				specilaities_list,\
				specilaities_text,\
				specilaities_points,\
				user_generic_field1,\
				 COALESCE(special_needs,99999) AS special_needs,\
				is_primary,\
				email_bouncing_p,\
				extract('epoch' FROM creation_date)::bigint AS creation_date,\
				is_confidential,\
				last_name_ar,\
				last_name_la,\
				first_name_ar,\
				first_name_la,\
				first_name_la || ' ' || last_name_la as full_name_la,\
				first_name_ar || ' ' || last_name_ar as full_name_ar,\
				primary_nationality,\
				(case when LEFT(residence_location_iso_encoded::text,4)::int = primary_nationality  and visa_status not in (1,7) then 0  when  LEFT(residence_location_iso_encoded::text,4)::int in (5560,6257,6254,4850,5857) and primary_nationality in (4751,6547,5769,6347,4854,6159)  then 0 else  primary_nationality end) as primary_nationality_cleaned,\
				nationalities_list,\
				specilaities_platinum,\
				specilaities_gold,\
				specilaities_silver,\
				specilaities_bronze,\
				bcc_text_fields,\
				has_flag,\
				registration_iso,\
				user_type,\
				cv_creation_method,\
				affliate_program_id,\
				cv_no_search_hits,\
				cv_no_submits_to,\
				cv_no_reviews,\
				completness_score,\
				extract('epoch' FROM registration_date)::bigint AS registration_date,\
				bcc_json_fields,\
				referrer_source,\
				user_generic_field2,\
				user_generic_field3,\
				user_generic_field4,\
				(case (CASE WHEN months_of_experience != 999999 then CEIL(months_of_experience/11.999)  WHEN market_entry_date != 999999 then ceil(((to_char(now(),'YYYY')::bigint-1900) *12 + to_char(now(),'mm')::bigint - market_entry_date)/11.999)  ELSE 999999 END )::bigint when 0 then 1 when 1 then 1 when 2 then 2 when 3 then 3 when 4 then 3 when 5 then 3 when 6 then 4 when 7 then 4 when 8 then 4 when 9 then 4 when 10 then 4 when 999999 then 6 else 5 end) as yrs_exp_cluster_id,\
				(case (CASE WHEN months_of_exp_after_grad != 999999 then CEIL(months_of_exp_after_grad/11.999) ELSE 999999 END )::bigint when 0 then 1 when 1 then 1 when 2 then 2 when 3 then 3 when 4 then 3 when 5 then 3 when 6 then 4 when 7 then 4 when 8 then 4 when 9 then 4 when 10 then 4 when 999999 then 6 else 5 end) as yrs_exp_after_grad_cluster_id,\
				(CASE WHEN completness_score < 20 THEN 1 WHEN completness_score < 40 THEN 2 WHEN completness_score < 60 THEN 3 WHEN completness_score < 80 THEN 4 WHEN completness_score < 500 THEN 5 END ) as completness_scores,\
				(case when premium_account > 0 then 1.35 else 1 end) * (case when extract('epoch' FROM mobile_confirm_date)::bigint > 0 then 1.15 else 1 end) * (case when email_bouncing_p = true then 0.01 else 1 end) * (CASE WHEN (completness_score > 99) THEN 1.5 WHEN (completness_score > 80) THEN (1+completness_score/250)  WHEN (completness_score > 50) THEN (1+completness_score/400) WHEN (completness_score > 25) THEN 0.9 ELSE 0.5 END) * (CASE WHEN (last_login_date > NOW()-INTERVAL '2629800 SECOND')    THEN 1.3 WHEN (last_login_date > NOW()-INTERVAL '7889400 SECOND')    THEN 1.23 WHEN (last_login_date > NOW()-INTERVAL '15778800 SECOND')   THEN 1.17  WHEN (last_login_date > NOW()-INTERVAL '31557600  SECOND')  THEN 1.12 WHEN (last_login_date > NOW()-INTERVAL '63115200  SECOND')  THEN 1.06 ELSE 1 END) * (CASE WHEN (date_indexed > NOW()-INTERVAL '2629800 SECOND')    THEN 1.5 WHEN (date_indexed > NOW()-INTERVAL '7889400 SECOND')    THEN 1.4 WHEN (date_indexed > NOW()-INTERVAL '15778800 SECOND')   THEN 1.3  WHEN (date_indexed > NOW()-INTERVAL '31557600  SECOND')  THEN 1.15 WHEN (date_indexed > NOW()-INTERVAL '63115200  SECOND')  THEN 1.13 ELSE 1 END)::float as cv_search_ranker,\
				(case when premium_account > 0 then 1.35 else 1 end) * (case when extract('epoch' FROM mobile_confirm_date)::bigint > 0 then 1.15 else 1 end) * (case when email_bouncing_p = true then 0.01 else 1 end) * (CASE WHEN (completness_score > 99) THEN 1.5 WHEN (completness_score > 80) THEN (1+completness_score/250)  WHEN (completness_score > 50) THEN (1+completness_score/400) WHEN (completness_score > 25) THEN 0.9 ELSE 0.5 END) * (CASE WHEN (last_login_date > NOW()-INTERVAL '2629800 SECOND')    THEN 1.3 WHEN (last_login_date > NOW()-INTERVAL '7889400 SECOND')    THEN 1.23 WHEN (last_login_date > NOW()-INTERVAL '15778800 SECOND')   THEN 1.17  WHEN (last_login_date > NOW()-INTERVAL '31557600  SECOND')  THEN 1.12 WHEN (last_login_date > NOW()-INTERVAL '63115200  SECOND')  THEN 1.06 ELSE 1 END) * (CASE WHEN (cv_builder_date_modified > NOW()-INTERVAL '2629800 SECOND')    THEN 1.5 WHEN (cv_builder_date_modified > NOW()-INTERVAL '7889400 SECOND')    THEN 1.4 WHEN (cv_builder_date_modified > NOW()-INTERVAL '15778800 SECOND')   THEN 1.3  WHEN (cv_builder_date_modified > NOW()-INTERVAL '31557600  SECOND')  THEN 1.15 WHEN (cv_builder_date_modified > NOW()-INTERVAL '63115200  SECOND')  THEN 1.13 ELSE 1 END)::float as byt_cv_search_ranker,\
				(CASE WHEN (is_primary = TRUE and profile_id > 0) THEN 1 ELSE 0 END) as user_public_profile_enable,\
				(case when email_bouncing_p = true then 0.01 else 1 end) * (1000*(1+0.2*(CASE WHEN has_photo = TRUE THEN 1 ELSE 0 END))) as people_ranker,\
				(CASE WHEN (sections_fields IS NULL OR sections_fields = ' ')   THEN 'tar per con edu exp'  ELSE sections_fields  END) as sections_fields,\
				extract('epoch' FROM cv_completion_date)::bigint AS cv_completion_date,\
				extract('epoch' FROM last_login_date)::bigint AS last_login_date,\
				(CASE WHEN (user_state IS NULL OR user_state = ' ')  THEN 'mini' ELSE user_state END) as user_state,\
				email_enc,\
				email_domain,\
				dependents,\
				cell_phone_enc,\
				home_phone_enc,\
				work_phone_enc,\
				cell_phone,\
				bounce_count,\
				last_salary_value,\
				receive_emails_list,\
				last_exp_emp as last_exp_emp_full,\
				last_exp_emp_crc32 as last_exp_emp_crc32_full,\
				user_lang_preference,\
				premium_account,\
				user_tests,\
				user_courses,\
				hobbies,\
				hopping,\
				gaps,\
				res_visa_status,\
				extract('epoch' FROM mobile_confirm_date)::bigint AS mobile_confirm_date,\
				viewer_ids,\
				extract('epoch' FROM first_bch_deg_date)::bigint AS first_bch_deg_date,\
				gsm,\
				last_gsc_id,\
				previous_gsc_id,\
				all_gsc_ids,\
				all_gsc_ids_txt,\
				last_gst_id,\
				previous_gst_id,\
				all_gst_ids,\
				other_gst_id,\
				target_gst_ids,\
				all_gst_ids_text,\
				highest_degree,\
				disabilities,\
				months_of_exp_after_grad,\
				cv_custom_json,\
				sessions_count,\
				photo_url,\
				unemployed,\
				orginal_nationality,\
				extract('epoch' FROM cv_builder_date_modified)::bigint AS cv_builder_date_modified,\
				trainings,\
				certificates,\
				training_institutes,\
				last_gsi_id,\
				previous_gsi_id,\
				all_gsi_ids,\
				target_jb_roles,\
				all_gsi_ids_txt,\
				1 as index_weight,\
				'ANYKEYWORD' as any_keyword,\
				last_exp_comp_size,\
        		        extract('epoch' FROM updated_contact_date)::bigint AS updated_contact_date,\
				extract('epoch' FROM last_exp_start_date)::bigint AS last_exp_start_date\
			FROM \
				cv_index_11 \
			WHERE \
				insertion_date >=  (SELECT lst_main_index_start_time FROM spx_delta_separator WHERE index_id = 111 LIMIT 1) 

	sql_range_step	=25000
	sql_attr_uint		=cv_id
	sql_field_string		=last_exp_emp
	sql_field_string		=previous_exp_emp
	sql_field_string		=last_exp_title
	sql_attr_uint		=last_exp_title_crc32
	sql_field_string		=previous_exp_title
	sql_attr_uint		=previous_exp_title_crc32
	sql_attr_uint		=last_exp_emp_crc32
	sql_attr_uint		=previous_exp_emp_crc32
	sql_attr_uint		=total_months_of_experience
	sql_attr_multi		=bigint industeries_roles_years from field industeries_roles_years
	sql_attr_multi		=bigint present_industeries_roles_years from field present_industeries_roles_years
	sql_attr_uint		=last_jb_industry
	sql_attr_uint		=last_jb_role
	sql_attr_multi		=bigint exp_roles_list from field exp_roles_list
	sql_attr_multi		=bigint exp_industries_list from field exp_industries_list
	sql_attr_multi		=uint experiences_iso_encoded_list from field experiences_iso_encoded_list
	sql_attr_uint		=last_experience_iso_encoded
	sql_field_string		=target_jb_title
	sql_attr_multi		=uint emplyment_type_list from field emplyment_type_list
	sql_attr_multi		=uint emplyment_status_list from field emplyment_status_list
	sql_attr_multi		=uint target_job_locations_list from field target_job_locations_list
	sql_attr_multi		=uint target_job_industries_list from field target_job_industries_list
	sql_attr_uint		=notice_period
	sql_attr_uint		=trgt_job_salary
	sql_attr_uint		=salary_range_cluster_list
	sql_attr_uint		=career_level
	sql_attr_uint   	=career_level_sorted
	sql_attr_uint	        =months_of_experience_sorted
	sql_attr_uint		=residence_location_iso_encoded
	sql_attr_uint		=residence_country_iso_encoded
	sql_attr_uint		=gender
	sql_attr_uint		=date_of_birth
	sql_attr_uint		=marital_status
	sql_attr_uint		=graduation_date
	sql_attr_uint		=visa_status
	sql_attr_multi		=uint car_license_countries_list_encoded from field car_license_countries_list_encoded
	sql_attr_multi		=uint edu_degree_list from field edu_degree_list
	sql_attr_multi		=uint edu_iso_encoded_list from field edu_iso_encoded_list
	sql_attr_multi		=uint edu_majors_crc32_list from field edu_majors_crc32_list
	sql_attr_multi		=uint edu_institute_crc32_list from field edu_institute_crc32_list
	sql_attr_uint		=last_edu_degree
	sql_attr_multi		=uint language_skills_levels_encoded_list from field language_skills_levels_encoded_list
	sql_attr_uint		=cv_stage
	sql_attr_uint		=locale
	sql_attr_uint		=bcc_id
	sql_attr_uint		=user_id
	sql_attr_uint		=gpa
	sql_attr_uint		=gpa_cluster
	sql_attr_timestamp		=date_indexed
	sql_attr_uint		=parent_bcc_id
	sql_attr_bool		=has_attachment
	sql_attr_bool		=has_photo
	sql_attr_bool		=has_video
	sql_attr_bool		=has_recommendation
	sql_field_string		=first_name
	sql_field_string		=middle_name
	sql_field_string		=last_name
	sql_field_string		=profile_name
	sql_attr_uint		=profile_id
	sql_attr_uint		=referrer_source_id
	sql_attr_multi		=uint specilaities_list from field specilaities_list
	sql_attr_multi		=bigint specilaities_points from field specilaities_points
	sql_attr_uint		=special_needs
	sql_attr_bool		=is_primary
	sql_attr_bool		=email_bouncing_p
	sql_attr_timestamp		=creation_date
	sql_attr_bool		=is_confidential
	sql_field_string		=last_name_ar
	sql_field_string		=last_name_la
	sql_field_string		=first_name_ar
	sql_field_string		=first_name_la
	sql_attr_uint		=primary_nationality
	sql_attr_uint		=primary_nationality_cleaned
	sql_attr_multi          =uint nationalities_list from field nationalities_list
	sql_attr_uint		=registration_iso
	sql_attr_uint		=user_type
	sql_attr_uint		=cv_creation_method
	sql_attr_uint		=affliate_program_id
	sql_attr_uint		=cv_no_search_hits
	sql_attr_uint		=cv_no_submits_to
	sql_attr_uint		=cv_no_reviews
	sql_attr_uint		=completness_score
	sql_attr_timestamp		=registration_date
	sql_attr_multi		=bigint bcc_json_fields from field bcc_json_fields
	sql_attr_uint		=yrs_exp_cluster_id
	sql_attr_uint		=yrs_exp_after_grad_cluster_id
	sql_attr_uint		=completness_scores
	sql_attr_float		=cv_search_ranker
	sql_attr_float		=byt_cv_search_ranker
	sql_attr_uint		=user_public_profile_enable
	sql_attr_uint		=people_ranker
	sql_attr_timestamp		=cv_completion_date
	sql_attr_timestamp		=last_login_date
	sql_field_string		=user_state
	sql_field_string		=email_enc
	sql_field_string		=email_domain
	sql_attr_uint		=dependents
	sql_field_string		=cell_phone_enc
	sql_field_string		=home_phone_enc
	sql_field_string		=work_phone_enc
	sql_field_string		=cell_phone
	sql_attr_uint		=bounce_count
	sql_attr_uint		=last_salary_value
	sql_field_string		=last_exp_emp_full
	sql_attr_uint		=last_exp_emp_crc32_full
	sql_attr_uint		=user_lang_preference
	sql_attr_uint		=premium_account
	sql_attr_multi		=uint user_tests from field user_tests
	sql_attr_multi		=uint user_courses from field user_courses
	sql_attr_uint		=hopping
	sql_attr_uint		=gaps
	sql_attr_uint		=res_visa_status
	sql_attr_timestamp		=mobile_confirm_date
	sql_attr_timestamp		=first_bch_deg_date
	sql_attr_multi		=uint gsm from field gsm
	sql_attr_uint		=last_gsc_id
	sql_attr_uint		=previous_gsc_id
	sql_attr_multi		=uint all_gsc_ids from field all_gsc_ids
	sql_attr_multi		=uint last_gst_id from field last_gst_id
	sql_attr_multi		=uint previous_gst_id from field previous_gst_id
	sql_attr_multi		=uint all_gst_ids from field all_gst_ids
	sql_attr_multi		=uint other_gst_id from field other_gst_id
	sql_attr_multi		=uint target_gst_ids from field target_gst_ids
	sql_attr_uint		=highest_degree
	sql_attr_multi		=uint disabilities from field disabilities
	sql_attr_uint		=months_of_exp_after_grad
	sql_attr_json		=cv_custom_json
	sql_attr_uint		=sessions_count
	sql_field_string		=photo_url
	sql_attr_bool		=unemployed
	sql_attr_uint		=orginal_nationality
	sql_attr_timestamp		=cv_builder_date_modified
	sql_attr_uint		=last_gsi_id
	sql_attr_uint		=previous_gsi_id
	sql_attr_multi		=uint all_gsi_ids from field all_gsi_ids
	sql_attr_multi		=uint target_jb_roles from field target_jb_roles
	sql_attr_uint       =last_exp_comp_size
    	sql_attr_timestamp  =updated_contact_date
	sql_attr_timestamp  =last_exp_start_date
	sql_attr_uint		=index_weight
	sql_attr_multi		=uint folder_id from query;  SELECT a.cv_id, a.folder_id as folder_id FROM byt_employer_basket_11 a ,cv_index_11 b  where a.cv_id = b.cv_id and b.insertion_date >=  (SELECT lst_main_index_start_time FROM spx_delta_separator WHERE index_id = 111 LIMIT 1) 
	sql_attr_multi		=uint tag_id from query;  SELECT a.cv_id, a.tag_id as tag_id FROM byt_item_tags_11 a ,cv_index_11 b  where a.cv_id = b.cv_id and b.insertion_date >=  (SELECT lst_main_index_start_time FROM spx_delta_separator WHERE index_id = 111 LIMIT 1) 
	sql_attr_multi		=uint note_group_id from query;  SELECT a.cv_id, a.group_id as note_group_id FROM byt_comments_11 a ,cv_index_11 b  where a.cv_id = b.cv_id and b.insertion_date >=  (SELECT lst_main_index_start_time FROM spx_delta_separator WHERE index_id = 111 LIMIT 1)
	sql_query_killlist =	SELECT CV_ID  FROM  cv_index_11  WHERE insertion_date > (SELECT lst_main_index_start_time FROM spx_delta_separator WHERE index_id = 111 LIMIT 1)   UNION  SELECT cv_id FROM cv_index_killed_list_11 WHERE date_indexed >= (SELECT lst_main_index_start_time FROM spx_delta_separator WHERE index_id = 111 LIMIT 1) 
}

		index cvDeltaIndexStemmed_11
		{
			type			= plain
			source 			= cvDeltaIndexStemmed_11_src
			path 			= /home/sphinx/sphinx/var/data/cvDeltaIndexStemmed_11
			morphology   = stem_en,stem_ar
			wordforms  = /home/sphinx/sphinx/var/data/wordforms.txt
			dict=keywords
			index_sp  = 1
			index_zones		= b_*, is_agency, special_needs, referrer_source
			stopwords		= en,ar
			exceptions		= /home/sphinx/sphinx/var/data/exceptions.txt
			min_word_len		= 1
			charset_table		= non_cjk

			index_exact_words	= 1
			
			ngram_len		= 1
			#ngram_chars		=  non_cjk
			inplace_enable		= 0
			html_strip				= 1
			preopen				= 1
			killlist_target = cvMainIndexStemmed_11_0:id,cvMainIndexStemmed_11_1:id,cvMainIndexStemmed_11_2:id,cvMainIndexStemmed_11_3:id,cvMainIndexStemmed_11_4:id,cvMainIndexStemmed_11_5:id
		}		

        index cvSearchInterfaceStemmed
                {
                                type = distributed
                                local = cvMainIndexStemmed_10_0
                                local = cvMainIndexStemmed_10_1
                                local = cvMainIndexStemmed_10_2
                                local = cvMainIndexStemmed_10_3
                                local = cvMainIndexStemmed_10_4
                                local = cvMainIndexStemmed_10_5
                                local = cvMainIndexStemmed_11_0
                                local = cvMainIndexStemmed_11_1
                                local = cvMainIndexStemmed_11_2
                                local = cvMainIndexStemmed_11_3
                                local = cvMainIndexStemmed_11_4
                                local = cvMainIndexStemmed_11_5
                                local = cvDeltaIndexStemmed_10
                                local = cvDeltaIndexStemmed_11
                                agent_query_timeout = 30000
                }
        index cvSearchInterfaceNonStemmed
                {
                                type = distributed
                                local = cvMainIndex_10_0
                                local = cvMainIndex_10_1
                                local = cvMainIndex_10_2
                                local = cvMainIndex_10_3
                                local = cvMainIndex_10_4
                                local = cvMainIndex_10_5
                                local = cvMainIndex_11_0
                                local = cvMainIndex_11_1
                                local = cvMainIndex_11_2
                                local = cvMainIndex_11_3
                                local = cvMainIndex_11_4
                                local = cvMainIndex_11_5
                                local = cvDeltaIndex_10
                                local = cvDeltaIndex_11
                                agent_query_timeout = 30000
                }

        index cvSearchInterface
                {
                         type = distributed
                         	local = cvMainIndexStemmed_10_0
                                local = cvMainIndexStemmed_10_1
                                local = cvMainIndexStemmed_10_2
                                local = cvMainIndexStemmed_10_3
                                local = cvMainIndexStemmed_10_4
                                local = cvMainIndexStemmed_10_5
                                local = cvMainIndexStemmed_11_0
                                local = cvMainIndexStemmed_11_1
                                local = cvMainIndexStemmed_11_2
                                local = cvMainIndexStemmed_11_3
                                local = cvMainIndexStemmed_11_4
                                local = cvMainIndexStemmed_11_5
                                local = cvDeltaIndexStemmed_10
                                local = cvDeltaIndexStemmed_11
				local = cvMainIndex_10_0
                                local = cvMainIndex_10_1
                                local = cvMainIndex_10_2
                                local = cvMainIndex_10_3
                                local = cvMainIndex_10_4
                                local = cvMainIndex_10_5
                                local = cvMainIndex_11_0
                                local = cvMainIndex_11_1
                                local = cvMainIndex_11_2
                                local = cvMainIndex_11_3
                                local = cvMainIndex_11_4
                                local = cvMainIndex_11_5
                                local = cvDeltaIndex_10
                                local = cvDeltaIndex_11
			 agent_query_timeout = 30000
                }

        #############################################################################
        ## searchd settings
        #############################################################################

        searchd
        {
                listen                          = 0.0.0.0:3381
                listen                          = 0.0.0.0:3391:mysql41
                log                            = /home/sphinx/sphinx/var/log/searchd.log
                query_log                      = /home/sphinx/sphinx/var/log/query.log
                query_log_format=sphinxql
                network_timeout                            = 30000
                max_children                            = 0
                persistent_connections_limit    = 150
                sphinxql_state          = /home/sphinx/udf/uservars.sql
                client_timeout          = 150
                pid_file                        = /home/sphinx/sphinx/var/log/searchd.pid
                seamless_rotate         = 1
                listen_backlog          = 40
                preopen_indexes         = 1
                unlink_old                      = 1
                mva_updates_pool        = 512M
                max_packet_size         = 16M
                max_filters                     = 256
                max_filter_values       = 20480
                read_buffer                     = 4M
                attr_flush_period               =1800
                max_batch_queries       = 256
                subtree_docs_cache      = 32M
                subtree_hits_cache      = 64M
                workers                         = threads
                dist_threads            = 32
                thread_stack            = 8M
                binlog_path = /home/sphinx/sphinx/var/log/
                agent_connect_timeout  = 30000
                agent_query_timeout     = 30000
                #max_query_time     = 30000
                attr_update_reserve= 64M

        }
        #############################################################################
        ## Common settings
        #############################################################################
        common {
                plugin_dir                      = /home/sphinx/udf
        }
	# --eof--




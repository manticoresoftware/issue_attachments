Already logging to gdb.txt.

Thread 46 (Thread 0x7fd7fc711700 (LWP 28041)):
#0  0x00007fd80268f50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fd80268ae5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fd80268ad28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x262a348) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x2628db0, pNewSeg=pNewSeg@entry=0x7fd5dc034bf0, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x262a348, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x2628d00, 
            m_iCount = 140555088072528}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140556501209296}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 1000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x2628db0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fd588188f50
        pNewSeg = {m_pPtr = 0x7fd5dc034bf0}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x30 <Address 0x30 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fd7fc70cad0, pIndex=0x2628db0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fd5dc53b310}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -59716224, 
              m_iMinInfixLen = 32727, m_iMaxSubstringLen = 40013232, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = -2011656368, 
              m_bIndexSP = 213, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd5dc53b310, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565629947264}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565629946944}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd62000db30, m_iCount = 140555088072528}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 40013280}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fd5dc36f1d0 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 350, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fd7fc70cad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fd5dc629880: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fd5dc766790 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fd588188f50, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x2628de0: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x267a200 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x270dfc8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x2714b78, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x262ae70, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fd5dc532520, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fd58c93e070, m_iCount = 1000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 1024}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd5dc300cf0, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd5dc532410, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fd5dc5324c0, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fd62000d208, sQuery=..., tOutput=..., uPacketID=@0x7fd62000dfc9: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fd7fc70e160}
        tCrashQuery = {
          m_pQuery = 0x7fd5dc3ca1b0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 1159350, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = "\000found_rows_totalH{\"queries\":0, \"avg\":\"-\", \"min\":\"-\", \"max\":\"-\", \"pct95\":\"-\", \"pct99\":\"-\"}", '\000' <repeats 4005 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fd62000dfc9, m_tOut = @0x7fd7fc710c70, m_iCID = 329, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fd5dc36ed08, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fd62000dfc9: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fd620012af0) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fd5dc3ca1b0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 1159350, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fd620b1af40 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fd620c35ff7 "e.</p>  </div> ','','XST8603121 XFR9891145','4c0657441c.ey7ixwd','wizzo','e3c04a783dae53fae0422e3a955bc02a 1fd7de7da0fce4963f775a5fdb894db5 4d236d9a2d102c5fe6ad1c50da4bec50 e3c04a783dae53fae0422e3a955"..., m_bError = false, m_iLen = 1159351}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fd5dc2fece0 "8\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 36, m_sClientName = {m_sValue = 0x7fd5dc7667b0 "127.0.0.1:53446", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 329, m_iTid = 28041, m_tmConnect = 1580441020956294, m_tmStart = 1580441020971797, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fd7fc6cbce0, m_pNext = 0x7fd7fc8f3ce0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fd5dc7a68b0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 2097152, m_iUsed = 1159350, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fd5dc3ca1b0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fd620009c20
#16 CSphThdPool::Tick (pArg=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x270e440
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x2699820) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x2699820
        pCleanup = <optimized out>
#18 0x00007fd802688e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fd800ea188d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 45 (Thread 0x7fd7fc97e700 (LWP 28032)):
#0  0x00007fd80268f50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fd80268ae5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fd80268ad28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x262a348) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x2628db0, pNewSeg=pNewSeg@entry=0x7fd5ac11d810, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x262a348, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x2628d00, 
            m_iCount = 140555692132800}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140555693371520}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 1000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x2628db0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fd5ac19c9c0
        pNewSeg = {m_pPtr = 0x7fd5ac11d810}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x40 <Address 0x40 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fd7fc979ad0, pIndex=0x2628db0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fd5ac368340}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -57172608, 
              m_iMinInfixLen = 32727, m_iMaxSubstringLen = 40013232, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = -1407596096, 
              m_bIndexSP = 213, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd5ac368340, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565632490880}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565632490560}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd6140110b0, m_iCount = 140555692132800}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 40013280}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fd5af5c3d00 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 582, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fd7fc979ad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fd5ac3618b0: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fd5af5c7380 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fd5ac19c9c0, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x2628de0: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x267a200 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x270dfc8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x2714b78, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x262ae70, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fd5ac361780, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fd5ec1dddc0, m_iCount = 1000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 1024}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd5af614f50, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd5ac361670, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fd5ac361720, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fd614010788, sQuery=..., tOutput=..., uPacketID=@0x7fd614011549: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fd7fc97b160}
        tCrashQuery = {
          m_pQuery = 0x7fd5ac4ff2e0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 940077, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = "\000found_rows_totalH{\"queries\":0, \"avg\":\"-\", \"min\":\"-\", \"max\":\"-\", \"pct95\":\"-\", \"pct99\":\"-\"}", '\000' <repeats 4005 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fd614011549, m_tOut = @0x7fd7fc97dc70, m_iCID = 315, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fd5af5c3838, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fd614011549: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fd61401ada0) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fd5ac4ff2e0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 940077, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fd61591cfd0 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fd615a027fe "10612268','4c6a21ce24.68289773','다스베이더','5396a90b72b0ccd288e8eae42a258024 af270b0a2fdd9d17104e65ed38c85b17 6f11e86a6e92ce565aa629f732d89dd7 dcf0d7d2cd120bf42580d43f29785dd3 5396a90b72b0ccd28"..., m_bError = false, m_iLen = 940078}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fd5ac4bea30 "(\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 42, m_sClientName = {m_sValue = 0x7fd5ac164430 "127.0.0.1:53378", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 315, m_iTid = 28032, m_tmConnect = 1580441021193324, m_tmStart = 1580441021206713, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fd7fc755ce0, m_pNext = 0x7fd7fc79ace0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fd5ad8a44c0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 1048576, m_iUsed = 940077, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fd5ac4ff2e0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fd614e1d2e0
#16 CSphThdPool::Tick (pArg=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x270e440
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x2709bc0) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x2709bc0
        pCleanup = <optimized out>
#18 0x00007fd802688e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fd800ea188d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 44 (Thread 0x7fd7fc8f4700 (LWP 28034)):
#0  0x00007fd80268f50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fd80268ae5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fd80268ad28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x262a348) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x2628db0, pNewSeg=pNewSeg@entry=0x7fd5f0301d10, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x262a348, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x2628d00, 
            m_iCount = 140557302035328}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140556833486096}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 1000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x2628db0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fd60c0ef380
        pNewSeg = {m_pPtr = 0x7fd5f0301d10}
        bOk = <optimized out>
        sWarning = {m_sValue = 0xc0 <Address 0xc0 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fd7fc8efad0, pIndex=0x2628db0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fd5f0303750}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -57737856, 
              m_iMinInfixLen = 32727, m_iMaxSubstringLen = 40013232, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = 202306432, 
              m_bIndexSP = 214, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd5f0303750, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565631925632}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565631925312}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd61400a530, m_iCount = 140557302035328}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 40013280}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fd5f0326580 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 334, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fd7fc8efad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fd5f03025c0: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fd5f036d7d0 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fd60c0ef380, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x2628de0: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x267a200 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x270dfc8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x2714b78, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x262ae70, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fd5f00d1ad0, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fd5b058d590, m_iCount = 1000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 1024}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd5f0340c50, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd5f00cee10, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fd5f00ceec0, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fd614009c08, sQuery=..., tOutput=..., uPacketID=@0x7fd61400a9c9: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fd7fc8f1160}
        tCrashQuery = {
          m_pQuery = 0x7fd5f03cab10 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 1110423, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = "\000found_rows_totalH{\"queries\":0, \"avg\":\"-\", \"min\":\"-\", \"max\":\"-\", \"pct95\":\"-\", \"pct99\":\"-\"}", '\000' <repeats 4005 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fd61400a9c9, m_tOut = @0x7fd7fc8f3c70, m_iCID = 321, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fd5f03260b8, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fd61400a9c9: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fd614017380) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fd5f03cab10 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 1110423, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fd614a9c0f0 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fd614bab288 "out Car Audio - Part 2','<div class=\\\"sceditor-ignore quote-mark 2916317062\\\"> Quote:</div> <div class=\\\"quote expandable\\\" data-by=\\\"HushusYuardi\\\" data-postid=\\\"5cf0a450337f930cf357e1ec\\\"> <cite cla"..., m_bError = false, m_iLen = 1110424}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fd5f0370fb0 "8\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 26, m_sClientName = {m_sValue = 0x7fd5f00b4680 "127.0.0.1:53396", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 321, m_iTid = 28034, m_tmConnect = 1580441020901436, m_tmStart = 1580441020916907, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fd7fc710ce0, m_pNext = 0x7fd7fcdcdce0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fd5f04d9cc0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 2097152, m_iUsed = 1110423, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fd5f03cab10 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fd61401ad60
#16 CSphThdPool::Tick (pArg=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x270e440
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x2630b20) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x2630b20
        pCleanup = <optimized out>
#18 0x00007fd802688e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fd800ea188d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 43 (Thread 0x7fd7fc86a700 (LWP 28036)):
#0  0x00007fd80268f50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fd80268ae5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fd80268ad28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x262a348) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x2628db0, pNewSeg=pNewSeg@entry=0x7fd5e4a24770, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x262a348, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x2628d00, 
            m_iCount = 140556700374416}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140556642131056}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 1000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x2628db0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fd5e8325590
        pNewSeg = {m_pPtr = 0x7fd5e4a24770}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x550 <Address 0x550 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fd7fc865ad0, pIndex=0x2628db0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fd5e466a530}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -58303104, 
              m_iMinInfixLen = 32727, m_iMaxSubstringLen = 40013232, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = -399354480, 
              m_bIndexSP = 213, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd5e466a530, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565631360384}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565631360064}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd620013680, m_iCount = 140556700374416}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 40013280}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fd5e6f39bb0 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 4237, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fd7fc865ad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fd5e4669ac0: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fd5e6f3bed0 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fd5e8325590, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x2628de0: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x267a200 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x270dfc8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x2714b78, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x262ae70, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fd5e4669990, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fd59425a2f0, m_iCount = 1000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 1024}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd5e6fd2fb0, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd5e4669880, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fd5e4669930, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fd620012d58, sQuery=..., tOutput=..., uPacketID=@0x7fd620013b19: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fd7fc867160}
        tCrashQuery = {
          m_pQuery = 0x7fd5e46e6b60 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 1124474, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = "\000found_rows_totalH{\"queries\":0, \"avg\":\"-\", \"min\":\"-\", \"max\":\"-\", \"pct95\":\"-\", \"pct99\":\"-\"}", '\000' <repeats 4005 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fd620013b19, m_tOut = @0x7fd7fc869c70, m_iCID = 310, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fd5e6f396e8, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fd620013b19: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fd6200117d0) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fd5e46e6b60 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 1124474, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fd62141af70 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fd62152d7eb "ientific baseball picks against nfl neural networks sports betting sites free online gambling and sports betting advice company logos andys winners sports betting odds game online sports betting in ca"..., m_bError = false, m_iLen = 1124475}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fd5e6ebd200 "x", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 51, m_sClientName = {m_sValue = 0x7fd5e6ecf050 "127.0.0.1:53360", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 310, m_iTid = 28036, m_tmConnect = 1580441021380958, m_tmStart = 1580441021396161, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fd7fcba5ce0, m_pNext = 0x7fd7fca91ce0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fd5e47f93f0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 2097152, m_iUsed = 1124474, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fd5e46e6b60 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fd620012b10
#16 CSphThdPool::Tick (pArg=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x270e440
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x2796320) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x2796320
        pCleanup = <optimized out>
#18 0x00007fd802688e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fd800ea188d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 42 (Thread 0x7fd7fc8af700 (LWP 28035)):
#0  0x00007fd80268f50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fd80268ae5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fd80268ad28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x262a348) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x2628db0, pNewSeg=pNewSeg@entry=0x7fd59404b490, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x262a348, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x2628d00, 
            m_iCount = 140556030402704}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140555300015904}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 1000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x2628db0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fd5c0436090
        pNewSeg = {m_pPtr = 0x7fd59404b490}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x20 <Address 0x20 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fd7fc8aaad0, pIndex=0x2628db0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fd59404e920}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -58020480, 
              m_iMinInfixLen = 32727, m_iMaxSubstringLen = 40013232, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = -1069326192, 
              m_bIndexSP = 213, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd59404e920, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565631643008}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565631642688}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd61400ed10, m_iCount = 140556030402704}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 40013280}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fd59425f690 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 333, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fd7fc8aaad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fd5942a5e00: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fd5942619b0 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fd5c0436090, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x2628de0: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x267a200 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x270dfc8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x2714b78, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x262ae70, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fd5942a4140, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fd588342420, m_iCount = 1000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 1024}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd59406f200, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd5942a4030, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fd5942a40e0, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fd61400e3e8, sQuery=..., tOutput=..., uPacketID=@0x7fd61400f1a9: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fd7fc8ac160}
        tCrashQuery = {
          m_pQuery = 0x7fd59431d530 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 1411076, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = "\020found_rows_totalH{\"queries\":0, \"avg\":\"-\", \"min\":\"-\", \"max\":\"-\", \"pct95\":\"-\", \"pct99\":\"-\"}", '\000' <repeats 4005 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fd61400f1a9, m_tOut = @0x7fd7fc8aec70, m_iCID = 333, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fd59425f1c8, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fd61400f1a9: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fd614012b00) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fd59431d530 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 1411076, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fd61411aea0 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fd6142736a5 ".hkepc.com/forum/images/common/back.gif\\\" alt=\\\"\\\" /> </a> </font> </blockquote> </div> </td>  </tr>  </table>  </div> ','','XST7984983 XFR10101361','4bb003be3a.pid38700739','七彩小生','3ad49f940e"..., m_bError = false, m_iLen = 1411077}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fd5942bfbe0 "\030\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 40, m_sClientName = {m_sValue = 0x7fd5942fa210 "127.0.0.1:53484", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 333, m_iTid = 28035, m_tmConnect = 1580441021589288, m_tmStart = 1580441021607539, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fd7fccfece0, m_pNext = 0x7fd7fce12ce0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fd5949a8f10 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 2097152, m_iUsed = 1411076, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fd59431d530 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fd614015d80
#16 CSphThdPool::Tick (pArg=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x270e440
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x2630b50) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x2630b50
        pCleanup = <optimized out>
#18 0x00007fd802688e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fd800ea188d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 41 (Thread 0x7fd7fccff700 (LWP 28019)):
#0  GetUsedRam (this=0x0) at /root/manticore_gitlab/src/sphinxrt.cpp:214
No locals.
#1  RtIndex_c::GetUsedRam (this=this@entry=0x2628db0) at /root/manticore_gitlab/src/sphinxrt.cpp:1463
        pSeg = @0x2629360: {m_pPtr = 0x0}
        __for_range = @0x2629248: {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x2629258, 
            m_iCount = 295}, <sph::LazyStorage_T<CSphRefcountedPtr<RtSegment_t>, 512>> = {static iSTATICSIZE = 512, static is_constructed = <optimized out>, 
            static is_owned = <optimized out>, m_dData = {{m_pPtr = 0x7fd5e463a080}, {m_pPtr = 0x7fd5942fa0c0}, {m_pPtr = 0x7fd5a82104a0}, {m_pPtr = 0x7fd60868fef0}, {
                m_pPtr = 0x7fd5ac1153d0}, {m_pPtr = 0x7fd5b0266290}, {m_pPtr = 0x7fd5b49dca90}, {m_pPtr = 0x7fd5bc1c7110}, {m_pPtr = 0x7fd5f86e2770}, {
                m_pPtr = 0x7fd5b835ee50}, {m_pPtr = 0x7fd5fc55b230}, {m_pPtr = 0x7fd5f418b3a0}, {m_pPtr = 0x7fd588073460}, {m_pPtr = 0x7fd5801f6910}, {
                m_pPtr = 0x7fd5b4270be0}, {m_pPtr = 0x7fd5fc31a830}, {m_pPtr = 0x7fd5880601e0}, {m_pPtr = 0x7fd58c027740}, {m_pPtr = 0x7fd5a4571540}, {
                m_pPtr = 0x7fd5d40a9740}, {m_pPtr = 0x7fd608517150}, {m_pPtr = 0x7fd5ccf0f9e0}, {m_pPtr = 0x7fd5a0159810}, {m_pPtr = 0x7fd59c851dc0}, {
                m_pPtr = 0x7fd6282d7290}, {m_pPtr = 0x7fd5a0025ef0}, {m_pPtr = 0x7fd5b0a083f0}, {m_pPtr = 0x7fd5d82bc330}, {m_pPtr = 0x7fd598284800}, {
                m_pPtr = 0x7fd57409ea90}, {m_pPtr = 0x7fd5842f18e0}, {m_pPtr = 0x7fd604294c20}, {m_pPtr = 0x7fd594033db0}, {m_pPtr = 0x0} <repeats 51 times>, {
                m_pPtr = 0x7fd5bd7af0c0}, {m_pPtr = 0x7fd5c87039a0}, {m_pPtr = 0x7fd5fc435460}, {m_pPtr = 0x7fd6104045d0}, {m_pPtr = 0x7fd589b02b30}, {
                m_pPtr = 0x7fd5745cbfe0}, {m_pPtr = 0x7fd5e809fa00}, {m_pPtr = 0x7fd5b89e3c80}, {m_pPtr = 0x7fd628259aa0}, {m_pPtr = 0x7fd584533730}, {
                m_pPtr = 0x7fd6001f88a0}, {m_pPtr = 0x7fd5c42c1720}, {m_pPtr = 0x7fd5f52211a0}, {m_pPtr = 0x7fd5b5655040}, {m_pPtr = 0x7fd5f026c030}, {
                m_pPtr = 0x7fd6182cf460}, {m_pPtr = 0x7fd5ec3295a0}, {m_pPtr = 0x7fd5988f8dd0}, {m_pPtr = 0x7fd5d8670260}, {m_pPtr = 0x7fd594543610}, {
                m_pPtr = 0x7fd5f869a5c0}, {m_pPtr = 0x7fd5cc319530}, {m_pPtr = 0x7fd5a0020530}, {m_pPtr = 0x7fd60c30e360}, {m_pPtr = 0x7fd59ced75f0}, {
                m_pPtr = 0x7fd5af5e7aa0}, {m_pPtr = 0x7fd5a8201080}, {m_pPtr = 0x7fd5dc352f80}, {m_pPtr = 0x7fd5d4bca460}, {m_pPtr = 0x7fd5a7f2ad60}, {
                m_pPtr = 0x7fd59064d900}, {m_pPtr = 0x7fd5801d1950}, {m_pPtr = 0x7fd5b217e010}, {m_pPtr = 0x7fd57467cd50}, {m_pPtr = 0x7fd5c029bb30}, {
                m_pPtr = 0x7fd58b2e67b0}, {m_pPtr = 0x7fd57c3d6230}, {m_pPtr = 0x7fd5bc005ba0}, {m_pPtr = 0x7fd6087453a0}, {m_pPtr = 0x7fd5e023a5f0}, {
                m_pPtr = 0x7fd5d01d5f20}, {m_pPtr = 0x7fd5e84df360}, {m_pPtr = 0x7fd5d8534430}, {m_pPtr = 0x7fd5c85a4dc0}, {m_pPtr = 0x7fd6285533a0}, {
                m_pPtr = 0x7fd6001c5df0}, {m_pPtr = 0x7fd5b45795e0}, {m_pPtr = 0x7fd58c460730}, {m_pPtr = 0x7fd5fc774630}, {m_pPtr = 0x7fd5f01bb7d0}, {
                m_pPtr = 0x7fd5f411c4d0}, {m_pPtr = 0x7fd5844245f0}, {m_pPtr = 0x7fd6103ab890}, {m_pPtr = 0x7fd5e6ecc410}, {m_pPtr = 0x7fd5a0299660}, {
                m_pPtr = 0x7fd5b81a5430}, {m_pPtr = 0x7fd5ec33dc50}, {m_pPtr = 0x7fd59406f4c0}, {m_pPtr = 0x7fd5dc730ef0}, {m_pPtr = 0x7fd60c239180}, {
                m_pPtr = 0x7fd5ac102910}, {m_pPtr = 0x7fd5a4549040}, {m_pPtr = 0x7fd5a8223280}, {m_pPtr = 0x7fd618391800}, {m_pPtr = 0x7fd5cd1605a0}, {
                m_pPtr = 0x7fd5c41b5660}, {m_pPtr = 0x7fd582e01cc0}, {m_pPtr = 0x7fd5d49b1280}, {m_pPtr = 0x7fd5c859af80}, {m_pPtr = 0x7fd588044970}, {
                m_pPtr = 0x7fd5d021add0}, {m_pPtr = 0x7fd59811b050}, {m_pPtr = 0x7fd59cfeca50}, {m_pPtr = 0x7fd5c044e460}, {m_pPtr = 0x7fd5bc2168c0}, {
                m_pPtr = 0x7fd5f80056e0}, {m_pPtr = 0x7fd57c5612f0}, {m_pPtr = 0x7fd5e8501350}, {m_pPtr = 0x7fd58cc79400}, {m_pPtr = 0x7fd59040aa90}, {
                m_pPtr = 0x7fd5d85ac270}, {m_pPtr = 0x7fd5ff6021c0}, {m_pPtr = 0x7fd6086f8800}, {m_pPtr = 0x7fd5a8bd2f50}, {m_pPtr = 0x7fd5745e07e0}, {
                m_pPtr = 0x7fd6288abe90}, {m_pPtr = 0x7fd5e05e6400}, {m_pPtr = 0x7fd60034fc70}, {m_pPtr = 0x7fd5e7061070}, {m_pPtr = 0x7fd5a001b7f0}, {
                m_pPtr = 0x7fd59403e3c0}, {m_pPtr = 0x7fd5dc3a8b40}, {m_pPtr = 0x7fd58444ffa0}, {m_pPtr = 0x7fd5ec30e6b0}, {m_pPtr = 0x7fd60c231900}, {
                m_pPtr = 0x7fd5f594f490}, {m_pPtr = 0x7fd5f036d560}, {m_pPtr = 0x7fd5cc32d070}, {m_pPtr = 0x7fd5b4e7dc30}, {m_pPtr = 0x7fd5b0a56c00}, {
                m_pPtr = 0x7fd6105228d0}, {m_pPtr = 0x7fd5a7f38a70}, {m_pPtr = 0x7fd6188e7b10}, {m_pPtr = 0x7fd582deff20}, {m_pPtr = 0x7fd5c427c2c0}, {
                m_pPtr = 0x7fd5b8376d80}, {m_pPtr = 0x7fd59cc48250}, {m_pPtr = 0x7fd5d4715de0}, {m_pPtr = 0x7fd5c8223bc0}, {m_pPtr = 0x7fd5e8056340}, {
                m_pPtr = 0x7fd5ac126f20}, {m_pPtr = 0x7fd5d86b6060}, {m_pPtr = 0x7fd5f8f975b0}, {m_pPtr = 0x7fd5bd758a20}, {m_pPtr = 0x7fd5fdeecff0}, {
                m_pPtr = 0x7fd58c578ba0}, {m_pPtr = 0x7fd5d04edb10}, {m_pPtr = 0x7fd62851cd40}, {m_pPtr = 0x7fd590120cb0}, {m_pPtr = 0x7fd5e03064b0}, {
                m_pPtr = 0x7fd57c397300}, {m_pPtr = 0x7fd6003fb860}, {m_pPtr = 0x7fd5e7057650}, {m_pPtr = 0x7fd5982aa6e0}, {m_pPtr = 0x7fd5a8474bd0}, {
                m_pPtr = 0x7fd5ec6003c0}, {m_pPtr = 0x7fd5f034ef70}, {m_pPtr = 0x7fd6096e71f0}, {m_pPtr = 0x7fd57467c0e0}, {m_pPtr = 0x7fd5a01196a0}, {
                m_pPtr = 0x7fd589b579b0}, {m_pPtr = 0x7fd5f5337370}, {m_pPtr = 0x7fd61042a3a0}, {m_pPtr = 0x7fd5cd096310}, {m_pPtr = 0x7fd5a5f84c20}, {
                m_pPtr = 0x7fd5b0a2c120}, {m_pPtr = 0x7fd618390ff0}, {m_pPtr = 0x7fd5b9361fb0}, {m_pPtr = 0x7fd5b4a3dc80}, {m_pPtr = 0x7fd5dc4f29d0}, {
                m_pPtr = 0x7fd58444fc90}, {m_pPtr = 0x7fd5c42de320}, {m_pPtr = 0x7fd60c293ef0}, {m_pPtr = 0x7fd5d863e590}, {m_pPtr = 0x7fd580d6b400}, {
                m_pPtr = 0x7fd5ac693400}, {m_pPtr = 0x7fd5c84f4d40}, {m_pPtr = 0x7fd58cb042b0}, {m_pPtr = 0x7fd5e8533c00}, {m_pPtr = 0x7fd5f85ef700}, {
                m_pPtr = 0x7fd5d4bbda60}, {m_pPtr = 0x7fd590110d00}, {m_pPtr = 0x7fd5e03a7bf0}, {m_pPtr = 0x7fd59cc45fa0}, {m_pPtr = 0x7fd5d0281f60}, {
                m_pPtr = 0x7fd57c3ac9f0}, {m_pPtr = 0x7fd628459b20}...}}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 512}
        __for_begin = 0x2629360
        iTotal = 1074268380
#2  0x000000000082bb7c in RtIndex_c::GetStatus (this=0x2628db0, pRes=0x7fd7fccfb5b0) at /root/manticore_gitlab/src/sphinxrt.cpp:7865
        sError = {m_sValue = 0xffffffff <Address 0xffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        sFile = "\000\000\000\000\000\000\000\000\377\377\377\377", '\000' <repeats 36 times>, "\377\377\377\377", '\000' <repeats 36 times>, "\377\377\377\377\330\177\000\000\000\000\000\000\000\000\000\000\260\265\317\374\327\177\000\000\210>O\b\326\177\000\000\000\000\000\000\000\000\000\000\210>O\b\326\177\000\000\310\365\000\024\326\177\000\000\000\000\000\000\000\000\000\000@\265\317\374\327\177\000\000\000\000\000\000\000\000\000\000Ȫ]", '\000' <repeats 21 times>, "\210>O\b\326\177\000\000\310"...
        sFiles = {0x0, 0xffffffff <Address 0xffffffff out of bounds>}
        tDisk = {m_iRamUse = 0, m_iRamRetired = 0, m_iDiskUse = 0, m_iRamChunkSize = 0, m_iNumRamChunks = -1, m_iNumChunks = 91, m_iMemLimit = 0, m_iTID = 0, 
          m_iSavedTID = 0}
#3  0x000000000059ce5b in AddPlainIndexStatus (sPattern=..., sName=..., bModeFederated=<optimized out>, pServed=0x26cd910, tOut=...)
    at /root/manticore_gitlab/src/searchd.cpp:15942
        dStatus = {<sph::Vector_T<CSphString, sph::DefaultCopy_T<CSphString>, sph::DefaultRelimit, sph::DefaultStorage_T<CSphString> >> = {<VecTraits_T<CSphString>> = {
              m_pData = 0x7fd6084f6758, m_iCount = 6}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, <CheckLike> = {m_sPattern = {m_sValue = 0x0, 
              static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}}, m_sColKey = {m_sValue = 0x7fd6096e7470 "Variable_name", 
            static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_sColValue = {m_sValue = 0x7fd6096e7490 "Value", 
            static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}
        pFieldLens = <optimized out>
        tStatus = {m_iRamUse = 0, m_iRamRetired = 0, m_iDiskUse = 0, m_iRamChunkSize = 0, m_iNumRamChunks = 0, m_iNumChunks = 0, m_iMemLimit = 0, m_iTID = 0, 
          m_iSavedTID = 0}
        pLocked = {<ISphNoncopyable> = {<No data fields>}, m_pCore = 0x26cd920, m_pLock = <optimized out>}
        pIndex = 0x2628db0
#4  HandleMysqlShowIndexStatus (tOut=..., tStmt=..., bFederatedUser=<optimized out>) at /root/manticore_gitlab/src/searchd.cpp:16013
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        pServed = {m_pPtr = 0x26cd910}
        pIndex = <optimized out>
#5  0x00000000005fa875 in CSphinxqlSession::Execute (this=this@entry=0x7fd61400f5c8, sQuery=..., tOutput=..., uPacketID=@0x7fd614010389: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16902
        tCrashQuery = {m_pQuery = 0x7fd6087314d0 "show index rt status", m_iSize = 20, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_SHOW_INDEX_STATUS
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = "\020found_rows_totalH{\"queries\":0, \"avg\":\"-\", \"min\":\"-\", \"max\":\"-\", \"pct95\":\"-\", \"pct99\":\"-\"}", '\000' <repeats 4005 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fd614010389, m_tOut = @0x7fd7fccfec70, m_iCID = 367, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fd6084f3e88, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_SELECT_SYSVAR
#6  0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fd614010389: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bKeepProfile = true
#7  0x00000000005d522e in ThdJobQL_t::Call (this=0x7fd61400d160) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {m_pQuery = 0x7fd6087314d0 "show index rt status", m_iSize = 20, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, m_pBuf = 0x7fd6103ad6e0 "\003show index rt statusrsion_comment\021@@version_comment\f!", 
          m_pCur = 0x7fd6103ad6f5 "rsion_comment\021@@version_comment\f!", m_bError = false, m_iLen = 21}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fd60872f4c0 "\030\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 61, m_sClientName = {m_sValue = 0x7fd6096e7340 "127.0.0.1:53732", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9a1a43 "show_index_status", m_iConnID = 367, m_iTid = 28019, m_tmConnect = 1580441087804415, m_tmStart = 1580441087804438, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0xdab480 <g_dThd>, m_pNext = 0x7fd7fc8aece0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fd6096e7360 "show index rt status", m_iSize = 256, m_iUsed = 20, m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {m_sValue = 0x7fd6087314d0 "show index rt status", static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#8  0x00000000006fe010 in TickImpl (this=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fd61400d180
#9  CSphThdPool::Tick (pArg=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x270e440
#10 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x26cdc60) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x26cdc60
        pCleanup = <optimized out>
#11 0x00007fd802688e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#12 0x00007fd800ea188d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 40 (Thread 0x7fd7fc7e0700 (LWP 28038)):
#0  0x00007fd80268f50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fd80268ae5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fd80268ad28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x262a348) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x2628db0, pNewSeg=pNewSeg@entry=0x7fd5c09525a0, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x262a348, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x2628d00, 
            m_iCount = 140555757819344}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140556084565664}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 1000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x2628db0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fd5b00415d0
        pNewSeg = {m_pPtr = 0x7fd5c09525a0}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x20 <Address 0x20 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fd7fc7dbad0, pIndex=0x2628db0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fd5c37fa810}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -58868352, 
              m_iMinInfixLen = 32727, m_iMaxSubstringLen = 40013232, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = -1341909552, 
              m_bIndexSP = 213, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd5c37fa810, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565630795136}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565630794816}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd6200121c0, m_iCount = 140555757819344}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 40013280}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fd5c092e340 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 344, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fd7fc7dbad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fd5c03dcca0: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fd5c3819ed0 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fd5b00415d0, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x2628de0: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x267a200 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x270dfc8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x2714b78, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x262ae70, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fd5c03dcb70, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fd5a43cbc90, m_iCount = 1000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 1024}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd5c0930760, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd5c03dca60, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fd5c03dcb10, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fd620011898, sQuery=..., tOutput=..., uPacketID=@0x7fd620012659: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fd7fc7dd160}
        tCrashQuery = {
          m_pQuery = 0x7fd5c07ada70 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 1073272, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = "\020found_rows_totalH{\"queries\":0, \"avg\":\"-\", \"min\":\"-\", \"max\":\"-\", \"pct95\":\"-\", \"pct99\":\"-\"}", '\000' <repeats 4005 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fd620012659, m_tOut = @0x7fd7fc7dfc70, m_iCID = 319, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fd5c092de78, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fd620012659: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fd62000ac30) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fd5c07ada70 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 1073272, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fd62041aec0 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fd620520f39 "\247\214냥장터] 스타벅스 에코백( 레드) 판매합니다','저','','XST670107556 XFR427466569','5d5aa79f2.47465083','ju02','d612f2658d72db21294fda4459a5d427 200b0e6895e993c29dd09dc74bce1772 4d236d"..., m_bError = false, m_iLen = 1073273}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fd5c00b93c0 "(\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 47, m_sClientName = {m_sValue = 0x7fd5c3819e90 "127.0.0.1:53388", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 319, m_iTid = 28038, m_tmConnect = 1580441021496247, m_tmStart = 1580441021511085, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fd7fc9c2ce0, m_pNext = 0x7fd7fc641ce0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fd508022460 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 2097152, m_iUsed = 1073272, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fd5c07ada70 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fd62061aed0
#16 CSphThdPool::Tick (pArg=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x270e440
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x2796380) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x2796380
        pCleanup = <optimized out>
#18 0x00007fd802688e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fd800ea188d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 39 (Thread 0x7fd7fcad7700 (LWP 28027)):
#0  0x00007fd80268f50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fd80268ae5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fd80268ad28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x262a348) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x2628db0, pNewSeg=pNewSeg@entry=0x7fd58430e4b0, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x262a348, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x2628d00, 
            m_iCount = 140555961225280}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140555027859904}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 1000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x2628db0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fd5bc23d040
        pNewSeg = {m_pPtr = 0x7fd58430e4b0}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x30 <Address 0x30 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fd7fcad2ad0, pIndex=0x2628db0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fd584557140}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -55759488, 
              m_iMinInfixLen = 32727, m_iMaxSubstringLen = 40013232, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = -1138503616, 
              m_bIndexSP = 213, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd584557140, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565633904000}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565633903680}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd614e1dcf0, m_iCount = 140555961225280}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 40013280}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fd5842edb10 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 987, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fd7fcad2ad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fd584378b60: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fd58444ff60 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fd5bc23d040, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x2628de0: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x267a200 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x270dfc8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x2714b78, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x262ae70, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fd584375900, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fd60046a2e0, m_iCount = 1000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 1024}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd5842efe90, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd5843757f0, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fd5843758a0, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fd614e1d3c8, sQuery=..., tOutput=..., uPacketID=@0x7fd614e1e189: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fd7fcad4160}
        tCrashQuery = {
          m_pQuery = 0x7fd5840008c0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 1139897, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = "\020found_rows_totalH{\"queries\":0, \"avg\":\"-\", \"min\":\"-\", \"max\":\"-\", \"pct95\":\"-\", \"pct99\":\"-\"}", '\000' <repeats 4005 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fd614e1e189, m_tOut = @0x7fd7fcad6c70, m_iCID = 326, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fd5842ed648, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fd614e1e189: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fd614013d40) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fd5840008c0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 1139897, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fd61489c0e0 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fd6149b259a "ww.ppomppu.co.kr/zboard/view.php?id=faq&no=42\\\" target=\\\"capture_info\\\" /> </map> <table border=0 cellspacing=0 cellpadding=0 width=100%  style=\\\"table-layout:fixed;\\\" align=left>  <tr>  <td class=\\'b"..., m_bError = false, m_iLen = 1139898}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fd5843d34e0 "(\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 55, m_sClientName = {m_sValue = 0x7fd5842d1a30 "127.0.0.1:53432", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 326, m_iTid = 28027, m_tmConnect = 1580441021327664, m_tmStart = 1580441021343009, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fd7fc52dce0, m_pNext = 0x7fd80294bce0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fd5845bba90 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 2097152, m_iUsed = 1139897, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fd5840008c0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fd614019780
#16 CSphThdPool::Tick (pArg=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x270e440
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x262a740) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x262a740
        pCleanup = <optimized out>
#18 0x00007fd802688e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fd800ea188d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 38 (Thread 0x7fd802a9c700 (LWP 28007)):
#0  0x00007fd80268cda2 in pthread_cond_timedwait@@GLIBC_2.3.2 () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00000000006fa286 in AutoEvent_T<true>::WaitEvent (this=this@entry=0xda1100 <LazyTasker()::dEvents+128>, iMsec=iMsec@entry=1799899)
    at /root/manticore_gitlab/src/sphinxstd.cpp:1414
        ts = {tv_sec = 1580441979, tv_nsec = 576598286}
        ns = <optimized out>
        iRes = 0
        bEventHappened = <optimized out>
#2  0x000000000062983a in EventTick (this=<optimized out>) at /root/manticore_gitlab/src/searchdtask.cpp:510
        iMsec = 1799899
#3  EventLoop (this=0xda1080 <LazyTasker()::dEvents>) at /root/manticore_gitlab/src/searchdtask.cpp:450
No locals.
#4  LazyJobs_c::WorkerFunc (pArg=0xda1080 <LazyTasker()::dEvents>) at /root/manticore_gitlab/src/searchdtask.cpp:579
        thLazy = {m_tRoleRef = @0xda1040}
        pThis = 0xda1080 <LazyTasker()::dEvents>
#5  0x00000000006f9735 in sphThreadProcWrapper (pArg=0x2612910) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x2612910
        pCleanup = <optimized out>
#6  0x00007fd802688e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#7  0x00007fd800ea188d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 37 (Thread 0x7fd7fca08700 (LWP 28030)):
#0  0x00007fd80268c9f5 in pthread_cond_wait@@GLIBC_2.3.2 () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00000000006fa1ab in AutoEvent_T<false>::WaitEvent (this=this@entry=0x270e448, iMsec=iMsec@entry=-1) at /root/manticore_gitlab/src/sphinxstd.cpp:1358
        ts = {tv_sec = 140557435326976, tv_nsec = 40952896}
        ns = <optimized out>
        iRes = <optimized out>
        bEventHappened = <optimized out>
#2  0x00000000006fdf9f in TickImpl (this=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2028
        pJob = <optimized out>
#3  CSphThdPool::Tick (pArg=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x270e440
#4  0x00000000006f9735 in sphThreadProcWrapper (pArg=0x2709b60) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x2709b60
        pCleanup = <optimized out>
#5  0x00007fd802688e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#6  0x00007fd800ea188d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 36 (Thread 0x7fd7fc5b8700 (LWP 28046)):
#0  0x00007fd80268f50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fd80268ae5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fd80268ad28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x262a348) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x2628db0, pNewSeg=pNewSeg@entry=0x7fd5d4ce2e30, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x262a348, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x2628d00, 
            m_iCount = 140556832906976}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140556368510784}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 1000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x2628db0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fd5f0189ee0
        pNewSeg = {m_pPtr = 0x7fd5d4ce2e30}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x120 <Address 0x120 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fd7fc5b3ad0, pIndex=0x2628db0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fd5d4bab1c0}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -61129344, 
              m_iMinInfixLen = 32727, m_iMaxSubstringLen = 40013232, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = -266821920, 
              m_bIndexSP = 213, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd5d4bab1c0, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565628534144}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565628533824}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd614013490, m_iCount = 140556832906976}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 40013280}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fd5d4bad4e0 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 574, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fd7fc5b3ad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fd5d4f759b0: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fd5d464c760 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fd5f0189ee0, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x2628de0: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x267a200 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x270dfc8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x2714b78, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x262ae70, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fd5d4ba8610, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fd5e03024f0, m_iCount = 1000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 1024}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd5d4771180, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd5d4ba8500, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fd5d4ba85b0, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fd614012b68, sQuery=..., tOutput=..., uPacketID=@0x7fd614013929: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fd7fc5b5160}
        tCrashQuery = {
          m_pQuery = 0x7fd5d489bf30 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 989397, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = "\000found_rows_totalH{\"queries\":0, \"avg\":\"-\", \"min\":\"-\", \"max\":\"-\", \"pct95\":\"-\", \"pct99\":\"-\"}", '\000' <repeats 4005 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fd614013929, m_tOut = @0x7fd7fc5b7c70, m_iCID = 318, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fd5d4bad018, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fd614013929: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fd6140173a0) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fd5d489bf30 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 989397, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fd614e9bda0 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fd614f8d676 "6822437,752730648,0,0,203952,739871,0,0,1566948500,1566234540,1566948411,(0),'RE: 카플레이','차량이 G05라면 조금 기다리셔야 할겁니다. F바디시면 https://fscmap.com 이곳통", <incomplete sequence \354>..., m_bError = false, m_iLen = 989398}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fd5d40008c0 "\030\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 45, m_sClientName = {m_sValue = 0x7fd5d4606d10 "127.0.0.1:53384", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 318, m_iTid = 28046, m_tmConnect = 1580441021284021, m_tmStart = 1580441021297677, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fd80294bce0, m_pNext = 0x7fd7fcc74ce0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fd5d5e83ea0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 1048576, m_iUsed = 989397, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fd5d489bf30 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fd6140197c0
#16 CSphThdPool::Tick (pArg=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x270e440
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x2699910) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x2699910
        pCleanup = <optimized out>
#18 0x00007fd802688e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fd800ea188d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 35 (Thread 0x7fd7fcb61700 (LWP 28025)):
#0  0x00007fd80268c9f5 in pthread_cond_wait@@GLIBC_2.3.2 () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00000000006fa1ab in AutoEvent_T<false>::WaitEvent (this=this@entry=0x270e448, iMsec=iMsec@entry=-1) at /root/manticore_gitlab/src/sphinxstd.cpp:1358
        ts = {tv_sec = 140557435326976, tv_nsec = 40952896}
        ns = <optimized out>
        iRes = <optimized out>
        bEventHappened = <optimized out>
#2  0x00000000006fdf9f in TickImpl (this=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2028
        pJob = <optimized out>
#3  CSphThdPool::Tick (pArg=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x270e440
#4  0x00000000006f9735 in sphThreadProcWrapper (pArg=0x262a6e0) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x262a6e0
        pCleanup = <optimized out>
#5  0x00007fd802688e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#6  0x00007fd800ea188d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 34 (Thread 0x7fd7fc52e700 (LWP 28048)):
#0  0x00007fd80268f50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fd80268ae5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fd80268ad28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x262a348) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x2628db0, pNewSeg=pNewSeg@entry=0x7fd5b899d340, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x262a348, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x2628d00, 
            m_iCount = 140555561843152}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140555893253344}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 1000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x2628db0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fd5a455b9d0
        pNewSeg = {m_pPtr = 0x7fd5b899d340}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x30 <Address 0x30 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fd7fc529ad0, pIndex=0x2628db0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fd5b899fea0}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -61694592, 
              m_iMinInfixLen = 32727, m_iMaxSubstringLen = 40013232, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = -1537885744, 
              m_bIndexSP = 213, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd5b899fea0, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565627968896}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565627968576}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd61591c780, m_iCount = 140555561843152}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 40013280}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fd5b82e21b0 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 396, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fd7fc529ad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fd5b89a1df0: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fd5b8044650 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fd5a455b9d0, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x2628de0: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x267a200 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x270dfc8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x2714b78, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x262ae70, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fd5b899d2f0, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fd5f58f8910, m_iCount = 1000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 1024}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd5b80a37c0, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd5b899d1e0, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fd5b899d290, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fd61591be58, sQuery=..., tOutput=..., uPacketID=@0x7fd61591cc19: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fd7fc52b160}
        tCrashQuery = {
          m_pQuery = 0x7fd5b8b2c060 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 1324420, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = "\020found_rows_totalH{\"queries\":0, \"avg\":\"-\", \"min\":\"-\", \"max\":\"-\", \"pct95\":\"-\", \"pct99\":\"-\"}", '\000' <repeats 4005 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fd61591cc19, m_tOut = @0x7fd7fc52dc70, m_iCID = 323, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fd5b82e1ce8, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fd61591cc19: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fd61400ad80) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fd5b8b2c060 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 1324420, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fd61561be00 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fd61575f385 "967779,1566982111,1566967715,(225),'RE: Donald Trump Received Loans Co-Signed By Russian Billionaires, Says Source Close To Deutsche Bank','<div class=\\\"md\\\"> <p> Yawn.</p>  </div> ','','XST8603121 XF"..., m_bError = false, m_iLen = 1324421}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fd5b89cb300 "8\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 39, m_sClientName = {m_sValue = 0x7fd5b81c2ef0 "127.0.0.1:53406", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 323, m_iTid = 28048, m_tmConnect = 1580441021356369, m_tmStart = 1580441021373859, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fd7fca91ce0, m_pNext = 0x7fd7fcad6ce0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fd5bafd6950 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 2097152, m_iUsed = 1324420, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fd5b8b2c060 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fd6140185a0
#16 CSphThdPool::Tick (pArg=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x270e440
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x2699970) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x2699970
        pCleanup = <optimized out>
#18 0x00007fd802688e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fd800ea188d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 33 (Thread 0x7fd7fc687700 (LWP 28043)):
#0  0x00007fd80268f50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fd80268ae5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fd80268ad28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x262a348) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x2628db0, pNewSeg=pNewSeg@entry=0x7fd5b44aa810, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x262a348, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x2628d00, 
            m_iCount = 140556028901216}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140555848077712}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 1000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x2628db0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fd5c02c7760
        pNewSeg = {m_pPtr = 0x7fd5b44aa810}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x20 <Address 0x20 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fd7fc682ad0, pIndex=0x2628db0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fd5b48031a0}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -60281472, 
              m_iMinInfixLen = 32727, m_iMaxSubstringLen = 40013232, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = -1070827680, 
              m_bIndexSP = 213, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd5b48031a0, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565629382016}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565629381696}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd61c00b790, m_iCount = 140556028901216}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 40013280}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fd5b4839b60 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 244, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fd7fc682ad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fd5b4a3db20: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fd5b4dfe590 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fd5c02c7760, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x2628de0: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x267a200 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x270dfc8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x2714b78, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x262ae70, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fd5b47fd400, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fd5c85d5ab0, m_iCount = 1000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 1024}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd5b49fb020, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd5b47fd2f0, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fd5b47fd3a0, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fd61c00ae68, sQuery=..., tOutput=..., uPacketID=@0x7fd61c00bc29: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fd7fc684160}
        tCrashQuery = {
          m_pQuery = 0x7fd5b45dea90 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 1782756, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = "\000found_rows_totalH{\"queries\":0, \"avg\":\"-\", \"min\":\"-\", \"max\":\"-\", \"pct95\":\"-\", \"pct99\":\"-\"}", '\000' <repeats 4005 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fd61c00bc29, m_tOut = @0x7fd7fc686c70, m_iCID = 302, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fd5b4839698, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fd61c00bc29: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fd61c014f10) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fd5b45dea90 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 1782756, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fd61c41aec0 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fd61c5ce2a5 "맞추고 합배송으로 직배 주문했는데요.</p>  <p> &nbsp;</p>  <p> 방금 쉬핑 떠서 확인해 보니 스피커만 발송됐고 같이 합배송 시킨 잡다한 물건은 아직 배", <incomplete sequence \354>..., m_bError = false, m_iLen = 1782757}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fd5b49f9010 "(\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 31, m_sClientName = {m_sValue = 0x7fd5b49db470 "127.0.0.1:53338", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 302, m_iTid = 28043, m_tmConnect = 1580441021075158, m_tmStart = 1580441021097175, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fd802990ce0, m_pNext = 0x7fd7fce9cce0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fd5b40008c0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 2097152, m_iUsed = 1782756, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fd5b45dea90 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fd61c009c20
#16 CSphThdPool::Tick (pArg=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x270e440
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x2699880) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x2699880
        pCleanup = <optimized out>
#18 0x00007fd802688e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fd800ea188d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 32 (Thread 0x7fd7fc5fd700 (LWP 28045)):
#0  0x00007fd80268c9f5 in pthread_cond_wait@@GLIBC_2.3.2 () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00000000006fa1ab in AutoEvent_T<false>::WaitEvent (this=this@entry=0x270e448, iMsec=iMsec@entry=-1) at /root/manticore_gitlab/src/sphinxstd.cpp:1358
        ts = {tv_sec = 0, tv_nsec = 40952896}
        ns = <optimized out>
        iRes = <optimized out>
        bEventHappened = <optimized out>
#2  0x00000000006fdf9f in TickImpl (this=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2028
        pJob = <optimized out>
#3  CSphThdPool::Tick (pArg=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x270e440
#4  0x00000000006f9735 in sphThreadProcWrapper (pArg=0x26998e0) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x26998e0
        pCleanup = <optimized out>
#5  0x00007fd802688e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#6  0x00007fd800ea188d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 31 (Thread 0x7fd7fcc75700 (LWP 28021)):
#0  0x00007fd80268f50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fd80268ae5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fd80268ad28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x262a348) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x2628db0, pNewSeg=pNewSeg@entry=0x7fd5fc463bf0, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x262a348, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x2628d00, 
            m_iCount = 140557002158128}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140557036968176}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 1000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x2628db0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fd5fa2f3030
        pNewSeg = {m_pPtr = 0x7fd5fc463bf0}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x20 <Address 0x20 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fd7fcc70ad0, pIndex=0x2628db0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fd5fc46a4c0}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -54063744, 
              m_iMinInfixLen = 32727, m_iMaxSubstringLen = 40013232, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = -97570768, 
              m_bIndexSP = 213, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd5fc46a4c0, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565635599744}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565635599424}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd62000c970, m_iCount = 140557002158128}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 40013280}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fd5fc55b850 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 1036, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fd7fcc70ad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fd5fc4352b0: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fd5ff602130 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fd5fa2f3030, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x2628de0: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x267a200 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x270dfc8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x2714b78, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x262ae70, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fd5fc7acae0, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fd5909f4ca0, m_iCount = 1000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 1024}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd5fc6c3520, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd5fc7a9e20, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fd5fc7a9ed0, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fd62000c048, sQuery=..., tOutput=..., uPacketID=@0x7fd62000ce09: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fd7fcc72160}
        tCrashQuery = {
          m_pQuery = 0x7fd5fc31a980 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 1090488, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = "\000found_rows_totalH{\"queries\":0, \"avg\":\"-\", \"min\":\"-\", \"max\":\"-\", \"pct95\":\"-\", \"pct99\":\"-\"}", '\000' <repeats 4005 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fd62000ce09, m_tOut = @0x7fd7fcc74c70, m_iCID = 320, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fd5fc55b388, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fd62000ce09: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fd620012a70) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fd5fc31a980 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 1090488, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fd62021aeb0 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fd620325269 "aLayer.push({\\'event\\': \\'trackEvent\\',\\'eventDetails.category\\': \\'outbond\\', \\'eventDetails.action\\': \\'click\\', \\'eventDetails.label\\': \\'https://www.bengkulutoday.com/cabuli-ponakan-sendiri-oknum-"..., m_bError = false, m_iLen = 1090489}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fd5fcf63100 "\030\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 32, m_sClientName = {m_sValue = 0x7fd5ff6457f0 "127.0.0.1:53390", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 320, m_iTid = 28021, m_tmConnect = 1580441021258802, m_tmStart = 1580441021273400, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fd7fc5b7ce0, m_pNext = 0x7fd7fc755ce0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fd5fc0008c0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 2097152, m_iUsed = 1090488, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fd5fc31a980 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fd620009be0
#16 CSphThdPool::Tick (pArg=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x270e440
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x262aee0) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x262aee0
        pCleanup = <optimized out>
#18 0x00007fd802688e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fd800ea188d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 30 (Thread 0x7fd7fc45f700 (LWP 28051)):
#0  0x00007fd800ea1e63 in epoll_wait () from /lib64/libc.so.6
No symbol table info available.
#1  0x000000000060535e in EpollEvents_c::Wait (this=0x7fd61c0008c0, timeoutMs=<optimized out>) at /root/manticore_gitlab/src/searchdha.cpp:3998
        timeoutMs = <optimized out>
        this = 0x7fd61c0008c0
#2  0x00000000005e18fb in CSphNetLoop::LoopNetPoll (this=this@entry=0x7fd7fc45ecf0) at /root/manticore_gitlab/src/searchd.cpp:20578
        bGot = <optimized out>
        iGotEvents = <optimized out>
        iConnections = 0
        dCleanup = {<VecTraits_T<ISphNetAction*>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<ISphNetAction*>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        tmNow = <optimized out>
        iSpinWait = <optimized out>
        iMaxIters = <optimized out>
        dWorkNext = {<VecTraits_T<ISphNetAction*>> = {m_pData = 0x7fd61c005ba0, m_iCount = 0}, <sph::DefaultStorage_T<ISphNetAction*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 1024}
        tmLastWait = 1580441087803993
#3  0x00000000005e23a9 in CSphNetLoop::ThdLoop () at /root/manticore_gitlab/src/searchd.cpp:20738
        tQueryTLS = {m_pQuery = 0x0, m_iSize = 0, m_uCMD = 0, m_uVer = 0, m_bMySQL = false, m_bHttp = false, m_pIndex = 0x0, m_iIndexLen = 0}
        tLoop = {m_uTick = 5000, m_dWorkExternal = {<VecTraits_T<ISphNetAction*>> = {m_pData = 0x7fd61c003b90, m_iCount = 0}, <sph::DefaultStorage_T<ISphNetAction*>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 1024}, 
          m_bGotExternal = false, m_pWakeupExternal = 0x7fd61c003960, m_tExtLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutex = {__data = {__lock = 0, 
                __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_tPrf = {m_bEnable = false, m_tmTotal = 0, m_iPerfEv = 5003, m_iPerfNext = 0, m_iPerfExt = 1, 
            m_iPerfClean = 1}, m_pPoll = 0x7fd61c0008c0, m_pShutdownCookie = 0x7fd61c0039f0}
#4  0x00000000006f9735 in sphThreadProcWrapper (pArg=0x2630c10) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x2630c10
        pCleanup = <optimized out>
#5  0x00007fd802688e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#6  0x00007fd800ea188d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 29 (Thread 0x7fd7fc41a700 (LWP 28052)):
#0  0x00007fd800ea1e63 in epoll_wait () from /lib64/libc.so.6
No symbol table info available.
#1  0x000000000060535e in EpollEvents_c::Wait (this=0x7fd6140008c0, timeoutMs=<optimized out>) at /root/manticore_gitlab/src/searchdha.cpp:3998
        timeoutMs = <optimized out>
        this = 0x7fd6140008c0
#2  0x00000000005e18fb in CSphNetLoop::LoopNetPoll (this=this@entry=0x7fd7fc419cf0) at /root/manticore_gitlab/src/searchd.cpp:20578
        bGot = <optimized out>
        iGotEvents = <optimized out>
        iConnections = 0
        dCleanup = {<VecTraits_T<ISphNetAction*>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<ISphNetAction*>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        tmNow = <optimized out>
        iSpinWait = <optimized out>
        iMaxIters = <optimized out>
        dWorkNext = {<VecTraits_T<ISphNetAction*>> = {m_pData = 0x7fd614003b90, m_iCount = 0}, <sph::DefaultStorage_T<ISphNetAction*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 1024}
        tmLastWait = 1580441087804396
#3  0x00000000005e23a9 in CSphNetLoop::ThdLoop () at /root/manticore_gitlab/src/searchd.cpp:20738
        tQueryTLS = {m_pQuery = 0x0, m_iSize = 0, m_uCMD = 0, m_uVer = 0, m_bMySQL = false, m_bHttp = false, m_pIndex = 0x0, m_iIndexLen = 0}
        tLoop = {m_uTick = 8633, m_dWorkExternal = {<VecTraits_T<ISphNetAction*>> = {m_pData = 0x7fd614005ba0, m_iCount = 0}, <sph::DefaultStorage_T<ISphNetAction*>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 1024}, 
          m_bGotExternal = false, m_pWakeupExternal = 0x7fd614003960, m_tExtLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutex = {__data = {__lock = 0, 
                __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_tPrf = {m_bEnable = false, m_tmTotal = 0, m_iPerfEv = 8646, m_iPerfNext = 0, m_iPerfExt = 1, 
            m_iPerfClean = 1}, m_pPoll = 0x7fd6140008c0, m_pShutdownCookie = 0x7fd6140039f0}
#4  0x00000000006f9735 in sphThreadProcWrapper (pArg=0x2630b80) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x2630b80
        pCleanup = <optimized out>
#5  0x00007fd802688e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#6  0x00007fd800ea188d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 28 (Thread 0x7fd7fc642700 (LWP 28044)):
#0  0x00007fd80268f50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fd80268ae5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fd80268ad28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x262a348) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x2628db0, pNewSeg=pNewSeg@entry=0x7fd5e0061000, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x262a348, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x2628d00, 
            m_iCount = 140556434840048}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140556563006960}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 1000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x2628db0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fd5d85e99f0
        pNewSeg = {m_pPtr = 0x7fd5e0061000}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x20 <Address 0x20 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fd7fc63dad0, pIndex=0x2628db0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fd5e0c4ebd0}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -60564096, 
              m_iMinInfixLen = 32727, m_iMaxSubstringLen = 40013232, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = -664888848, 
              m_bIndexSP = 213, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd5e0c4ebd0, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565629099392}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565629099072}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd62000b7b0, m_iCount = 140556434840048}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 40013280}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fd5e05e6a20 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 619, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fd7fc63dad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fd5e020b130: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fd5e05e8cc0 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fd5d85e99f0, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x2628de0: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x267a200 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x270dfc8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x2714b78, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x262ae70, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fd5e020b430, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fd57c031d40, m_iCount = 1000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 1024}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd5e023a840, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd5e020a780, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fd5e020a830, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fd62000ae88, sQuery=..., tOutput=..., uPacketID=@0x7fd62000bc49: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fd7fc63f160}
        tCrashQuery = {
          m_pQuery = 0x7fd5e0a19830 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 1192682, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = "\020found_rows_totalH{\"queries\":0, \"avg\":\"-\", \"min\":\"-\", \"max\":\"-\", \"pct95\":\"-\", \"pct99\":\"-\"}", '\000' <repeats 4005 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fd62000bc49, m_tOut = @0x7fd7fc641c70, m_iCID = 317, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fd5e05e6558, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fd62000bc49: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fd620012ab0) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fd5e0a19830 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 1192682, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fd620d1af50 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fd620e3e23b "berts-sports-picks-football-cards.html\\\" class=\\\"postlink\\\"> greg roberts sports picks football cards</a> <br /> <a href=\\\"http://fixedmatchesonline.ml/statarea-fixed-matches-correct-score/44552-wild-"..., m_bError = false, m_iLen = 1192683}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fd5e05e05f0 "\030\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 43, m_sClientName = {m_sValue = 0x7fd5e023a740 "127.0.0.1:53382", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 317, m_iTid = 28044, m_tmConnect = 1580441021473525, m_tmStart = 1580441021489514, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fd7fc7dfce0, m_pNext = 0x7fd7fcd88ce0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fd5e0c9bc10 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 2097152, m_iUsed = 1192682, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fd5e0a19830 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fd620010700
#16 CSphThdPool::Tick (pArg=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x270e440
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x26998b0) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x26998b0
        pCleanup = <optimized out>
#18 0x00007fd802688e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fd800ea188d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 27 (Thread 0x7fd7fc756700 (LWP 28040)):
#0  0x00007fd80268f50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fd80268ae5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fd80268ad28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x262a348) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x2628db0, pNewSeg=pNewSeg@entry=0x7fd5a82f7390, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x262a348, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x2628d00, 
            m_iCount = 140555892049680}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140555624639264}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 1000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x2628db0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fd5b8044710
        pNewSeg = {m_pPtr = 0x7fd5a82f7390}
        bOk = <optimized out>
        sWarning = {m_sValue = 0xea0 <Address 0xea0 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fd7fc751ad0, pIndex=0x2628db0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fd5a8c4f3e0}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -59433600, 
              m_iMinInfixLen = 32727, m_iMaxSubstringLen = 40013232, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = -1207679216, 
              m_bIndexSP = 213, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd5a8c4f3e0, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565630229888}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565630229568}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd6140122b0, m_iCount = 140555892049680}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 40013280}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fd5a8e49790 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 318, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fd7fc751ad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fd5a81cfc90: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fd5a8be5940 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fd5b8044710, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x2628de0: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x267a200 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x270dfc8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x2714b78, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x262ae70, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fd5a81cfb60, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fd59cfe16e0, m_iCount = 1000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 1024}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd5a8e4ba70, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd5a81cfa50, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fd5a81cfb00, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fd614011988, sQuery=..., tOutput=..., uPacketID=@0x7fd614012749: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fd7fc753160}
        tCrashQuery = {
          m_pQuery = 0x7fd5a8d1ac00 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 802120, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = "\000found_rows_totalH{\"queries\":0, \"avg\":\"-\", \"min\":\"-\", \"max\":\"-\", \"pct95\":\"-\", \"pct99\":\"-\"}", '\000' <repeats 4005 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fd614012749, m_tOut = @0x7fd7fc755c70, m_iCID = 312, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fd5a8e492c8, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fd614012749: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fd614015dc0) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fd5a8d1ac00 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 802120, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fd61461aee0 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fd6146dec29 "con/set08_04.png\\\" /> <br />  </p> ','','XST9765071 XFR443010348','5504fb9415.4391807','뉴캐슬','5396a90b72b0ccd288e8eae42a258024 af270b0a2fdd9d17104e65ed38c85b17 6f11e86a6e92ce565aa629f732d89dd7 d"..., m_bError = false, m_iLen = 802121}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fd5a8221210 "\030\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 57, m_sClientName = {m_sValue = 0x7fd5a8310c00 "127.0.0.1:53370", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 312, m_iTid = 28040, m_tmConnect = 1580441021216676, m_tmStart = 1580441021228421, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fd7fcc74ce0, m_pNext = 0x7fd7fc97dce0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fd5a80008c0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 1048576, m_iUsed = 802120, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fd5a8d1ac00 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fd614e1d340
#16 CSphThdPool::Tick (pArg=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x270e440
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x27963e0) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x27963e0
        pCleanup = <optimized out>
#18 0x00007fd802688e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fd800ea188d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 26 (Thread 0x7fd7fcba6700 (LWP 28024)):
#0  0x00007fd80268f50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fd80268ae5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fd80268ad28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x262a348) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x2628db0, pNewSeg=pNewSeg@entry=0x7fd600312ff0, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x262a348, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x2628d00, 
            m_iCount = 140555356003008}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140557100674624}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 1000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x2628db0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fd59810dac0
        pNewSeg = {m_pPtr = 0x7fd600312ff0}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x30 <Address 0x30 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fd7fcba1ad0, pIndex=0x2628db0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fd60025eff0}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -54911616, 
              m_iMinInfixLen = 32727, m_iMaxSubstringLen = 40013232, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = -1743725888, 
              m_bIndexSP = 213, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd60025eff0, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565634751872}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565634751552}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd61c015a70, m_iCount = 140555356003008}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 40013280}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fd600455440 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 350, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fd7fcba1ad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fd600047f90: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fd6004602d0 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fd59810dac0, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x2628de0: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x267a200 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x270dfc8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x2714b78, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x262ae70, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fd6002597d0, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fd5c00b73b0, m_iCount = 1000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 1024}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd600457860, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd6002596c0, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fd600259770, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fd61c015148, sQuery=..., tOutput=..., uPacketID=@0x7fd61c015f09: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fd7fcba3160}
        tCrashQuery = {
          m_pQuery = 0x7fd6004af1d0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 960045, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = "\000found_rows_totalH{\"queries\":0, \"avg\":\"-\", \"min\":\"-\", \"max\":\"-\", \"pct95\":\"-\", \"pct99\":\"-\"}", '\000' <repeats 4005 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fd61c015f09, m_tOut = @0x7fd7fcba5c70, m_iCID = 305, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fd600454f78, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fd61c015f09: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fd61c009be0) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fd6004af1d0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 960045, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fd61c01ae90 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fd61c1054be ",0,1495560172,1485649020,1566816687,(0),'RE: 鳳凰','<p class=\\\"comReplyTo\\\"> <a href=\\\"https://finance.yahoo.co.jp/cm/message/1160004548/b6ada5bab1beec4c000b250342c8a627/1/2776\\\" data-parent_comment"..., m_bError = false, m_iLen = 960046}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fd60048e7f0 "H\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 46, m_sClientName = {m_sValue = 0x7fd60048d210 "127.0.0.1:53348", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 305, m_iTid = 28024, m_tmConnect = 1580441021392128, m_tmStart = 1580441021410176, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fd7fcee1ce0, m_pNext = 0x7fd7fc869ce0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fd6008450f0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 1048576, m_iUsed = 960045, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fd6004af1d0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fd61c009c00
#16 CSphThdPool::Tick (pArg=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x270e440
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x262af70) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x262af70
        pCleanup = <optimized out>
#18 0x00007fd802688e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fd800ea188d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 25 (Thread 0x7fd7fc6cc700 (LWP 28042)):
#0  0x00007fd80268f50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fd80268ae5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fd80268ad28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x262a348) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x2628db0, pNewSeg=pNewSeg@entry=0x7fd5b25b34c0, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x262a348, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x2628d00, 
            m_iCount = 140556165575200}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140555768393040}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 1000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x2628db0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fd5c851f220
        pNewSeg = {m_pPtr = 0x7fd5b25b34c0}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x20 <Address 0x20 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fd7fc6c7ad0, pIndex=0x2628db0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fd5b2343650}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -59998848, 
              m_iMinInfixLen = 32727, m_iMaxSubstringLen = 40013232, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = -934153696, 
              m_bIndexSP = 213, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd5b2343650, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565629664640}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565629664320}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd62000ecf0, m_iCount = 140556165575200}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 40013280}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fd5b0263680 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 287, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fd7fc6c7ad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fd5b23467c0: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fd5b0016990 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fd5c851f220, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x2628de0: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x267a200 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x270dfc8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x2714b78, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x262ae70, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fd5b2340aa0, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fd5f867f710, m_iCount = 1000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 1024}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd5b03c1340, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd5b2340990, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fd5b2340a40, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fd62000e3c8, sQuery=..., tOutput=..., uPacketID=@0x7fd62000f189: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fd7fc6c9160}
        tCrashQuery = {
          m_pQuery = 0x7fd5b08daf00 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 1210849, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = "\020found_rows_totalH{\"queries\":0, \"avg\":\"-\", \"min\":\"-\", \"max\":\"-\", \"pct95\":\"-\", \"pct99\":\"-\"}", '\000' <repeats 4005 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fd62000f189, m_tOut = @0x7fd7fc6cbc70, m_iCID = 335, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fd5b02631b8, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fd62000f189: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fd620013d00) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fd5b08daf00 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 1210849, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fd62091af20 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fd620a42902 "rink.gif\\\" alt=\\\"drink\\\"> <br> </div> ','','XST666452744 XFR435837473','54eabe7eac.40547195','Bobberoo99','25086aafcabf46964dbbf203850fd217 4a6fbd72a901400d269cd890c1ed56cb 4d236d9a2d102c5fe6ad1c50da4"..., m_bError = false, m_iLen = 1210850}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fd5b23f4090 "\030\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 53, m_sClientName = {m_sValue = 0x7fd5b0016950 "127.0.0.1:53494", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 335, m_iTid = 28042, m_tmConnect = 1580441020971050, m_tmStart = 1580441020987257, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fd7fcd43ce0, m_pNext = 0x7fd7fc710ce0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fd5b14bd340 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 2097152, m_iUsed = 1210849, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fd5b08daf00 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fd620012a30
#16 CSphThdPool::Tick (pArg=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x270e440
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x2699850) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x2699850
        pCleanup = <optimized out>
#18 0x00007fd802688e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fd800ea188d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 24 (Thread 0x7fd7fc79b700 (LWP 28039)):
#0  0x00007fd80268f50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fd80268ae5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fd80268ad28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x262a348) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x2628db0, pNewSeg=pNewSeg@entry=0x7fd5e8007bb0, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x262a348, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x2628d00, 
            m_iCount = 140555691746656}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140556700643296}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 1000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x2628db0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fd5ac13e560
        pNewSeg = {m_pPtr = 0x7fd5e8007bb0}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x50 <Address 0x50 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fd7fc796ad0, pIndex=0x2628db0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fd5e8398750}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -59150976, 
              m_iMinInfixLen = 32727, m_iMaxSubstringLen = 40013232, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = -1407982240, 
              m_bIndexSP = 213, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd5e8398750, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565630512512}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565630512192}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd62000feb0, m_iCount = 140555691746656}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 40013280}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fd5e80a0020 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 289, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fd7fc796ad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fd5e8364ce0: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fd5e8372150 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fd5ac13e560, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x2628de0: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x267a200 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x270dfc8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x2714b78, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x262ae70, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fd5e8364430, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fd5e6eb0500, m_iCount = 1000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 1024}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd5e80a2480, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd5e8364320, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fd5e83643d0, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fd62000f588, sQuery=..., tOutput=..., uPacketID=@0x7fd620010349: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fd7fc798160}
        tCrashQuery = {
          m_pQuery = 0x7fd5e88bb4c0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 1107670, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = "\020found_rows_totalH{\"queries\":0, \"avg\":\"-\", \"min\":\"-\", \"max\":\"-\", \"pct95\":\"-\", \"pct99\":\"-\"}", '\000' <repeats 4005 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fd620010349, m_tOut = @0x7fd7fc79ac70, m_iCID = 336, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fd5e809fb58, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fd620010349: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fd620014ee0) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fd5e88bb4c0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 1107670, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fd62061aef0 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fd6207295c7 "/p>  <p> 원본글 참고하세요</p>  <p>     <a href=http://s.ppomppu.co.kr?idno=ppomppu4_107132&target=aHR0cDovL3d3dy5wcG9tcHB1LmNvLmtyL3pib2FyZC92aWV3LnBocD9pZD1wcG9tcHB1NCZwYWdlPTEmZGl2cGFnZT0yM"..., m_bError = false, m_iLen = 1107671}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fd5e82de220 "x", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 38, m_sClientName = {m_sValue = 0x7fd5e83217f0 "127.0.0.1:53502", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 336, m_iTid = 28039, m_tmConnect = 1580441021167471, m_tmStart = 1580441021182217, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fd7fc97dce0, m_pNext = 0x7fd7fca4cce0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fd5e89c9bb0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 2097152, m_iUsed = 1107670, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fd5e88bb4c0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fd620011830
#16 CSphThdPool::Tick (pArg=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x270e440
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x27963b0) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x27963b0
        pCleanup = <optimized out>
#18 0x00007fd802688e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fd800ea188d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 23 (Thread 0x7fd7fc9c3700 (LWP 28031)):
#0  0x00007fd80268f50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fd80268ae5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fd80268ad28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x262a348) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x2628db0, pNewSeg=pNewSeg@entry=0x7fd5ec1d8f10, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x262a348, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x2628d00, 
            m_iCount = 140555507645136}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140556767073984}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 1000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x2628db0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fd5a11abad0
        pNewSeg = {m_pPtr = 0x7fd5ec1d8f10}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x20 <Address 0x20 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fd7fc9bead0, pIndex=0x2628db0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fd5ec0975a0}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -56889984, 
              m_iMinInfixLen = 32727, m_iMaxSubstringLen = 40013232, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = -1592083760, 
              m_bIndexSP = 213, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd5ec0975a0, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565632773504}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565632773184}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd6140146d0, m_iCount = 140555507645136}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 40013280}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fd5ec180a30 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 294, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fd7fc9bead0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fd5ec17fad0: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fd5ec533230 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fd5a11abad0, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x2628de0: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x267a200 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x270dfc8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x2714b78, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x262ae70, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fd5ec17add0, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fd5745bf2d0, m_iCount = 1000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 1024}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd5ec3398b0, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd5ec17acc0, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fd5ec17ad70, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fd614013da8, sQuery=..., tOutput=..., uPacketID=@0x7fd614014b69: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fd7fc9c0160}
        tCrashQuery = {
          m_pQuery = 0x7fd5ec20c970 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 588773, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = "\020found_rows_totalH{\"queries\":0, \"avg\":\"-\", \"min\":\"-\", \"max\":\"-\", \"pct95\":\"-\", \"pct99\":\"-\"}", '\000' <repeats 4005 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fd614014b69, m_tOut = @0x7fd7fc9c2c70, m_iCID = 308, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fd5ec180568, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fd614014b69: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fd61401a9a0) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fd5ec20c970 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 588773, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fd61401ae90 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fd6140aaa76 "et=\\\"_blank\\\" href=\\\"https://www.jeshika.com/indore-escort\\\"> INDORE ESCORTS</a> <br />  <a rel=\\\"nofollow\\\" target=\\\"_blank\\\" href=\\\"https://www.jeshika.com/jabalpur-escort\\\"> JABALPUR ESCORTS</a> <b"..., m_bError = false, m_iLen = 588774}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fd5ec2d1ca0 "\030\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 50, m_sClientName = {m_sValue = 0x7fd5ec5330f0 "127.0.0.1:53356", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 308, m_iTid = 28031, m_tmConnect = 1580441021518529, m_tmStart = 1580441021528241, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fd7fcb1bce0, m_pNext = 0x7fd7fc7dfce0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fd5ec3ac000 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 1048576, m_iUsed = 588773, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fd5ec20c970 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fd614017340
#16 CSphThdPool::Tick (pArg=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x270e440
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x2709b90) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x2709b90
        pCleanup = <optimized out>
#18 0x00007fd802688e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fd800ea188d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 22 (Thread 0x7fd7fc4e9700 (LWP 28049)):
#0  0x00007fd80268c9f5 in pthread_cond_wait@@GLIBC_2.3.2 () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00000000006fa1ab in AutoEvent_T<false>::WaitEvent (this=this@entry=0x270e448, iMsec=iMsec@entry=-1) at /root/manticore_gitlab/src/sphinxstd.cpp:1358
        ts = {tv_sec = 140557435326912, tv_nsec = 40952896}
        ns = <optimized out>
        iRes = <optimized out>
        bEventHappened = <optimized out>
#2  0x00000000006fdf9f in TickImpl (this=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2028
        pJob = <optimized out>
#3  CSphThdPool::Tick (pArg=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x270e440
#4  0x00000000006f9735 in sphThreadProcWrapper (pArg=0x26999a0) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x26999a0
        pCleanup = <optimized out>
#5  0x00007fd802688e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#6  0x00007fd800ea188d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 21 (Thread 0x7fd7fca92700 (LWP 28028)):
#0  0x00007fd80268f50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fd80268ae5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fd80268ad28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x262a348) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x2628db0, pNewSeg=pNewSeg@entry=0x7fd5c8511800, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x262a348, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x2628d00, 
            m_iCount = 140555154326352}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140556168975440}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 1000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x2628db0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fd58c0b8350
        pNewSeg = {m_pPtr = 0x7fd5c8511800}
        bOk = <optimized out>
        sWarning = {m_sValue = 0xa0 <Address 0xa0 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fd7fca8dad0, pIndex=0x2628db0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fd5c85cebb0}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -56042112, 
              m_iMinInfixLen = 32727, m_iMaxSubstringLen = 40013232, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = -1945402544, 
              m_bIndexSP = 213, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd5c85cebb0, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565633621376}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565633621056}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd614017d50, m_iCount = 140555154326352}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 40013280}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fd5c85e00e0 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 304, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fd7fca8dad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fd5c86cc160: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fd5c851da70 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fd58c0b8350, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x2628de0: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x267a200 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x270dfc8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x2714b78, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x262ae70, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fd5c86caa80, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fd5a0a8e5b0, m_iCount = 1000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 1024}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd5c870d560, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd5c86cc0b0, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fd5c86caa20, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fd614017428, sQuery=..., tOutput=..., uPacketID=@0x7fd6140181e9: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fd7fca8f160}
        tCrashQuery = {
          m_pQuery = 0x7fd5c827bc10 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 641841, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = "\000found_rows_totalH{\"queries\":0, \"avg\":\"-\", \"min\":\"-\", \"max\":\"-\", \"pct95\":\"-\", \"pct99\":\"-\"}", '\000' <repeats 4005 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fd6140181e9, m_tOut = @0x7fd7fca91c70, m_iCID = 286, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fd5c85dfc18, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fd6140181e9: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fd6140173c0) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fd5c827bc10 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 641841, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fd61479c0d0 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fd614838c02 "33422315,3,4495913451,235,197,669902538,0,3299247498,4132218261,0,0,155294,155294,0,0,1566596522,1566610782,1566596413,(225),'RE: Neighbors Upset With Shower Hookup for Homeless Encampment','<div clas"..., m_bError = false, m_iLen = 641842}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fd5c860afc0 "\030\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 28, m_sClientName = {m_sValue = 0x7fd5c870d320 "127.0.0.1:53272", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 286, m_iTid = 28028, m_tmConnect = 1580441021358287, m_tmStart = 1580441021368631, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fd7fc869ce0, m_pNext = 0x7fd7fc52dce0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fd5c8754720 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 1048576, m_iUsed = 641841, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fd5c827bc10 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fd61401ad80
#16 CSphThdPool::Tick (pArg=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x270e440
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x262a770) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x262a770
        pCleanup = <optimized out>
#18 0x00007fd802688e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fd800ea188d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 20 (Thread 0x7fd7fca4d700 (LWP 28029)):
#0  0x00007fd80268f50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fd80268ae5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fd80268ad28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x262a348) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x2628db0, pNewSeg=pNewSeg@entry=0x7fd5f8259440, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x262a348, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x2628d00, 
            m_iCount = 140554953322960}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140556967917344}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 1000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x2628db0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fd5801071d0
        pNewSeg = {m_pPtr = 0x7fd5f8259440}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x20 <Address 0x20 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fd7fca48ad0, pIndex=0x2628db0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fd5f8637930}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -56324736, 
              m_iMinInfixLen = 32727, m_iMaxSubstringLen = 40013232, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = -2146405936, 
              m_bIndexSP = 213, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd5f8637930, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565633338752}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565633338432}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd620011150, m_iCount = 140554953322960}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 40013280}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fd5f892d320 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 388, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fd7fca48ad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fd5f8634eb0: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fd5f86e2700 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fd5801071d0, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x2628de0: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x267a200 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x270dfc8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x2714b78, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x262ae70, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fd5f8634d80, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fd5a81fabd0, m_iCount = 1000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 1024}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd5f8536690, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd5f8634c70, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fd5f8634d20, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fd620010828, sQuery=..., tOutput=..., uPacketID=@0x7fd6200115e9: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fd7fca4a160}
        tCrashQuery = {
          m_pQuery = 0x7fd5f871a530 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 1269578, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = "\020found_rows_totalH{\"queries\":0, \"avg\":\"-\", \"min\":\"-\", \"max\":\"-\", \"pct95\":\"-\", \"pct99\":\"-\"}", '\000' <repeats 4005 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fd6200115e9, m_tOut = @0x7fd7fca4cc70, m_iCID = 309, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fd5f892ce58, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fd6200115e9: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fd6200117f0) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fd5f871a530 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 1269578, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fd62121af60 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fd621350eab " a living sports betting mock sports betting lines printable <a href=\\\"http://fixedmatchesonline.ml/leaguelane-fixed-matches1x2/33032-fox-sports-nascar-betting-odds-2019-predictions.html\\\" class=\\\"pos"..., m_bError = false, m_iLen = 1269579}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fd5fa2a8700 "\030\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 30, m_sClientName = {m_sValue = 0x7fd5f8401f70 "127.0.0.1:53358", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 309, m_iTid = 28029, m_tmConnect = 1580441021141511, m_tmStart = 1580441021157899, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fd7fc79ace0, m_pNext = 0x7fd7fcc2fce0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fd5f8d3d310 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 2097152, m_iUsed = 1269578, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fd5f871a530 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fd620012ad0
#16 CSphThdPool::Tick (pArg=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x270e440
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x2709b30) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x2709b30
        pCleanup = <optimized out>
#18 0x00007fd802688e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fd800ea188d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 19 (Thread 0x7fd7fcb1c700 (LWP 28026)):
#0  0x00007fd80268f50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fd80268ae5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fd80268ad28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x262a348) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x2628db0, pNewSeg=pNewSeg@entry=0x7fd5f452de80, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x262a348, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x2628d00, 
            m_iCount = 140555959059584}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140556903772848}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 1000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x2628db0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fd5bc02c480
        pNewSeg = {m_pPtr = 0x7fd5f452de80}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x30 <Address 0x30 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fd7fcb17ad0, pIndex=0x2628db0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fd5f4598f80}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -55476864, 
              m_iMinInfixLen = 32727, m_iMaxSubstringLen = 40013232, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = -1140669312, 
              m_bIndexSP = 213, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd5f4598f80, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565634186624}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565634186304}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd62000a5b0, m_iCount = 140555959059584}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 40013280}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fd5f58fadf0 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 259, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fd7fcb17ad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fd5f5937990: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fd5f4173c40 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fd5bc02c480, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x2628de0: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x267a200 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x270dfc8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x2714b78, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x262ae70, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fd5f5932ec0, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fd6086e2890, m_iCount = 1000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 1024}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd5f4557f50, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd5f5932d90, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fd5f5932e60, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fd620009c88, sQuery=..., tOutput=..., uPacketID=@0x7fd62000aa49: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fd7fcb19160}
        tCrashQuery = {
          m_pQuery = 0x7fd5f418b4f0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 1438446, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = "\000found_rows_totalH{\"queries\":0, \"avg\":\"-\", \"min\":\"-\", \"max\":\"-\", \"pct95\":\"-\", \"pct99\":\"-\"}", '\000' <repeats 4005 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fd62000aa49, m_tOut = @0x7fd7fcb1bc70, m_iCID = 291, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fd5f58fa928, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fd62000aa49: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fd620012a50) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fd5f418b4f0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 1438446, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fd620f1af60 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fd62107a24f "erif; font-size: 14px; background-color: #ffffff;\\\"> 패션전문 GVG입니다.</p>  <p style=\\\"text-size-adjust: none; box-sizing: border-box; margin-bottom: 5px; line-height: 1.5; color: #111111; fo"..., m_bError = false, m_iLen = 1438447}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fd5f4011120 "(\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 27, m_sClientName = {m_sValue = 0x7fd5f4131550 "127.0.0.1:53292", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 291, m_iTid = 28026, m_tmConnect = 1580441021547894, m_tmStart = 1580441021566285, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fd7fce12ce0, m_pNext = 0x7fd7fc9c2ce0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fd5f42ea7f0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 2097152, m_iUsed = 1438446, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fd5f418b4f0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fd620012a90
#16 CSphThdPool::Tick (pArg=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x270e440
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x262a710) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x262a710
        pCleanup = <optimized out>
#18 0x00007fd802688e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fd800ea188d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 18 (Thread 0x7fd7fcbeb700 (LWP 28023)):
#0  0x00007fd80268f50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fd80268ae5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fd80268ad28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x262a348) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x2628db0, pNewSeg=pNewSeg@entry=0x7fd5c46313d0, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x262a348, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x2628d00, 
            m_iCount = 140555893616096}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140556099563472}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 1000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x2628db0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fd5b81c2de0
        pNewSeg = {m_pPtr = 0x7fd5c46313d0}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x400 <Address 0x400 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fd7fcbe6ad0, pIndex=0x2628db0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fd5c46342d0}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -54628992, 
              m_iMinInfixLen = 32727, m_iMaxSubstringLen = 40013232, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = -1206112800, 
              m_bIndexSP = 213, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd5c46342d0, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565635034496}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565635034176}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd620015a40, m_iCount = 140555893616096}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 40013280}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fd5c42855f0 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 311, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fd7fcbe6ad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fd5c4181a30: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fd5c4276570 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fd5b81c2de0, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x2628de0: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x267a200 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x270dfc8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x2714b78, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x262ae70, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fd5c4181dd0, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fd58425a890, m_iCount = 1000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 1024}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd5c430d5f0, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd5c4181120, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fd5c41811d0, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fd620015118, sQuery=..., tOutput=..., uPacketID=@0x7fd620015ed9: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fd7fcbe8160}
        tCrashQuery = {
          m_pQuery = 0x7fd5c430dcc0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 777192, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = "\000found_rows_totalH{\"queries\":0, \"avg\":\"-\", \"min\":\"-\", \"max\":\"-\", \"pct95\":\"-\", \"pct99\":\"-\"}", '\000' <repeats 4005 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fd620015ed9, m_tOut = @0x7fd7fcbeac70, m_iCID = 337, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fd5c4285128, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fd620015ed9: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fd620011810) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fd5c430dcc0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 777192, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fd62011aea0 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fd6201d8a89 " &nbsp;</p>  <p> V50새로샀는데</p>  <p> 분명 박스개봉할때도 봤거든요?</p>  <p> &nbsp;</p>  <p> 근데 아기가 콩순이 본대서 유투브 검색했는데</p>  <p> 이상한 ", <incomplete sequence \354\203>..., m_bError = false, m_iLen = 777193}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fd5c42efe70 "x", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 41, m_sClientName = {m_sValue = 0x7fd5c430d570 "127.0.0.1:53504", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 337, m_iTid = 28023, m_tmConnect = 1580441021119714, m_tmStart = 1580441021131572, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fd7fcc2fce0, m_pNext = 0x7fd7fccb9ce0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fd5c43cb8c0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 1048576, m_iUsed = 777192, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fd5c430dcc0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fd620012a10
#16 CSphThdPool::Tick (pArg=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x270e440
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x262af40) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x262af40
        pCleanup = <optimized out>
#18 0x00007fd802688e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fd800ea188d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 17 (Thread 0x7fd7fcc30700 (LWP 28022)):
#0  0x00007fd80268f50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fd80268ae5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fd80268ad28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x262a348) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x2628db0, pNewSeg=pNewSeg@entry=0x7fd58c0e91e0, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x262a348, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x2628d00, 
            m_iCount = 140556027160144}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140555153752832}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 1000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x2628db0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fd5c011e650
        pNewSeg = {m_pPtr = 0x7fd58c0e91e0}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x20 <Address 0x20 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fd7fcc2bad0, pIndex=0x2628db0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fd58c03cf40}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -54346368, 
              m_iMinInfixLen = 32727, m_iMaxSubstringLen = 40013232, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = -1072568752, 
              m_bIndexSP = 213, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd58c03cf40, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565635317120}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565635316800}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd61400b730, m_iCount = 140556027160144}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 40013280}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fd58cc16b70 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 207, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fd7fcc2bad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fd58c039de0: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fd58cb04580 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fd5c011e650, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x2628de0: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x267a200 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x270dfc8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x2714b78, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x262ae70, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fd58c039cb0, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fd5fc75db40, m_iCount = 1000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 1024}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd58c027bb0, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd58c039ba0, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fd58c039c50, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fd61400ae08, sQuery=..., tOutput=..., uPacketID=@0x7fd61400bbc9: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fd7fcc2d160}
        tCrashQuery = {
          m_pQuery = 0x7fd58ccba1c0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 387695, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = "\000found_rows_totalH{\"queries\":0, \"avg\":\"-\", \"min\":\"-\", \"max\":\"-\", \"pct95\":\"-\", \"pct99\":\"-\"}", '\000' <repeats 4005 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fd61400bbc9, m_tOut = @0x7fd7fcc2fc70, m_iCID = 294, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fd58cc166a8, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fd61400bbc9: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fd614013d00) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fd58ccba1c0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 387695, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fd614f9bdb0 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fd614ffa820 "40747','10156574923155544_10156575705250544','','660328a7f9004d462085aa67a82065db 2343ec78a04c6ea9d80806345d31fd78 4d236d9a2d102c5fe6ad1c50da4bec50 660328a7f9004d462085aa67a82065db'),(56011921387,1246"..., m_bError = false, m_iLen = 387696}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fd58c5cfcd0 "8\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 35, m_sClientName = {m_sValue = 0x7fd58c027890 "127.0.0.1:53308", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 294, m_iTid = 28022, m_tmConnect = 1580441021140769, m_tmStart = 1580441021148554, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fd7fca4cce0, m_pNext = 0x7fd7fcbeace0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fd58cd18c40 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 524288, m_iUsed = 387695, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fd58ccba1c0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fd614e1d360
#16 CSphThdPool::Tick (pArg=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x270e440
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x262af10) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x262af10
        pCleanup = <optimized out>
#18 0x00007fd802688e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fd800ea188d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 16 (Thread 0x7fd7fc573700 (LWP 28047)):
#0  0x00007fd80268c9f5 in pthread_cond_wait@@GLIBC_2.3.2 () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00000000006fa1ab in AutoEvent_T<false>::WaitEvent (this=this@entry=0x270e448, iMsec=iMsec@entry=-1) at /root/manticore_gitlab/src/sphinxstd.cpp:1358
        ts = {tv_sec = 0, tv_nsec = 40952896}
        ns = <optimized out>
        iRes = <optimized out>
        bEventHappened = <optimized out>
#2  0x00000000006fdf9f in TickImpl (this=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2028
        pJob = <optimized out>
#3  CSphThdPool::Tick (pArg=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x270e440
#4  0x00000000006f9735 in sphThreadProcWrapper (pArg=0x2699940) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x2699940
        pCleanup = <optimized out>
#5  0x00007fd802688e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#6  0x00007fd800ea188d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 15 (Thread 0x7fd7fc4a4700 (LWP 28050)):
#0  0x00007fd800ea1e63 in epoll_wait () from /lib64/libc.so.6
No symbol table info available.
#1  0x000000000060535e in EpollEvents_c::Wait (this=0x7fd6200008c0, timeoutMs=<optimized out>) at /root/manticore_gitlab/src/searchdha.cpp:3998
        timeoutMs = <optimized out>
        this = 0x7fd6200008c0
#2  0x00000000005e18fb in CSphNetLoop::LoopNetPoll (this=this@entry=0x7fd7fc4a3cf0) at /root/manticore_gitlab/src/searchd.cpp:20578
        bGot = <optimized out>
        iGotEvents = <optimized out>
        iConnections = 0
        dCleanup = {<VecTraits_T<ISphNetAction*>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<ISphNetAction*>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        tmNow = <optimized out>
        iSpinWait = <optimized out>
        iMaxIters = <optimized out>
        dWorkNext = {<VecTraits_T<ISphNetAction*>> = {m_pData = 0x7fd620005ba0, m_iCount = 0}, <sph::DefaultStorage_T<ISphNetAction*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 1024}
        tmLastWait = 1580441087803978
#3  0x00000000005e23a9 in CSphNetLoop::ThdLoop () at /root/manticore_gitlab/src/searchd.cpp:20738
        tQueryTLS = {m_pQuery = 0x0, m_iSize = 0, m_uCMD = 0, m_uVer = 0, m_bMySQL = false, m_bHttp = false, m_pIndex = 0x0, m_iIndexLen = 0}
        tLoop = {m_uTick = 5918, m_dWorkExternal = {<VecTraits_T<ISphNetAction*>> = {m_pData = 0x7fd620003b90, m_iCount = 0}, <sph::DefaultStorage_T<ISphNetAction*>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 1024}, 
          m_bGotExternal = false, m_pWakeupExternal = 0x7fd620003960, m_tExtLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutex = {__data = {__lock = 0, 
                __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_tPrf = {m_bEnable = false, m_tmTotal = 0, m_iPerfEv = 5922, m_iPerfNext = 0, m_iPerfExt = 1, 
            m_iPerfClean = 1}, m_pPoll = 0x7fd6200008c0, m_pShutdownCookie = 0x7fd6200039f0}
#4  0x00000000006f9735 in sphThreadProcWrapper (pArg=0x2630be0) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x2630be0
        pCleanup = <optimized out>
#5  0x00007fd802688e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#6  0x00007fd800ea188d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 14 (Thread 0x7fd7fccba700 (LWP 28020)):
#0  0x00007fd80268f50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fd80268ae5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fd80268ad28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x262a348) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x2628db0, pNewSeg=pNewSeg@entry=0x7fd580ce4690, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x262a348, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x2628d00, 
            m_iCount = 140555626222800}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140554954262160}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 1000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x2628db0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fd5a82c14d0
        pNewSeg = {m_pPtr = 0x7fd580ce4690}
        bOk = <optimized out>
        sWarning = {m_sValue = 0xc10 <Address 0xc10 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fd7fccb5ad0, pIndex=0x2628db0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fd5801ea440}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -53781120, 
              m_iMinInfixLen = 32727, m_iMaxSubstringLen = 40013232, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = -1473506096, 
              m_bIndexSP = 213, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd5801ea440, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565635882368}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565635882048}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd614e1ca90, m_iCount = 140555626222800}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 40013280}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fd580d46370 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 800, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fd7fccb5ad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fd5801ec370: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fd580d485b0 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fd5a82c14d0, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x2628de0: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x267a200 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x270dfc8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x2714b78, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x262ae70, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fd582e01840, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fd5e80e51f0, m_iCount = 1000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 1024}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd5803ee6b0, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd582e01730, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fd582e017e0, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fd614e1c168, sQuery=..., tOutput=..., uPacketID=@0x7fd614e1cf29: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fd7fccb7160}
        tCrashQuery = {
          m_pQuery = 0x7fd580b35bd0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 1267524, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = '\000' <repeats 4095 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fd614e1cf29, 
          m_tOut = @0x7fd7fccb9c70, m_iCID = 324, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fd580d45ea8, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fd614e1cf29: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fd614c9c100) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fd580b35bd0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 1267524, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fd615b1cff0 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fd615c52735 "/p> <p align=\\\"center\\\" class=\\\"NHN_Writeform_Main\\\"> <img src=\\\"https://cafeptthumb-phinf.pstatic.net/MjAxOTA4MjZfMzIg/MDAxNTY2ODIyMTcyNzM4.qlMcYLXRxGil9ZchFAQU2XkpO20VbGeJcgSf7thwXjEg.PBf1q6cpvEsZZm"..., m_bError = false, m_iLen = 1267525}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fd5804094e0 "\030\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 54, m_sClientName = {m_sValue = 0x7fd5801f6a60 "127.0.0.1:53412", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 324, m_iTid = 28020, m_tmConnect = 1580441021108786, m_tmStart = 1580441021125917, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fd7fcbeace0, m_pNext = 0x7fd802990ce0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fd5804103c0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 2097152, m_iUsed = 1267524, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fd580b35bd0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fd61400f560
#16 CSphThdPool::Tick (pArg=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x270e440
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x26cdc90) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x26cdc90
        pCleanup = <optimized out>
#18 0x00007fd802688e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fd800ea188d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 13 (Thread 0x7fd7fcd44700 (LWP 28018)):
#0  0x00007fd80268f50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fd80268ae5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fd80268ad28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x262a348) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x2628db0, pNewSeg=pNewSeg@entry=0x7fd5d0189fd0, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x262a348, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x2628d00, 
            m_iCount = 140557104640208}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140556300778496}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 1000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x2628db0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fd6004af0d0
        pNewSeg = {m_pPtr = 0x7fd5d0189fd0}
        bOk = <optimized out>
        sWarning = {m_sValue = 0xa0 <Address 0xa0 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fd7fcd3fad0, pIndex=0x2628db0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fd5d0444f30}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -53215872, 
              m_iMinInfixLen = 32727, m_iMaxSubstringLen = 40013232, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = 4911312, 
              m_bIndexSP = 214, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd5d0444f30, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565636447616}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565636447296}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd61401a150, m_iCount = 140557104640208}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 40013280}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fd5d04a3030 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 212, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fd7fcd3fad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fd5d0449050: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fd5d032d060 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fd6004af0d0, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x2628de0: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x267a200 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x270dfc8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x2714b78, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x262ae70, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fd5d0439270, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fd5d8458ea0, m_iCount = 1000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 1024}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd5d02e51f0, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd5d0439160, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fd5d0439210, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fd614019828, sQuery=..., tOutput=..., uPacketID=@0x7fd61401a5e9: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fd7fcd41160}
        tCrashQuery = {
          m_pQuery = 0x7fd5d00008e0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 880900, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = "\000found_rows_totalH{\"queries\":0, \"avg\":\"-\", \"min\":\"-\", \"max\":\"-\", \"pct95\":\"-\", \"pct99\":\"-\"}", '\000' <repeats 4005 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fd61401a5e9, m_tOut = @0x7fd7fcd43c70, m_iCID = 298, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fd5d04a2b68, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fd61401a5e9: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fd614015da0) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fd5d00008e0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 880900, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fd61551bdf0 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fd6155f2ef5 "sters','<div class=\\\"md\\\"> <blockquote>  <p> Who would defend hostile anti-capitalists trying to overthrow order and use undemocratic methods?</p>  </blockquote>   <p> What does that matter? Their act"..., m_bError = false, m_iLen = 880901}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fd5d021af20 "\030\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 29, m_sClientName = {m_sValue = 0x7fd5d00008c0 "127.0.0.1:53324", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 298, m_iTid = 28018, m_tmConnect = 1580441020992385, m_tmStart = 1580441021009875, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fd802906ce0, m_pNext = 0x7fd7fc6cbce0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fd5d067eff0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 1048576, m_iUsed = 880900, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fd5d00008e0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fd614013ce0
#16 CSphThdPool::Tick (pArg=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x270e440
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x26cdc30) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x26cdc30
        pCleanup = <optimized out>
#18 0x00007fd802688e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fd800ea188d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 12 (Thread 0x7fd7fcd89700 (LWP 28017)):
#0  0x00007fd80268f50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fd80268ae5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fd80268ad28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x262a348) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x2628db0, pNewSeg=pNewSeg@entry=0x7fd5a012f870, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x262a348, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x2628d00, 
            m_iCount = 140555434941280}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140555505175296}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 1000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x2628db0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fd59cc55b60
        pNewSeg = {m_pPtr = 0x7fd5a012f870}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x30 <Address 0x30 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fd7fcd84ad0, pIndex=0x2628db0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fd5a0f58cc0}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -52933248, 
              m_iMinInfixLen = 32727, m_iMaxSubstringLen = 40013232, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = -1664787616, 
              m_bIndexSP = 213, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd5a0f58cc0, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565636730240}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565636729920}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd620014690, m_iCount = 140555434941280}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 40013280}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fd5a05db970 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 366, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fd7fcd84ad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fd5a0193b90: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fd5a0299930 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fd59cc55b60, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x2628de0: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x267a200 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x270dfc8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x2714b78, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x262ae70, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fd5a004a310, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fd598160320, m_iCount = 1000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 1024}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd5a002aff0, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd5a004a200, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fd5a004a2b0, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fd620013d68, sQuery=..., tOutput=..., uPacketID=@0x7fd620014b29: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fd7fcd86160}
        tCrashQuery = {
          m_pQuery = 0x7fd5a109a3e0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 678511, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = "\000found_rows_totalH{\"queries\":0, \"avg\":\"-\", \"min\":\"-\", \"max\":\"-\", \"pct95\":\"-\", \"pct99\":\"-\"}", '\000' <repeats 4005 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fd620014b29, m_tOut = @0x7fd7fcd88c70, m_iCID = 331, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fd5a05db4a8, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fd620014b29: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fd620009c00) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fd5a109a3e0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 678511, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fd62001ae90 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fd6200c0900 "o market your channel outside of reddit?</p>   <p> Here is a list of things I do to market my channel; Facebook page Twitter posts Instagram posts and stories Snapchat posts LinkedIn page Hand out bus"..., m_bError = false, m_iLen = 678512}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fd5a0a8c210 "(\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 49, m_sClientName = {m_sValue = 0x7fd5a0026040 "127.0.0.1:53462", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 331, m_iTid = 28017, m_tmConnect = 1580441021441470, m_tmStart = 1580441021452064, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fd7fc641ce0, m_pNext = 0x7fd7fcee1ce0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fd5a075e400 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 1048576, m_iUsed = 678511, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fd5a109a3e0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fd62000ac50
#16 CSphThdPool::Tick (pArg=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x270e440
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x26cd8e0) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x26cd8e0
        pCleanup = <optimized out>
#18 0x00007fd802688e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fd800ea188d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 11 (Thread 0x7fd7fce58700 (LWP 28014)):
#0  0x00007fd80268c9f5 in pthread_cond_wait@@GLIBC_2.3.2 () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00000000006fa1ab in AutoEvent_T<false>::WaitEvent (this=this@entry=0x270e448, iMsec=iMsec@entry=-1) at /root/manticore_gitlab/src/sphinxstd.cpp:1358
        ts = {tv_sec = 0, tv_nsec = 40952896}
        ns = <optimized out>
        iRes = <optimized out>
        bEventHappened = <optimized out>
#2  0x00000000006fdf9f in TickImpl (this=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2028
        pJob = <optimized out>
#3  CSphThdPool::Tick (pArg=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x270e440
#4  0x00000000006f9735 in sphThreadProcWrapper (pArg=0x2709ca0) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x2709ca0
        pCleanup = <optimized out>
#5  0x00007fd802688e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#6  0x00007fd800ea188d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 10 (Thread 0x7fd7fce13700 (LWP 28015)):
#0  0x00007fd80268f50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fd80268ae5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fd80268ad28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x262a348) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x2628db0, pNewSeg=pNewSeg@entry=0x7fd5903e0730, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x262a348, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x2628d00, 
            m_iCount = 140556967991424}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140555224698560}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 1000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x2628db0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fd5f825d880
        pNewSeg = {m_pPtr = 0x7fd5903e0730}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x20 <Address 0x20 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fd7fce0ead0, pIndex=0x2628db0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fd5902136c0}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -52368000, 
              m_iMinInfixLen = 32727, m_iMaxSubstringLen = 40013232, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = -131737472, 
              m_bIndexSP = 213, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd5902136c0, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565637295488}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565637295168}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd614015890, m_iCount = 140556967991424}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 40013280}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fd5904eeea0 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 287, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fd7fce0ead0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fd590215610: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fd590228210 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fd5f825d880, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x2628de0: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x267a200 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x270dfc8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x2714b78, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x262ae70, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fd590210b10, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fd628505d20, m_iCount = 1000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 1024}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd5904f10e0, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd590210a00, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fd590210ab0, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fd614014f68, sQuery=..., tOutput=..., uPacketID=@0x7fd614015d29: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fd7fce10160}
        tCrashQuery = {
          m_pQuery = 0x7fd590228b80 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 1078160, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = "\020found_rows_totalH{\"queries\":0, \"avg\":\"-\", \"min\":\"-\", \"max\":\"-\", \"pct95\":\"-\", \"pct99\":\"-\"}", '\000' <repeats 4005 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fd614015d29, m_tOut = @0x7fd7fce12c70, m_iCID = 300, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fd5904ee9d8, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fd614015d29: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fd614015d60) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fd590228b80 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 1078160, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fd61511bdd0 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fd615223161 "3252,755175242,0,0,155294,155294,0,0,1566741725,1566756036,1566741636,(226),'RE: FIFA 19 AC Milan','<div class=\\\"md\\\"> <p> With suso? Ill be down to PayPal you for your troubles or even Andrea pirlo w"..., m_bError = false, m_iLen = 1078161}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fd59011e7d0 "8\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 37, m_sClientName = {m_sValue = 0x7fd590228070 "127.0.0.1:53332", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 300, m_iTid = 28015, m_tmConnect = 1580441021555261, m_tmStart = 1580441021569586, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fd7fc8aece0, m_pNext = 0x7fd7fcb1bce0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fd590c98720 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 2097152, m_iUsed = 1078160, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fd590228b80 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fd614e1d300
#16 CSphThdPool::Tick (pArg=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x270e440
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x2709cd0) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x2709cd0
        pCleanup = <optimized out>
#18 0x00007fd802688e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fd800ea188d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 9 (Thread 0x7fd7fc939700 (LWP 28033)):
#0  0x00007fd80268c9f5 in pthread_cond_wait@@GLIBC_2.3.2 () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00000000006fa1ab in AutoEvent_T<false>::WaitEvent (this=this@entry=0x270e448, iMsec=iMsec@entry=-1) at /root/manticore_gitlab/src/sphinxstd.cpp:1358
        ts = {tv_sec = 140557435326912, tv_nsec = 40952896}
        ns = <optimized out>
        iRes = <optimized out>
        bEventHappened = <optimized out>
#2  0x00000000006fdf9f in TickImpl (this=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2028
        pJob = <optimized out>
#3  CSphThdPool::Tick (pArg=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x270e440
#4  0x00000000006f9735 in sphThreadProcWrapper (pArg=0x2709bf0) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x2709bf0
        pCleanup = <optimized out>
#5  0x00007fd802688e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#6  0x00007fd800ea188d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 8 (Thread 0x7fd7fc825700 (LWP 28037)):
#0  0x00007fd80268c9f5 in pthread_cond_wait@@GLIBC_2.3.2 () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00000000006fa1ab in AutoEvent_T<false>::WaitEvent (this=this@entry=0x270e448, iMsec=iMsec@entry=-1) at /root/manticore_gitlab/src/sphinxstd.cpp:1358
        ts = {tv_sec = 140557435326848, tv_nsec = 40952896}
        ns = <optimized out>
        iRes = <optimized out>
        bEventHappened = <optimized out>
#2  0x00000000006fdf9f in TickImpl (this=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2028
        pJob = <optimized out>
#3  CSphThdPool::Tick (pArg=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x270e440
#4  0x00000000006f9735 in sphThreadProcWrapper (pArg=0x2796350) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x2796350
        pCleanup = <optimized out>
#5  0x00007fd802688e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#6  0x00007fd800ea188d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 7 (Thread 0x7fd7fce9d700 (LWP 28013)):
#0  0x00007fd80268f50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fd80268ae5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fd80268ad28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x262a348) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x2628db0, pNewSeg=pNewSeg@entry=0x7fd5cc2f5b90, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x262a348, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x2628d00, 
            m_iCount = 140556030423360}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140556243106608}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 1000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x2628db0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fd5c043b140
        pNewSeg = {m_pPtr = 0x7fd5cc2f5b90}
        bOk = <optimized out>
        sWarning = {m_sValue = 0xa0 <Address 0xa0 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fd7fce98ad0, pIndex=0x2628db0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fd5cc571210}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -51802752, 
              m_iMinInfixLen = 32727, m_iMaxSubstringLen = 40013232, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = -1069305536, 
              m_bIndexSP = 213, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd5cc571210, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565637860736}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565637860416}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd614018f30, m_iCount = 140556030423360}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 40013280}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fd5ccf3aac0 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 1344, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fd7fce98ad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fd5cc2f58e0: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fd5cc3197a0 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fd5c043b140, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x2628de0: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x267a200 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x270dfc8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x2714b78, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x262ae70, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fd5cc2f57b0, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fd5b89c3540, m_iCount = 1000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 1024}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd5ccf5ed60, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd5cc2f56a0, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fd5cc2f5750, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fd614018608, sQuery=..., tOutput=..., uPacketID=@0x7fd6140193c9: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fd7fce9a160}
        tCrashQuery = {
          m_pQuery = 0x7fd5cc601630 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 697946, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = "\000found_rows_totalH{\"queries\":0, \"avg\":\"-\", \"min\":\"-\", \"max\":\"-\", \"pct95\":\"-\", \"pct99\":\"-\"}", '\000' <repeats 4005 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fd6140193c9, m_tOut = @0x7fd7fce9cc70, m_iCID = 296, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fd5ccf3a5f8, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fd6140193c9: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fd614013d20) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fd5cc601630 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 697946, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fd61531bde0 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fd6153c643b "zU=&encode=on\\\" target=\\\"_blank\\\"> <span style=\\\"font-size: 18px;\\\"> <strong> <u> <span style=\\\"color: #ff0000; font-size: 20px;\\\"> ▶삼성화재&nbsp;태아보험&nbsp;견적 받아보기</span> </"..., m_bError = false, m_iLen = 697947}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fd5cc395080 "8\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 58, m_sClientName = {m_sValue = 0x7fd5cfbd5340 "127.0.0.1:53314", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 296, m_iTid = 28013, m_tmConnect = 1580441021046332, m_tmStart = 1580441021057297, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fd7fc686ce0, m_pNext = 0x7fd802906ce0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fd5cc3d7520 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 1048576, m_iUsed = 697946, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fd5cc601630 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fd61401adc0
#16 CSphThdPool::Tick (pArg=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x270e440
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x2709c70) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x2709c70
        pCleanup = <optimized out>
#18 0x00007fd802688e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fd800ea188d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 6 (Thread 0x7fd802907700 (LWP 28011)):
#0  0x00007fd80268f50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fd80268ae5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fd80268ad28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x262a348) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x2628db0, pNewSeg=pNewSeg@entry=0x7fd60ca14510, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x262a348, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x2628d00, 
            m_iCount = 140556972438048}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140557311635136}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 1000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x2628db0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fd5f869b220
        pNewSeg = {m_pPtr = 0x7fd60ca14510}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x30 <Address 0x30 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fd802902ad0, pIndex=0x2628db0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fd60c30a330}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = 43003264, 
              m_iMinInfixLen = 32728, m_iMaxSubstringLen = 40013232, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = -127290848, 
              m_bIndexSP = 213, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd60c30a330, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565732666752}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565732666432}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd61479b880, m_iCount = 140556972438048}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 40013280}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fd60c9e7260 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 330, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fd802902ad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fd60ca14440: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fd60c33a180 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fd5f869b220, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x2628de0: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x267a200 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x270dfc8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x2714b78, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x262ae70, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fd60ca14310, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fd5ac3b6ff0, m_iCount = 1000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 1024}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd60c0432b0, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd60ca14200, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fd60ca142b0, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fd61479af58, sQuery=..., tOutput=..., uPacketID=@0x7fd61479bd19: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fd802904160}
        tCrashQuery = {
          m_pQuery = 0x7fd60c35dbb0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 1092553, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = "\000found_rows_totalH{\"queries\":0, \"avg\":\"-\", \"min\":\"-\", \"max\":\"-\", \"pct95\":\"-\", \"pct99\":\"-\"}", '\000' <repeats 4005 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fd61479bd19, m_tOut = @0x7fd802906c70, m_iCID = 313, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fd60c9e6d98, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fd61479bd19: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fd61400bf80) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fd60c35dbb0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 1092553, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fd61441aed0 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fd614525a9a "idang-bersama-dpd-dpr?tag_from=news_mostpop\\']);dataLayer.push({\\'event\\': \\'trackEvent\\',\\'eventDetails.category\\': \\'outbond\\', \\'eventDetails.action\\': \\'click\\', \\'eventDetails.label\\': \\'https://"..., m_bError = false, m_iLen = 1092554}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fd60c337ff0 "(\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 44, m_sClientName = {m_sValue = 0x7fd60c4cf420 "127.0.0.1:53372", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 313, m_iTid = 28011, m_tmConnect = 1580441021035176, m_tmStart = 1580441021055309, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fd7fce9cce0, m_pNext = 0x7fd7fcd43ce0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fd60ca5ec00 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 2097152, m_iUsed = 1092553, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fd60c35dbb0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fd61400ada0
#16 CSphThdPool::Tick (pArg=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x270e440
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x270ea90) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x270ea90
        pCleanup = <optimized out>
#18 0x00007fd802688e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fd800ea188d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 5 (Thread 0x7fd7fcee2700 (LWP 28012)):
#0  0x00007fd80268f50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fd80268ae5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fd80268ad28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x262a348) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x2628db0, pNewSeg=pNewSeg@entry=0x7fd59cf1d2c0, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x262a348, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x2628d00, 
            m_iCount = 140556565306144}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140555424367920}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 1000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x2628db0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fd5e0255b20
        pNewSeg = {m_pPtr = 0x7fd59cf1d2c0}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x100 <Address 0x100 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fd7fceddad0, pIndex=0x2628db0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fd59c0dd540}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -51520128, 
              m_iMinInfixLen = 32727, m_iMaxSubstringLen = 40013232, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = -534422752, 
              m_bIndexSP = 213, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd59c0dd540, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565638143360}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565638143040}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd61400c910, m_iCount = 140556565306144}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 40013280}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fd59cc43d60 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 424, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fd7fceddad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fd59c8518e0: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fd59cbc13b0 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fd5e0255b20, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x2628de0: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x267a200 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x270dfc8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x2714b78, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x262ae70, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fd59c84e630, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fd610377db0, m_iCount = 1000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 1024}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd59c819850, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd59c84e500, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fd59c84e5d0, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fd61400bfe8, sQuery=..., tOutput=..., uPacketID=@0x7fd61400cda9: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fd7fcedf160}
        tCrashQuery = {
          m_pQuery = 0x7fd59c410690 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 665411, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = "\020found_rows_totalH{\"queries\":0, \"avg\":\"-\", \"min\":\"-\", \"max\":\"-\", \"pct95\":\"-\", \"pct99\":\"-\"}", '\000' <repeats 4005 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fd61400cda9, m_tOut = @0x7fd7fcee1c70, m_iCID = 303, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fd59cc43898, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fd61400cda9: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fd614011920) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fd59c410690 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 665411, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fd61431aec0 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fd6143bd604 " berarti vram dri vga intelnya usagenya 100%.. lu buka banyak tab gitu? Saran ane diupgrade jdi dual chanel ramnya.. tambah 8 gb lagi.. n klo bisa beli ssd 256 gb dah cukup.. budget 1 jt dah bisa dpt "..., m_bError = false, m_iLen = 665412}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fd59cc460f0 "\030\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 33, m_sClientName = {m_sValue = 0x7fd59cffa980 "127.0.0.1:53340", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 303, m_iTid = 28012, m_tmConnect = 1580441021416493, m_tmStart = 1580441021427216, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fd7fcd88ce0, m_pNext = 0x7fd7fcba5ce0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fd59c0e8f50 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 1048576, m_iUsed = 665411, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fd59c410690 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fd614017360
#16 CSphThdPool::Tick (pArg=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x270e440
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x26cdad0) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x26cdad0
        pCleanup = <optimized out>
#18 0x00007fd802688e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fd800ea188d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 4 (Thread 0x7fd80294c700 (LWP 28010)):
#0  0x00007fd80268f50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fd80268ae5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fd80268ad28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x262a348) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x2628db0, pNewSeg=pNewSeg@entry=0x7fd5d8381ce0, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x262a348, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x2628d00, 
            m_iCount = 140553881118416}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140556431545728}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 1000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x2628db0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fd54027e6d0
        pNewSeg = {m_pPtr = 0x7fd5d8381ce0}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x30 <Address 0x30 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fd802947ad0, pIndex=0x2628db0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fd5d82c0fb0}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = 43285888, 
              m_iMinInfixLen = 32728, m_iMaxSubstringLen = 40013232, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = 1076356816, 
              m_bIndexSP = 213, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd5d82c0fb0, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565732949376}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565732949056}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd61c0146a0, m_iCount = 140553881118416}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 40013280}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fd5d84b4010 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 292, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fd802947ad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fd5d8a1fe60: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fd5d868aac0 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fd54027e6d0, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x2628de0: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x267a200 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x270dfc8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x2714b78, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x262ae70, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fd5d8a1fd30, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fd5bc2cc280, m_iCount = 1000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 1024}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd5d86b61b0, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd5d8a1fc20, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fd5d8a1fcd0, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fd61c013d78, sQuery=..., tOutput=..., uPacketID=@0x7fd61c014b39: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fd802949160}
        tCrashQuery = {
          m_pQuery = 0x7fd5d87378e0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 2528772, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = "\020found_rows_totalH{\"queries\":0, \"avg\":\"-\", \"min\":\"-\", \"max\":\"-\", \"pct95\":\"-\", \"pct99\":\"-\"}", '\000' <repeats 4005 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fd61c014b39, m_tOut = @0x7fd80294bc70, m_iCID = 314, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fd5d84b3b48, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fd61c014b39: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fd61c014ef0) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fd5d87378e0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 2528772, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fd61c61aed0 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fd61c8844d5 "<br />  Singapura sudah terlanjur kaya raya. Sakitnya kali ini hanya seperti terganggu flu ringan.<br />  <br />  Asal jangan keterusan menjadi flu nyamuk.(Dahlan Iskan)','','XST186083783 XFR108336751"..., m_bError = false, m_iLen = 2528773}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fd5d86466f0 "\030\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 34, m_sClientName = {m_sValue = 0x7fd5d8279b50 "127.0.0.1:53374", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 314, m_iTid = 28010, m_tmConnect = 1580441021321276, m_tmStart = 1580441021350458, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fd7fcad6ce0, m_pNext = 0x7fd7fc5b7ce0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fd5d8b879d0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 4194304, m_iUsed = 2528772, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fd5d87378e0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fd61c009bc0
#16 CSphThdPool::Tick (pArg=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x270e440
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x2709c40) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x2709c40
        pCleanup = <optimized out>
#18 0x00007fd802688e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fd800ea188d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 3 (Thread 0x7fd802991700 (LWP 28009)):
#0  0x00007fd80268f50d in __lll_lock_wait () from /lib64/libpthread.so.0
No symbol table info available.
#1  0x00007fd80268ae5b in _L_lock_883 () from /lib64/libpthread.so.0
No symbol table info available.
#2  0x00007fd80268ad28 in pthread_mutex_lock () from /lib64/libpthread.so.0
No symbol table info available.
#3  0x00000000006f9ef9 in CSphMutex::Lock (this=this@entry=0x262a348) at /root/manticore_gitlab/src/sphinxstd.cpp:1260
No locals.
#4  0x000000000084a4e8 in CSphScopedLock (tMutex=..., this=<synthetic pointer>) at /root/manticore_gitlab/src/sphinxstd.h:3911
No locals.
#5  RtIndex_c::CommitReplayable (this=this@entry=0x2628db0, pNewSeg=pNewSeg@entry=0x7fd618599160, dAccKlist=..., pTotalKilled=pTotalKilled@entry=0x0, 
    bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2829
        tLock = {<ISphNoncopyable> = {<No data fields>}, m_tMutexRef = @0x262a348, m_bLocked = true}
        bSaving = true
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x2628d00, 
            m_iCount = 140555226811632}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140557508275552}
        iTotalKilled = <optimized out>
        bSavedOk = <optimized out>
        iNewDocs = 1000
        iFirstFieldLenAttr = -1
        iTID = <optimized out>
        iMemLimit = <optimized out>
        bDump = <optimized out>
#6  0x000000000084afbc in RtIndex_c::Commit (this=0x2628db0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fd5905d8cf0
        pNewSeg = {m_pPtr = 0x7fd618599160}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x60 <Address 0x60 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#7  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fd80298cad0, pIndex=0x2628db0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fd61859cb80}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = 43568512, 
              m_iMinInfixLen = 32728, m_iMaxSubstringLen = 40013232, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = -1872917264, 
              m_bIndexSP = 213, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd61859cb80, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565733232000}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565733231680}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd614016af0, m_iCount = 140555226811632}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 40013280}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fd618443fe0 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 270, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#8  0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fd80298cad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fd618599090: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fd6184462c0 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#9  0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fd5905d8cf0, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#10 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#11 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x2628de0: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x267a200 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x270dfc8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x2714b78, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x262ae70, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fd618598f60, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fd5d49a9960, m_iCount = 1000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 1024}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd61839e090, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd618598e50, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fd618598f00, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#12 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fd6140161c8, sQuery=..., tOutput=..., uPacketID=@0x7fd614016f89: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fd80298e160}
        tCrashQuery = {
          m_pQuery = 0x7fd618456fd0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 817550, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = "\000found_rows_totalH{\"queries\":0, \"avg\":\"-\", \"min\":\"-\", \"max\":\"-\", \"pct95\":\"-\", \"pct99\":\"-\"}", '\000' <repeats 4005 times>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fd614016f89, m_tOut = @0x7fd802990c70, m_iCID = 327, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fd618443b18, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#13 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fd614016f89: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#14 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fd614011900) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fd618456fd0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 817550, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fd61501bdc0 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fd6150e374f "d78e2e8 b80bb7740288fda1f201890375a60c8f 46d89b44aba0c8bec685bae6bc545605'),(81227414383,108336751,31,636408175,111,86,186083783,0,323234821,4082514341,0,0,72091,791846,0,0,1567064196,1564054740,15670"..., m_bError = false, m_iLen = 817551}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fd618440a40 "\030\a", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 52, m_sClientName = {m_sValue = 0x7fd618446bf0 "127.0.0.1:53434", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 327, m_iTid = 28009, m_tmConnect = 1580441021087874, m_tmStart = 1580441021100305, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fd7fccb9ce0, m_pNext = 0x7fd7fc686ce0}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fd6181a6d80 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 1048576, m_iUsed = 817550, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fd618456fd0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#15 0x00000000006fe010 in TickImpl (this=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fd614e1d320
#16 CSphThdPool::Tick (pArg=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x270e440
#17 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x270ec20) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x270ec20
        pCleanup = <optimized out>
#18 0x00007fd802688e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#19 0x00007fd800ea188d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 2 (Thread 0x7fd7fcdce700 (LWP 28016)):
#0  0x000000000082b2b4 in UnzipT<unsigned int> (
    pIn=0x2f307e0 "\267\034\002\001\v\001\361=\002\001\022\001Ғ\002\002\001\340\001\001\345\001\002\001&\001X\002\001!\001\n\002\001#\001\006\002\001\006\001\002\002\001\036\001\025\002\001\227\200\200\004\001\003\002\001\031\001\004\002\001\034\001\006\002\001\b\001\034\002\001*\001\020\002\001,\001\272\026\002\001)\001\341\b\002\001\324\a\001j\002\001\020\001\a\002\004\327\266\"\005\002\001\003\001\237\243\001\002\001@\001\227\351\001\002\001\b\001\275\205\001\002\001'\001\262\316\002 \001\201\200\200\004\005\367\221\003 \001\201\200\200\004\005\214\265\002\002\001\n\001!\002\001\016\001\375% \001\201\200\200\004\005\251\205\001\001\001\002", pValue=<optimized out>)
    at /root/manticore_gitlab/src/sphinxrt.cpp:134
        uValue = 0
        bIn = <optimized out>
        iOff = 0
#1  RtDocReader_t::UnzipDoc (this=this@entry=0x7fd7fcdc8ee0) at /root/manticore_gitlab/src/sphinxrt.cpp:382
        a = 1000
        b = <optimized out>
        pIn = <optimized out>
        tDeltaID = <optimized out>
#2  0x0000000000834693 in RtIndex_c::CopyWord (this=this@entry=0x2628db0, tDst=..., tSrc=..., tOutDoc=..., tInDoc=..., tWord=..., dRowMap=...)
    at /root/manticore_gitlab/src/sphinxrt.cpp:2243
        pDoc = <optimized out>
        tNewRowID = <optimized out>
        tDoc = {m_tRowID = 48377, m_uDocFields = 2, m_uHits = 1, m_uHit = 16777217}
#3  0x000000000083a0de in RtIndex_c::MergeKeywords (this=this@entry=0x2628db0, tSeg=..., tSeg1=..., tSeg2=..., dRowMap1=..., dRowMap2=...)
    at /root/manticore_gitlab/src/sphinxrt.cpp:2490
        tInDoc = {
          m_pDocs = 0x2f307da "i\002\001\350\a\001\267\034\002\001\v\001\361=\002\001\022\001Ғ\002\002\001\340\001\001\345\001\002\001&\001X\002\001!\001\n\002\001#\001\006\002\001\006\001\002\002\001\036\001\025\002\001\227\200\200\004\001\003\002\001\031\001\004\002\001\034\001\006\002\001\b\001\034\002\001*\001\020\002\001,\001\272\026\002\001)\001\341\b\002\001\324\a\001j\002\001\020\001\a\002\004\327\266\"\005\002\001\003\001\237\243\001\002\001@\001\227\351\001\002\001\b\001\275\205\001\002\001'\001\262\316\002 \001\201\200\200\004\005\367\221\003 \001\201\200\200\004\005\214\265\002\002\001\n\001!\002\001\016\001\375% \001\201\200\200\004\005\251\205\001\001\001\002", m_iLeft = 2, m_tDoc = {m_tRowID = 47482, m_uDocFields = 2, m_uHits = 1, m_uHit = 16777217}}
        iCmp = 1
        tOutDoc = {m_pDocs = 0x7fd6044c2838, m_tLastRowID = 48377}
        tWord = {{m_uWordID = 140565637009536, m_sWord = 0x7fd7fcdc9080 "\bdelivery", m_null = 140565637009536}, m_uDocs = 64, m_uHits = 69, m_uDoc = 3333946}
        tOut = {m_pWords = 0x7fd6044c27f0, m_pCheckpoints = 0x7fd6044c2808, m_pKeywordCheckpoints = 0x7fd6044c28a8, m_tLastKeyword = {
            m_sLastKeyword = "delivers.g.yterriniz84ebb68962a1.jpg......L\004\326\177\000\000\340\215)\004\326\177\000\000\200\216\003\000\000\000\000\000+\204\000\000\000\000\000\000\n!\000\000\000\000\000\000!\004\000\000\000\000\000\000:!\000\000|\004\000\000Џ\334\374\327\177\000\000\204\000\000\000\000\000\000\000\020\000\000\000\000\000\000\000\362\000\000\000\207\000\000\000\002", m_iLastLen = 9}, m_uLastWordID = 140565637009536, m_uLastDoc = 3333928, m_iWords = 2, m_bKeywordDict = true, 
          m_iWordsCheckpoint = 48}
        tIn1 = {
          m_tPackedWord = "\006demery\000n\000n\000\000s\000d\000c\000\067\062a02b9d78e2e8\000\070\064\063e2776d\000\000\000\000\000\000\003\002\003\004\005\006\a\b\t\n\v\f\r\016\017P\350\026\000\000\000\000\000\001\000\001\000\034\035\036\037\000@\000\000\000\000\000\000\000\b\000\000\000\000\000\000\060@\000\000[\b\000\000\200\220\334\374\327\177\000\000\000\001\000\000\000\000\000\000 \000\000\000\000\000\000\000n\001", 
          m_pCur = 0x7fd5bc1d8143 "\203o\001\001\006\240den\002\002\272\273\002\243ell\001\001\v\243gan\002\t\006\246nya\001\001\v\223is\002\002\a\203n\001\001\f\204.\001\001\006\224is\004\004\t\223se\001\001\025\243tro\001\001\006\243ver\001\001\006\243zil\001\001\006\302posit\001\001\006\243rez\001\001\006\223th\003\003\006\202r\f\r\021\223ek\001\001?\263rick\001\001\005\202s\001\001\006\263hone\001\001\006\303igned\004\004\005\244re.\001\001\026\244sto\003\003\t\343jardins\003\003\021\363perately\001\001\021\202t\001\001\005\343ermines\001\001\006"..., 
          m_pMax = 0x7fd5bc1dcfa6 "\343\001\002\002\355B\177\002\001\016\001\361\001\002\001\005\001\263\004\002\001\205\200\200\004\001\276\001\002\001\002\001\177\002\001\023\001h\002\001\a\001\336\002\002\001\003\001\226\005\002\001\b\001\211\004\002\001\005\001\317\001\002\001\r\001\341\004\002\001\r\001\215\004\002\001\001\001\207\005\002\001\f\001\242\002\002\001\034\001\316\006\002\001\005\001\372\006\002\001\f\001\360\004\002\001\030\001\337\003\002\001\n\001\214\001\002\001\t\001\342\a\002\001\262\200\200\004\001\312\a\002\001\002\001\271\001\002\001\004\001\315\a\002\001\b\001\334\003\002\001\"\001\260\001\002\001\204\200\200\004\001\262\001\002\001\n\001\363\003\002\001\211\200\200\004\001\201\004\002\001\016\001\244\004\002\001\001\001\205\006\002\001\001\001\207\005\002\001\002"..., m_tWord = {{m_uWordID = 140565637009344, 
              m_sWord = 0x7fd7fcdc8fc0 "\006demery", m_null = 140565637009344}, m_uDocs = 1, m_uHits = 1, m_uDoc = 40366}, m_iWords = 46, m_bWordDict = true, 
          m_iWordsCheckpoint = 48, m_iCheckpoint = 39}
        pWords2 = 0x7fd7fcdc9118
        tIn2 = {
          m_tPackedWord = "\bdelivery\000\000\000\000\000e\000\000\000ni\000\000\064ebb68962a1.jpg\000.....\000\000\000\000\000ߐ\334\374\327\177\000\000\r\000\000\000\000\000\000\000|\000\000\000\327\177\000\000\200&L\004\326\177\000\000}\000\000\000\326\177\000\000\227\356\207\000\000\000\000\000\320'L\004\326\177\000\000\254\221\334\374\327\177\000\000\200vw\005\326\177\000\000 \000\000\004\326\177\000\000\344\031", 
          m_pCur = 0x7fd605d75bb6 "\210.\017\017\360\002\203l\005\bV\344aferrah\001\001\036\324thorak\001\001\a\243ocx\001\001\n\204k\002\002\n\244n87\001\001\f\225ge\t\n\t\243phi\001\001:\244i13\002\002\n\203t\002\004\022\204a\017\022\016\365velocity\001\001]\306mambo\001\001\n\340deluded\002\002\256\356\310\001\207.\001\001\r\224ge\002\002\t\244man\001\001\020\224na\001\001\n\224si\005\a\n\226on\003\003\037\230al\f\f\020\212.\002\002F\233..\001\001\024\210s\002\002\b\204x\001\002\r\205e\033\034\b\223va\001\003\236\001\204e\001\001\a\263yha"..., 
          m_pMax = 0x7fd605e33a79 "\b\001\002\002\001\026\001\b\002\001N\001\317\005\002\001\f\001\373\034\002\001\022\001\341t\002\001\r\001\002\002\001\022\001\324\005\002\002\361\311.\375\070\002\001\a\001\002\002\001\215\003\001\202N\002\001\a\001\003\002\002\366\311.\002\002\001\a\001\266=\002\001\a\001\271\017\002\001\a\001\241\016\002\001\a\001\216\061\002\002\373\311.\002\002\002\200\312.\002\002\001\a\001\001\002\002\205\312.\372\001\002\002\212\312.\001\002\001\a\001\002\002\001\a\001\001\002\001\a\001\001\002\001\a\001\001\002\002\217\312.\254S\002\001P\001\211\355\002\002\001\236\002\001\352\241\002\002\001\271\001\001\357\305\001 \001\201\200\200\004\005\261\364\001\002\001\004\001\276\026\002\001\277\001\001\335#\002\001\031\001\376F"..., m_tWord = {{m_uWordID = 140565637009536, m_sWord = 0x7fd7fcdc9080 "\bdelivery", 
              m_null = 140565637009536}, m_uDocs = 66, m_uHits = 71, m_uDoc = 3290182}, m_iWords = 33, m_bWordDict = true, m_iWordsCheckpoint = 48, m_iCheckpoint = 1780}
        pWords1 = 0x7fd7fcdc9058
#4  0x000000000083d7ed in RtIndex_c::MergeSegments (this=this@entry=0x2628db0, pSeg1=0x7fd5bd7af0c0, pSeg2=0x7fd6044c2680, bHasMorphology=bHasMorphology@entry=false)
    at /root/manticore_gitlab/src/sphinxrt.cpp:2569
        dRows = @0x7fd6044c2878: {<VecTraits_T<unsigned int>> = {m_pData = 0x7fd604f36be0, m_iCount = 848000}, <sph::DefaultStorage_T<unsigned int>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::TightRelimit> = {<sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
            static SLOW_GROW_TRESHOLD = 1024}, m_iLimit = 868777}
        dBlobs = @0x7fd6044c2890: {<VecTraits_T<unsigned char>> = {m_pData = 0x7fd605a14b30 "", m_iCount = 341268}, <sph::DefaultStorage_T<unsigned char>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::TightRelimit> = {<sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
            static SLOW_GROW_TRESHOLD = 1024}, m_iLimit = 349143}
        dRowMap2 = {<VecTraits_T<unsigned int>> = {m_pData = 0x7fd60483ee90, m_iCount = 52000}, <sph::DefaultStorage_T<unsigned int>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 65536}
        tNextRowID = 53000
        pSeg = 0x7fd6044c27d0
        dRowMap1 = {<VecTraits_T<unsigned int>> = {m_pData = 0x7fd604361cb0, m_iCount = 1000}, <sph::DefaultStorage_T<unsigned int>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 1024}
        nBlobAttrs = <optimized out>
#5  0x000000000083d9e6 in RtIndex_c::MergeDoubleBufSegments (this=this@entry=0x2628db0) at /root/manticore_gitlab/src/sphinxrt.cpp:3678
        tMerged = <optimized out>
        i = 84
        tLast = {m_pPtr = 0x7fd6044c2680}
        bHasMorphology = false
#6  0x0000000000849ba7 in RtIndex_c::SaveDiskChunk (this=this@entry=0x2628db0, iTID=iTID@entry=0, tGuard=..., tStats=..., bForce=bForce@entry=false, 
    iSavedChunkId=iSavedChunkId@entry=@0x7fd7fcdc93ec: -1) at /root/manticore_gitlab/src/sphinxrt.cpp:3720
        tmSave = 1580441018298671
        dChunkNames = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fd604295720, m_iCount = 1}, <sph::DefaultStorage_T<int>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}
        pDiskChunk = 0x7fd6042add90
        sChunk = {m_sValue = 0x800 <Address 0x800 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        sReason = <optimized out>
        sNewChunk = {m_sValue = 0x7fd6040b81f0 "rt.0", static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        tLast = {m_pPtr = 0x7fd6044c2680}
#7  0x000000000084ac31 in RtIndex_c::CommitReplayable (this=this@entry=0x2628db0, pNewSeg=pNewSeg@entry=0x7fd604294c20, dAccKlist=..., 
    pTotalKilled=pTotalKilled@entry=0x0, bForceDump=bForceDump@entry=false) at /root/manticore_gitlab/src/sphinxrt.cpp:2927
        tStat2Dump = {m_Stats = {m_iTotalDocuments = 3220000, m_iTotalBytes = 1518489910}, m_dFieldLens = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<long>> = {
              m_pData = 0x7fd604294e80, m_iCount = 256}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <No data fields>}}
        tWriteLock = <optimized out>
        tChunksWLock = <optimized out>
        pDiskChunk = <optimized out>
        tGuard = {<ISphNoncopyable> = {<No data fields>}, m_dRamChunks = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {
              m_pData = 0x7fd604294d78, m_iCount = 32}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <No data fields>}, m_dDiskChunks = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<CSphIndex const*>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphIndex const*>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <No data fields>}, m_pReading = 0x0}
        iSavedChunkId = -1
        dLens = {<VecTraits_T<long>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dSegments = {<VecTraits_T<CSphRefcountedPtr<RtSegment_t> >> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphRefcountedPtr<RtSegment_t> >> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        iTotalKilled = <optimized out>
        bSavedOk = false
        iNewDocs = 1000
        iFirstFieldLenAttr = <optimized out>
        iTID = 0
        iMemLimit = 1073741824
        bDump = true
#8  0x000000000084afbc in RtIndex_c::Commit (this=0x2628db0, pDeleted=0x0, pAccExt=<optimized out>) at /root/manticore_gitlab/src/sphinxrt.cpp:2630
        pAcc = 0x7fd5f4078930
        pNewSeg = {m_pPtr = 0x7fd604294c20}
        bOk = <optimized out>
        sWarning = {m_sValue = 0x20 <Address 0x20 out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
#9  0x0000000000613ff3 in CommitMonitor_c::CommitNonEmptyCmds (this=this@entry=0x7fd7fcdc9ad0, pIndex=0x2628db0, tCmd=..., bOnlyTruncate=bOnlyTruncate@entry=false, 
    sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1866
        tSetup = {m_pTokenizer = {m_pPtr = 0x7fd6042c0d10}, m_pDict = {m_pPtr = 0x0}, m_tIndex = {<CSphSourceSettings> = {m_iMinPrefixLen = -52650624, 
              m_iMinInfixLen = 32727, m_iMaxSubstringLen = 40013232, m_iBoundaryStep = 0, m_bIndexExactWords = true, m_iOvershortStep = 0, m_iStopwordStep = -200832720, 
              m_bIndexSP = 213, m_bIndexFieldLens = 127, m_dPrefixFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd6042c0d10, 
                  m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565637012864}, 
              m_dInfixFields = {<VecTraits_T<CSphString>> = {
                  m_pData = 0x835d31 <RtIndex_c::AddDocument(VecTraits_T<VecTraits_T<char const> > const&, CSphMatch&, bool, CSphString const&, char const**, VecTraits_T<long> const&, CSphString&, CSphString&, RtAccum_t*)+401>, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 140565637012544}, 
              m_dStoredFields = {<VecTraits_T<CSphString>> = {m_pData = 0x7fd614e9b8f0, m_iCount = 140556898896176}, <sph::DefaultStorage_T<CSphString>> = {
                  static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
                m_iLimit = 0}}, <DocstoreSettings_t> = {m_eCompression = NONE, m_iCompressionLevel = 0, m_uBlockSize = 40013280}, m_eHitFormat = SPH_HIT_FORMAT_PLAIN, 
            m_bHtmlStrip = false, m_sHtmlIndexAttrs = {m_sValue = 0x7fd6041b87c0 "", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_sHtmlRemoveElements = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_sZones = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_eHitless = SPH_HITLESS_NONE, m_sHitlessFiles = {m_sValue = 0x0, 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVerbose = false, m_iEmbeddedLimit = 0, m_tBlobUpdateSpace = 0, 
            m_iSkiplistBlockSize = 0, m_tKlistTargets = {m_dTargets = {<VecTraits_T<KillListTarget_t>> = {m_pData = 0x9d0ed0 <vtable for BlobSource_i+16>, 
                  m_iCount = 8589934593}, <sph::DefaultStorage_T<KillListTarget_t>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, m_eBigramIndex = SPH_BIGRAM_NONE, 
            m_sBigramWords = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, m_dBigramWords = {<VecTraits_T<CSphString>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uAotFilterMask = 0, 
            m_ePreprocessor = NONE, m_sIndexTokenFilter = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}}, 
          m_pFieldFilter = {m_pPtr = 0x0}, m_tSchema = {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x0}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 999}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                  m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                  static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
            static BUCKET_COUNT = 256, m_dBuckets = {0 <repeats 36 times>, 1, 0, 0, 0, 315, 0, 0, 0, 3184, 155, 0 <repeats 26 times>, 65535 <repeats 184 times>}, 
            m_sName = {m_sValue = 0xffffffffffffffff <Address 0xffffffffffffffff out of bounds>, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
            m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = -1, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, 
                m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<CSphColumnInfo>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}, 
            m_dStaticUsed = {<VecTraits_T<int>> = {m_pData = 0xffffffffffffffff, m_iCount = -1}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = -1}}}
        bSame = <optimized out>
#10 0x00000000006142f8 in CommitMonitor_c::Commit (this=this@entry=0x7fd7fcdc9ad0, sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1833
        tCmd = @0x7fd6042996d0: {m_eCommand = RT_TRX, m_sIndex = {m_sValue = 0x7fd6041baa80 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}, 
          m_sCluster = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, 
          m_pStored = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_dDeleteQueries = {<VecTraits_T<long>> = {m_pData = 0x0, 
              m_iCount = 0}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {
              static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_sDeleteTags = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, 
            static SAFETY_GAP = 4}, m_bReconfigure = false, m_tReconfigure = {<ISphNoncopyable> = {<No data fields>}, m_pPtr = 0x0}, m_bCheckIndex = true, 
          m_bIsolated = false, m_pUpdateAPI = 0x0, m_bBlobUpdate = false, m_pUpdateCond = 0x0}
        pServed = <optimized out>
        bTruncate = false
        bOnlyTruncate = false
        rLocked = <optimized out>
#11 0x0000000000620ac4 in HandleCmdReplicate (tAcc=..., sError=..., pDeletedCount=pDeletedCount@entry=0x0, pWarning=pWarning@entry=0x0, pUpdated=pUpdated@entry=0x0, 
    pThd=pThd@entry=0x0) at /root/manticore_gitlab/src/searchdreplication.cpp:1611
        bPrimary = <optimized out>
        bTOI = <optimized out>
        ppCluster = <optimized out>
        tMonitor = {m_tAcc = @0x7fd5f4078930, m_pDeletedCount = 0x0, m_pWarning = 0x0, m_pUpdated = 0x0, m_pThd = 0x0}
        bUpdate = <optimized out>
        iKeysCount = <optimized out>
        dBufQueries = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        dBufProxy = <optimized out>
        iKey = <optimized out>
        tQueries = {ptr = 0x0, len = 0}
        tCmdCluster = <optimized out>
        eClusterState = <optimized out>
        uIndexHash = <optimized out>
        dBufKeys = <optimized out>
        dKeys = <optimized out>
#12 0x0000000000621c6f in HandleCmdReplicate (tAcc=..., sError=...) at /root/manticore_gitlab/src/searchdreplication.cpp:1797
No locals.
#13 0x00000000005c50f9 in sphHandleMysqlInsert (tOut=..., tStmt=..., bReplace=<optimized out>, bCommit=<optimized out>, sWarning=..., tAcc=..., 
    eCollation=SPH_COLLATION_LIBC_CI, dLastIds=...) at /root/manticore_gitlab/src/searchd.cpp:12619
        pServed = <optimized out>
        tSchema = @0x2628de0: {<CSphSchemaHelper> = {<ISphSchema> = {_vptr.ISphSchema = 0x9d2790 <vtable for CSphSchema+16>}, m_dDataPtrAttrs = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_dDynamicUsed = {<VecTraits_T<int>> = {
                m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
                static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}, static HASH_THRESH = 32, 
          static BUCKET_COUNT = 256, m_dBuckets = {65535 <repeats 256 times>}, m_sName = {m_sValue = 0x267a200 "rt", static EMPTY = 0xda5000 <CSphString::EMPTY> "", 
            static SAFETY_GAP = 4}, m_iFirstFieldLenAttr = -1, m_iLastFieldLenAttr = -1, m_iRowSize = 16, m_dFields = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x270dfc8, m_iCount = 7}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}, m_dAttrs = {<VecTraits_T<CSphColumnInfo>> = {
              m_pData = 0x2714b78, m_iCount = 21}, <sph::DefaultStorage_T<CSphColumnInfo>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}, m_dStaticUsed = {<VecTraits_T<int>> = {
              m_pData = 0x262ae70, m_iCount = 16}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 16}}
        iSchemaSz = <optimized out>
        pDocid = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        dMvas = {<VecTraits_T<long>> = {m_pData = 0x7fd604294bd0, m_iCount = 2}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        tIdLoc = {m_iBitOffset = 0, m_iBitCount = 64, m_iBlobAttrId = -1, m_nBlobAttrs = 0, m_bDynamic = true}
        dIds = {<VecTraits_T<long>> = {m_pData = 0x7fd5c8f0be00, m_iCount = 1000}, <sph::DefaultStorage_T<long>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 1024}
        iExp = <optimized out>
        iLastInsertId = <optimized out>
        pIndex = <optimized out>
        dAttrSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd6041bade0, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 32}
        dFieldSchema = {<VecTraits_T<int>> = {m_pData = 0x7fd604294ac0, m_iCount = 7}, <sph::DefaultStorage_T<int>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        dFieldAttrs = <optimized out>
        bPq = <optimized out>
        tSchemaInt = <optimized out>
        iIdIndex = <optimized out>
        dStrings = {<VecTraits_T<char const*>> = {m_pData = 0x0, m_iCount = <optimized out>}, <sph::DefaultStorage_T<char const*>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, 
          m_iLimit = <optimized out>}
        tStrings = {m_dPackedData = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, 
          m_dOff = {<ISphNoncopyable> = {<No data fields>}, <VecTraits_T<int>> = {m_pData = 0x7fd604294b70, m_iCount = 21}, <sph::DefaultStorage_T<int>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <No data fields>}, m_dParserBuf = {<VecTraits_T<unsigned char>> = {
              m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {static is_constructed = <optimized out>, 
              static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}
        pAccum = <optimized out>
#14 0x00000000005fb2c3 in CSphinxqlSession::Execute (this=this@entry=0x7fd614e9afc8, sQuery=..., tOutput=..., uPacketID=@0x7fd614e9bd89: 1 '\001', tThd=...)
    at /root/manticore_gitlab/src/searchd.cpp:16680
        tErrorReporter = {<StmtErrorReporter_i> = {_vptr.StmtErrorReporter_i = 0x9b1490 <vtable for StmtErrorReporter_c+16>}, m_tRowBuffer = @0x7fd7fcdcb160}
        tCrashQuery = {
          m_pQuery = 0x7fd6040028d0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 743654, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        bParsedOK = <optimized out>
        eStmt = STMT_INSERT
        tOut = {<ISphNoncopyable> = {<No data fields>}, <IDataTupleter> = {
            _vptr.IDataTupleter = 0x9b1410 <vtable for SqlRowBuffer_c+16>}, <sph::Vector_T<unsigned char, sph::DefaultCopy_T<unsigned char>, sph::DefaultRelimit, sph::LazyStorage_T<unsigned char, 4096> >> = {<VecTraits_T<unsigned char>> = {m_pData = 0x0, m_iCount = 0}, <sph::LazyStorage_T<unsigned char, 4096>> = {
              static iSTATICSIZE = 4096, static is_constructed = <optimized out>, static is_owned = <optimized out>, 
              m_dData = "\000found_rows_totalH{\"queries\":0, \"avg\":\"-\", \"min\":\"-\", \"max\":\"-\", \"pct95\":\"-\", \"pct99\":\"-\"}", '\000' <repeats 2190 times>...}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}, m_uPacketID = @0x7fd614e9bd89, m_tOut = @0x7fd7fcdcdc70, m_iCID = 307, m_bAutoCommit = true}
        dStmt = {<VecTraits_T<SqlStmt_t>> = {m_pData = 0x7fd6041b82f8, m_iCount = 1}, <sph::DefaultStorage_T<SqlStmt_t>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        ePrevStmt = STMT_INSERT
#15 0x00000000005d4885 in LoopClientMySQL (uPacketID=@0x7fd614e9bd89: 1 '\001', tSession=..., sQuery=..., iPacketLen=<optimized out>, bProfile=bProfile@entry=false, 
    tThd=..., tIn=..., tOut=...) at /root/manticore_gitlab/src/searchd.cpp:17348
        uMysqlCmd = 3 '\003'
        sError = {m_sValue = 0x0, static EMPTY = 0xda5000 <CSphString::EMPTY> "", static SAFETY_GAP = 4}
        bKeepProfile = true
#16 0x00000000005d522e in ThdJobQL_t::Call (this=0x7fd6140197a0) at /root/manticore_gitlab/src/searchd.cpp:22094
        tQueryTLS = {
          m_pQuery = 0x7fd6040028d0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 743654, m_uCMD = 0, m_uVer = 0, m_bMySQL = true, m_bHttp = false, m_pIndex = 0x0, 
          m_iIndexLen = 0}
        iTid = <optimized out>
        tIn = {_vptr.InputBuffer_c = 0x9b0ed0 <vtable for InputBuffer_c+16>, 
          m_pBuf = 0x7fd614c9c120 "\003insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,"..., 
          m_pCur = 0x7fd614d51a07 ">", ' ' <repeats 11 times>, "</td>", ' ' <repeats 11 times>, "<td class=\\\"amt\\\" style=\\\"height: 22px; padding: 6px 0px; border-bottom-style: solid; border-bottom-color: #dbdbdb; border-left-style: solid; border-left-color: #dbdbdb; te"..., m_bError = false, m_iLen = 743655}
        tOut = {<ISphRefcountedMT> = {<ISphNoncopyable> = {<No data fields>}, _vptr.ISphRefcountedMT = 0x9b0e70 <vtable for ISphOutputBuffer+16>, m_iRefCount = {
              m_iValue = 1}}, m_dBuf = {<VecTraits_T<unsigned char>> = {m_pData = 0x7fd6040008c0 "H\b", m_iCount = 0}, <sph::DefaultStorage_T<unsigned char>> = {
              static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8192}}
        bSendResponse = true
        tThdDesc = {<Threads::ThdInfo_t> = {m_eProto = MYSQL41, m_iClientSock = 48, m_sClientName = {m_sValue = 0x7fd6042c4a60 "127.0.0.1:53354", 
              static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}, m_bVip = false, m_eThdState = QUERY, 
            m_sCommand = 0x9b3d93 "insert", m_iConnID = 307, m_iTid = 28016, m_tmConnect = 1580441017409348, m_tmStart = 1580441017421154, m_bSystem = false, 
            m_iCookie = 0}, <ListNode_t> = {m_pPrev = 0x7fd7fc8f3ce0, m_pNext = 0xdab480 <g_dThd>}, m_tThd = 0, m_tQueryLock = {<ISphNoncopyable> = {<No data fields>}, 
            m_tMutex = {__data = {__lock = 0, __count = 0, __owner = 0, __nusers = 0, __kind = 0, __spins = 0, __elision = 0, __list = {__prev = 0x0, __next = 0x0}}, 
              __size = '\000' <repeats 39 times>, __align = 0}}, m_pQuery = 0x0, m_sBuf = {<ISphNoncopyable> = {<No data fields>}, static GROW_STEP = 64 '@', 
            m_szBuffer = 0x7fd6040b82e0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., m_iSize = 1048576, m_iUsed = 743654, 
            m_dDelimiters = {<VecTraits_T<StringBuilder_c::LazyComma_c>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<StringBuilder_c::LazyComma_c>> = {
                static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}}}
        sQuery = {
          m_sValue = 0x7fd6040028d0 "insert into rt (id,forum_id,language_id,author_id,table_group,country_id,site_id,is_thread_start,thread_crc,cache_author_crc,source,isthread,domain_id,subdomain_id,mod_is,is_adult,inserted,published,c"..., static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bProfile = false
#17 0x00000000006fe010 in TickImpl (this=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2055
        pJob = 0x7fd614015d40
#18 CSphThdPool::Tick (pArg=0x270e440) at /root/manticore_gitlab/src/sphinxstd.cpp:2021
        pPool = 0x270e440
#19 0x00000000006f9735 in sphThreadProcWrapper (pArg=0x26cd8b0) at /root/manticore_gitlab/src/sphinxstd.cpp:884
        cTopOfMyStack = 0 '\000'
        pCall = 0x26cd8b0
        pCleanup = <optimized out>
#20 0x00007fd802688e65 in start_thread () from /lib64/libpthread.so.0
No symbol table info available.
#21 0x00007fd800ea188d in clone () from /lib64/libc.so.6
No symbol table info available.

Thread 1 (Thread 0x7fd802a9e880 (LWP 28006)):
#0  0x00007fd800e98953 in select () from /lib64/libc.so.6
No symbol table info available.
#1  0x0000000000646a74 in sphSleepMsec (iMsec=<optimized out>) at /root/manticore_gitlab/src/sphinx.cpp:2503
        tvTimeout = {tv_sec = 0, tv_usec = 355453}
#2  0x000000000064e1d5 in sphSleepMsec (iMsec=iMsec@entry=500) at /root/manticore_gitlab/src/sphinx.cpp:2492
No locals.
#3  0x00000000005c6272 in TickHead () at /root/manticore_gitlab/src/searchd.cpp:20037
        tmSleep = 500
        iClientSock = 774911290
        sClientName = "0\254\201>\376\177\000\000`\253\201>\376\177\000\000\060\254\201>\376\177"
        pListener = <optimized out>
        pThd = <optimized out>
#4  0x00000000005c8f0a in ServiceMain (argc=argc@entry=4, argv=argv@entry=0x7ffe3e81c288) at /root/manticore_gitlab/src/searchd.cpp:23602
        iRtFlushPeriod = <optimized out>
        dExactIndexes = {<VecTraits_T<CSphString>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        sLogFormat = <optimized out>
        dFailed = {<VecTraits_T<CSphString>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        hIndexes = {m_dHash = {0x0 <repeats 256 times>}, m_pFirstByOrder = 0x0, m_pLastByOrder = 0x0, m_iLength = 0, m_pIterator = 0x0}
        tQueryTLS = {m_pQuery = 0x0, m_iSize = 0, m_uCMD = 0, m_uVer = 0, m_bMySQL = false, m_bHttp = false, m_pIndex = 0x0, m_iIndexLen = 0}
        dOptIndexes = {<VecTraits_T<CSphString>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<CSphString>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        bTestThdPoolMode = <optimized out>
        bOptDebugQlog = <optimized out>
        bOptListen = <optimized out>
        sError = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        hSearchd = @0x2619368: {<CSphOrderedHash<CSphVariant, CSphString, CSphStrHashFunc, 256>> = {m_dHash = {0x0 <repeats 11 times>, 0x261a650, 0x0, 0x0, 0x0, 
              0x261aab0, 0x0, 0x0, 0x261a5b0, 0x2619d10, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x261a970, 0x0, 0x0, 0x2619ef0, 0x0, 0x261a2b0, 0x0 <repeats 13 times>, 
              0x261a470, 0x0 <repeats 34 times>, 0x261a830, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x261aa10, 0x0 <repeats 15 times>, 0x2619f90, 0x261ab50, 
              0x0 <repeats 31 times>, 0x261a3d0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x261a210, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x261a030, 
              0x0 <repeats 11 times>, 0x261a0d0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x261a790, 0x0, 0x0, 0x0, 0x0, 0x0, 0x261abf0, 0x0, 0x0, 0x0, 0x0, 
              0x261a350, 0x0, 0x0, 0x0, 0x0, 0x2619db0, 0x0 <repeats 19 times>, 0x2619e50, 0x0 <repeats 17 times>, 0x261a510, 0x0 <repeats 12 times>, 0x261a170, 0x0, 
              0x0, 0x0, 0x0, 0x2619c10, 0x0, 0x0}, m_pFirstByOrder = 0x2619c10, m_pLastByOrder = 0x261abf0, m_iLength = 26, m_pIterator = 0x0}, m_iTag = 27}
        iOptPort = <optimized out>
        dListenerDescs = {<VecTraits_T<ListenerDesc_t>> = {m_pData = 0x2612728, m_iCount = 2}, <sph::DefaultStorage_T<ListenerDesc_t>> = {
            static is_constructed = <optimized out>, static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 8}
        bOptStop = <optimized out>
        i = <optimized out>
        hSearchdpre = <optimized out>
        bThdPool = <optimized out>
        bVisualLoad = false
        bWatched = true
        thMain = {m_tRoleRef = @0xd9a5c0}
        bOptStatus = <optimized out>
        sOptListen = {m_sValue = 0x0, static EMPTY = <same as static member of an already seen type>, static SAFETY_GAP = 4}
        bTestMode = <optimized out>
        bForcedPreread = <optimized out>
        bNewClusterForce = false
        hConf = @0xd9e580: {m_dHash = {0x0, 0x2601440, 0x0 <repeats 90 times>, 0x2618b10, 0x0 <repeats 22 times>, 0x26166e0, 0x0 <repeats 80 times>, 0x26178f0, 
            0x0 <repeats 59 times>}, m_pFirstByOrder = 0x2601440, m_pLastByOrder = 0x2618b10, m_iLength = 4, m_pIterator = 0x0}
        sEndian = <optimized out>
        conf = {m_dHash = {0x0 <repeats 256 times>}, m_pFirstByOrder = 0x0, m_pLastByOrder = 0x0, m_iLength = 0, m_pIterator = 0x0}
        bNewCluster = false
        uReplayFlags = <optimized out>
        bOptStopWait = <optimized out>
        bOptPIDFile = <optimized out>
        bOptPort = <optimized out>
        dConfig = {<VecTraits_T<char>> = {m_pData = 0x0, m_iCount = 0}, <sph::DefaultStorage_T<char>> = {static is_constructed = <optimized out>, 
            static is_owned = <optimized out>}, <sph::DefaultRelimit> = {static MAGIC_INITIAL_LIMIT = 8}, m_iLimit = 0}
        iDevNull = 3
#5  0x00000000005718f9 in mainimpl (argv=0x7ffe3e81c288, argc=4) at /root/manticore_gitlab/src/searchd.cpp:23662
        cTopOfMainStack = 0 '\000'
#6  main (argc=4, argv=0x7ffe3e81c288) at /root/manticore_gitlab/src/searchd.cpp:23668
No locals.
